[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415 Geospatial Analytics and Applications (AY24/25 T1)",
    "section": "",
    "text": "In this website, you will find my relevant coursework for IS415 Geospatial Analytics and Applications."
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html",
    "href": "TakehomeEx/THE03C/THE03C.html",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "",
    "text": "Jakarta, the capital of Indonesia, is a bustling metropolis with a diverse population and a complex urban landscape. The city’s educational infrastructure plays a crucial role in shaping the future of its residents. In this analysis, we will explore the spatial distribution of educational facilities across Jakarta to understand the accessibility and equity of educational resources.\n\n\n\nOur project encompasses three primary areas of investigation.\n\nSpatial Points Patterns Analysis of Distribution of Schools:\n\n\nExamination of school distribution patterns across Jakarta\nIdentification of areas with significant clustering or dispersion\nAssessment of spatial relationships between different types of educational facilities\n\n\nLISA and Hot-spot, Cold-spot Analysis\n\n\nIdentification of Local Indicators of Spatial Association (LISA) clusters\nDetection of hot-spots and cold-spots of schools\nInvestigation of spatial autocorrelation in the distribution of schools\n\n\nGeographically Weighted Regression Modeling\n\n\nExploration of relationships between education levels and school availability and accessibility\nAssessment of spatial variations across different districts\nInvestigation of socioeconomic factors influencing school distribution patterns\n\nThis research aims to provide insights into the spatial dynamics of educational facilities in Jakarta and inform policy decisions to enhance educational equity and access. By combining spatial analysis techniques with statistical modeling, we can uncover hidden patterns and relationships that are crucial for effective urban planning and resource allocation.\n\n\n\nIndonesia’s education system is structured into several stages:\nPrimary Education\n\nElementary School (SD): Compulsory education for children aged 7-12 years\nSpecial Elementary School (SDLB): Schools for children with special needs\n\nSecondary Education\n\nJunior High School (SMP): Follows elementary school and is for students aged 13-15 years\nSpecial Junior High School (SMPLB): Schools for students with special needs\n\nHigh School Education\n\nSenior High School (SMA): Follows junior high school and is for students aged 16-18 years\nVocational High School (SMK): Focuses on vocational training and skills development\nSpecial Senior High School (SMLB): Schools for students with special needs\n\nSpecial Education\n\nSpecial Education (SLB): Schools for children with disabilities\n\nFor the purpose of this analysis, we have combined the types of schools into four main types. Note that Junior High Schools may also be interchangeably referred to as Secondary Schools. Senior High Schools may also be referred to as High Schools.\nWe decided to add SMLB into High Schools instead of Special Education Schools because it is more similar to SMA and SMK in terms of educational level.\n\nElementary Schools: Includes SD and SDLB\nJunior High Schools: Includes SMP and SMPLB\nSenior High Schools: Includes SMA, SMK, and SMLB\nSpecial Education Schools: Includes SLB\n\n\n\n\nThe spatial points patterns analysis follows a multi-scale approach:\n\nProvincial Level Analysis:\n\n\nInitial exploration of school distribution patterns across Jakarta\nGlobal clustering analysis\nPopulation density correlation\n\n\nCity Level Analysis:\n\n\nLocal clustering patterns\nSchool type interactions\nPublic-private school dynamics\n\n\nStatistical Methods:\n\n\nKernel Density Estimation\nNearest Neighbour Analysis\nQuadrat Analysis\nCross-K Function Analysis\nRipley’s K Function and L Function Analysis\n\n\n\n\nThis study utilizes three primary datasets.\n\nIndonesia Schools Dataset:\n\n\nSource: Kaggle - Indonesia Schools Dataset\nThis datasets contains information about schools across Indonesia, including location, type, and educational stage.\n\n\nIndonesia Administrative Boundaries:\n\n\nSource: Indonesia - Subnational Administrative Boundaries\nWe selected the ADM2 level boundaries for provincial level analysis.\n\n\nSubdistrict Data:\n\n\nSource: Indonesia Geospasial\nThis dataset provides detailed subdistrict boundaries for Jakarta, and contains population aggregated by subdistrict."
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#spatial-distribution-analysis-of-educational-facilities-in-jakarta",
    "href": "TakehomeEx/THE03C/THE03C.html#spatial-distribution-analysis-of-educational-facilities-in-jakarta",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "",
    "text": "Jakarta, the capital of Indonesia, is a bustling metropolis with a diverse population and a complex urban landscape. The city’s educational infrastructure plays a crucial role in shaping the future of its residents. In this analysis, we will explore the spatial distribution of educational facilities across Jakarta to understand the accessibility and equity of educational resources.\n\n\n\nOur project encompasses three primary areas of investigation.\n\nSpatial Points Patterns Analysis of Distribution of Schools:\n\n\nExamination of school distribution patterns across Jakarta\nIdentification of areas with significant clustering or dispersion\nAssessment of spatial relationships between different types of educational facilities\n\n\nLISA and Hot-spot, Cold-spot Analysis\n\n\nIdentification of Local Indicators of Spatial Association (LISA) clusters\nDetection of hot-spots and cold-spots of schools\nInvestigation of spatial autocorrelation in the distribution of schools\n\n\nGeographically Weighted Regression Modeling\n\n\nExploration of relationships between education levels and school availability and accessibility\nAssessment of spatial variations across different districts\nInvestigation of socioeconomic factors influencing school distribution patterns\n\nThis research aims to provide insights into the spatial dynamics of educational facilities in Jakarta and inform policy decisions to enhance educational equity and access. By combining spatial analysis techniques with statistical modeling, we can uncover hidden patterns and relationships that are crucial for effective urban planning and resource allocation.\n\n\n\nIndonesia’s education system is structured into several stages:\nPrimary Education\n\nElementary School (SD): Compulsory education for children aged 7-12 years\nSpecial Elementary School (SDLB): Schools for children with special needs\n\nSecondary Education\n\nJunior High School (SMP): Follows elementary school and is for students aged 13-15 years\nSpecial Junior High School (SMPLB): Schools for students with special needs\n\nHigh School Education\n\nSenior High School (SMA): Follows junior high school and is for students aged 16-18 years\nVocational High School (SMK): Focuses on vocational training and skills development\nSpecial Senior High School (SMLB): Schools for students with special needs\n\nSpecial Education\n\nSpecial Education (SLB): Schools for children with disabilities\n\nFor the purpose of this analysis, we have combined the types of schools into four main types. Note that Junior High Schools may also be interchangeably referred to as Secondary Schools. Senior High Schools may also be referred to as High Schools.\nWe decided to add SMLB into High Schools instead of Special Education Schools because it is more similar to SMA and SMK in terms of educational level.\n\nElementary Schools: Includes SD and SDLB\nJunior High Schools: Includes SMP and SMPLB\nSenior High Schools: Includes SMA, SMK, and SMLB\nSpecial Education Schools: Includes SLB\n\n\n\n\nThe spatial points patterns analysis follows a multi-scale approach:\n\nProvincial Level Analysis:\n\n\nInitial exploration of school distribution patterns across Jakarta\nGlobal clustering analysis\nPopulation density correlation\n\n\nCity Level Analysis:\n\n\nLocal clustering patterns\nSchool type interactions\nPublic-private school dynamics\n\n\nStatistical Methods:\n\n\nKernel Density Estimation\nNearest Neighbour Analysis\nQuadrat Analysis\nCross-K Function Analysis\nRipley’s K Function and L Function Analysis\n\n\n\n\nThis study utilizes three primary datasets.\n\nIndonesia Schools Dataset:\n\n\nSource: Kaggle - Indonesia Schools Dataset\nThis datasets contains information about schools across Indonesia, including location, type, and educational stage.\n\n\nIndonesia Administrative Boundaries:\n\n\nSource: Indonesia - Subnational Administrative Boundaries\nWe selected the ADM2 level boundaries for provincial level analysis.\n\n\nSubdistrict Data:\n\n\nSource: Indonesia Geospasial\nThis dataset provides detailed subdistrict boundaries for Jakarta, and contains population aggregated by subdistrict."
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#data-preprocessing",
    "href": "TakehomeEx/THE03C/THE03C.html#data-preprocessing",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "2.0 Data Preprocessing",
    "text": "2.0 Data Preprocessing\n\npacman::p_load(sf, tidyverse, knitr, viridis, patchwork, gridExtra, kableExtra, sfdep, tmap, tmaptools, patchwork, scales, spdep, ggrepel, spatstat)\n\n\nindo_schools_kaggle &lt;- read_csv(\"data/aspatial/complete_data.csv\")\n\nRows: 215371 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): province_name, city_name, district_name, school_name, stage, status\ndbl (5): lat, long, province_area, total_population, total_education_age_pop...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAfter loading the data for Indonesia schools, we will filter and preprocess the data to focus on Jakarta schools and clean the administrative boundaries data. We will exclude Jakarta’s Thousand Islands (Kab. Kepulauan Seribu) since they are primarily resort islands with limited educational facilities.\n\njakarta_schools &lt;- indo_schools_kaggle %&gt;% \n  filter(province_name == \"DKI JAKARTA\",\n         city_name != \"Kab. Kepulauan Seribu\") %&gt;%\n  filter(!is.na(long) & !is.na(lat)) %&gt;%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326) %&gt;%\n  mutate(\n      school_level = case_when(\n        stage %in% c(\"SD\", \"SDLB\") ~ \"Elementary\",\n        stage %in% c(\"SMP\", \"SMPLB\") ~ \"Junior High\",\n        stage %in% c(\"SMA\", \"SMK\", \"SMLB\") ~ \"Senior High\",\n        TRUE ~ \"Special Education\"\n      ),\n      school_type = if_else(status == \"N\", \"Public\", \"Private\")\n    )\n\n\nhead(jakarta_schools)\n\nSimple feature collection with 6 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 106.8139 ymin: -6.1992 xmax: 106.8642 ymax: -6.1462\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 12\n  province_name city_name   district_name school_name stage status province_area\n  &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;          &lt;dbl&gt;\n1 DKI JAKARTA   Kota Jakar… Kec. Tanah A… SD NEGERI … SD    N                664\n2 DKI JAKARTA   Kota Jakar… Kec. Senen    SDN Kenari… SD    N                664\n3 DKI JAKARTA   Kota Jakar… Kec. Johar B… SD NEGERI … SD    N                664\n4 DKI JAKARTA   Kota Jakar… Kec. Menteng  SMAS PSKD … SMA   S                664\n5 DKI JAKARTA   Kota Jakar… Kec. Sawah B… SMKS STRAD… SMK   S                664\n6 DKI JAKARTA   Kota Jakar… Kec. Cempaka… SDN Cempak… SD    N                664\n# ℹ 5 more variables: total_population &lt;dbl&gt;,\n#   total_education_age_population &lt;dbl&gt;, geometry &lt;POINT [°]&gt;,\n#   school_level &lt;chr&gt;, school_type &lt;chr&gt;\n\n\nNext, we load the administrative boundaries data for Jakarta and filter the relevant districts for our analysis.\n\nadm2 &lt;- st_read(\"data/geospatial\", layer = \"geoBoundaries-IDN-ADM2_simplified\") %&gt;%\n  filter(shapeName %in% c(\n      \"Kota Jakarta Barat\", \"Kota Jakarta Pusat\",\n      \"Kota Jakarta Selatan\", \"Kota Jakarta Timur\",\n      \"Kota Jakarta Utara\"\n    ))\n\nReading layer `geoBoundaries-IDN-ADM2_simplified' from data source \n  `C:\\Users\\yeoba\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\TakehomeEx\\THE03C\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 519 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 95.01115 ymin: -11.00762 xmax: 141.0194 ymax: 6.07693\nGeodetic CRS:  WGS 84\n\n\nOur last dataset, the subdistrict data, provides detailed boundaries for Jakarta’s subdistricts. We will use this data to analyze population density and other demographic factors. The original dataset has column names in Indonesian, so we will need to rename them for consistency.\n\nbatas &lt;- st_read(\"data/geospatial\", layer = \"BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA\")  %&gt;%\n    select(OBJECT_ID, PROVINSI, KAB_KOTA, KECAMATAN, DESA_KELUR, \n         JUMLAH_PEN, JUMLAH_KK, LUAS_WILAY, KEPADATAN, geometry) %&gt;%\n    rename(\n    province = PROVINSI,\n    city = KAB_KOTA,\n    district = KECAMATAN,\n    subdistrict = DESA_KELUR,\n    population = JUMLAH_PEN,\n    total_families = JUMLAH_KK,\n    area_size = LUAS_WILAY,\n    popn_density = KEPADATAN\n    ) %&gt;%\n    filter(!is.na(city) & city != \"KEPULAUAN SERIBU\") %&gt;%\n    mutate(city = case_when(\n      city == \"JAKARTA BARAT\" ~ \"Kota Jakarta Barat\",\n      city == \"JAKARTA PUSAT\" ~ \"Kota Jakarta Pusat\",\n      city == \"JAKARTA SELATAN\" ~ \"Kota Jakarta Selatan\",\n      city == \"JAKARTA TIMUR\" ~ \"Kota Jakarta Timur\",\n      city == \"JAKARTA UTARA\" ~ \"Kota Jakarta Utara\",\n      TRUE ~ city\n    ))\n\nReading layer `BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA' from data source \n  `C:\\Users\\yeoba\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\TakehomeEx\\THE03C\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 269 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.3831 ymin: -6.370815 xmax: 106.9728 ymax: -5.184322\nGeodetic CRS:  WGS 84\n\n\n\nhead(batas)\n\nSimple feature collection with 6 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.8105 ymin: -6.17575 xmax: 106.8711 ymax: -6.141043\nGeodetic CRS:  WGS 84\n  OBJECT_ID    province               city    district   subdistrict population\n1     25477 DKI JAKARTA Kota Jakarta Barat  TAMAN SARI     KEAGUNGAN      21609\n2     25478 DKI JAKARTA Kota Jakarta Barat  TAMAN SARI        GLODOK       9069\n3     25397 DKI JAKARTA Kota Jakarta Pusat   KEMAYORAN HARAPAN MULIA      29085\n4     25400 DKI JAKARTA Kota Jakarta Pusat   KEMAYORAN  CEMPAKA BARU      41913\n5     25390 DKI JAKARTA Kota Jakarta Pusat SAWAH BESAR    PASAR BARU      15793\n6     25391 DKI JAKARTA Kota Jakarta Pusat SAWAH BESAR  KARANG ANYAR      33383\n  total_families area_size popn_density                       geometry\n1           7255      0.36        60504 MULTIPOLYGON (((106.8164 -6...\n2           3273      0.37        24527 MULTIPOLYGON (((106.8148 -6...\n3           9217      0.53        54465 MULTIPOLYGON (((106.8576 -6...\n4          13766      0.97        42993 MULTIPOLYGON (((106.8631 -6...\n5           5599      1.76         8971 MULTIPOLYGON (((106.8369 -6...\n6          11276      0.47        71628 MULTIPOLYGON (((106.8316 -6...\n\n\nThe district names in the batas dataset is cleaned to ensure consistency.\n\ndistrict_mapping &lt;- c(\n    \"TAMAN SARI\" = \"Kec. Taman Sari\",\n    \"KEMAYORAN\" = \"Kec. Kemayoran\",\n    \"SAWAH BESAR\" = \"Kec. Sawah Besar\",\n    \"GAMBIR\" = \"Kec. Gambir\",\n    \"SENEN\" = \"Kec. Senen\",\n    \"CEMPAKA PUTIH\" = \"Kec. Cempaka Putih\",\n    \"MENTENG\" = \"Kec. Menteng\",\n    \"TANAH ABANG\" = \"Kec. Tanah Abang\",\n    \"JOHAR BARU\" = \"Kec. Johar Baru\",\n    \"KOJA\" = \"Kec. Koja\",\n    \"PENJARINGAN\" = \"Kec. Penjaringan\",\n    \"TANJUNG PRIOK\" = \"Kec. Tanjung Priok\",\n    \"CILINCING\" = \"Kec. Cilincing\",\n    \"GROGOL PETAMBURAN\" = \"Kec. Grogol Petamburan\",\n    \"PADEMANGAN\" = \"Kec. Pademangan\",\n    \"KELAPA GADING\" = \"Kec. Kelapa Gading\",\n    \"CENGKARENG\" = \"Kec. Cengkareng\",\n    \"TAMBORA\" = \"Kec. Tambora\",\n    \"KEBON JERUK\" = \"Kec. Kebon Jeruk\",\n    \"KALIDERES\" = \"Kec. Kali Deres\",\n    \"PAL MERAH\" = \"Kec. Palmerah\",\n    \"JATINEGARA\" = \"Kec. Jatinegara\",\n    \"KEMBANGAN\" = \"Kec. Kembangan\",\n    \"TEBET\" = \"Kec. Tebet\",\n    \"SETIABUDI\" = \"Kec. Setia Budi\",\n    \"MAMPANG PRAPATAN\" = \"Kec. Mampang Prapatan\",\n    \"PASAR MINGGU\" = \"Kec. Pasar Minggu\",\n    \"KEBAYORAN LAMA\" = \"Kec. Kebayoran Lama\",\n    \"KEBAYORAN BARU\" = \"Kec. Kebayoran Baru\",\n    \"CILANDAK\" = \"Kec. Cilandak\",\n    \"PESANGGRAHAN\" = \"Kec. Pesanggrahan\",\n    \"PANCORAN\" = \"Kec. Pancoran\",\n    \"JAGAKARSA\" = \"Kec. Jagakarsa\",\n    \"MATRAMAN\" = \"Kec. Matraman\",\n    \"PULOGADUNG\" = \"Kec. Pulo Gadung\",\n    \"KRAMATJATI\" = \"Kec. Kramat Jati\",\n    \"PASAR REBO\" = \"Kec. Pasar Rebo\",\n    \"DUREN SAWIT\" = \"Kec. Duren Sawit\",\n    \"MAKASAR\" = \"Kec. Makasar\",\n    \"CIRACAS\" = \"Kec. Ciracas\",\n    \"CIPAYUNG\" = \"Kec. Cipayung\",\n    \"CAKUNG\" = \"Kec. Cakung\"\n)\n\nbatas &lt;- batas %&gt;%\n  mutate(district = district_mapping[district])"
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#exploratory-data-analysis-provincial-level",
    "href": "TakehomeEx/THE03C/THE03C.html#exploratory-data-analysis-provincial-level",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "3.0 Exploratory Data Analysis (Provincial Level)",
    "text": "3.0 Exploratory Data Analysis (Provincial Level)\nBefore diving into detailed spatial analysis, we will conduct an initial round of analysis at the provincial level to understand the overall distribution of schools across Jakarta.\n\n3.1 Overall Distribution Patterns\n\nggplot(data = jakarta_schools) +\n  geom_bar(aes(x = city_name, fill = city_name)) +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    legend.position = \"none\"\n  ) +\n  labs(\n    title = \"Distribution of Schools Across Jakarta\",\n    x = \"City\",\n    y = \"Number of Schools\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nEast Jakarta has the highest concentration of schools (approximately 1200+), followed by West Jakarta\nThe distribution aligns broadly with population density but shows some notable mismatches\nSchool density follows an east-west corridor pattern with lower density in the north and south\n\n\n\n3.2 School Level Distribution\n\nggplot(data = jakarta_schools) +\n  geom_bar(aes(x = city_name, fill = school_level)) +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 12, face = \"bold\")\n  ) +\n  labs(\n    title = \"Distribution of School Levels Across Jakarta\",\n    x = \"City\",\n    y = \"Number of Schools\",\n    fill = \"School Level\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nAcross all municipalities, elementary schools are the most common\nThere is a relatively consistent proportion of Junior and Senior High Schools\nSpecial Education schools are less common but present in all municipalities\nWhile total numbers differ, the proportional distribution of school levels remains fairly consistent across cities, suggesting planned distribution rather than random clustering\n\n\n\n3.3 Overall School Density\n\nggplot() +\n  geom_sf(data = adm2, aes(fill = lengths(st_intersects(adm2, jakarta_schools)))) +\n  scale_fill_viridis_c(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"School Density Across Jakarta\",\n    fill = \"Number of\\nSchools\"\n  )\n\n\n\n\n\n\n\n\n\n\n3.4 Population Density\n\nggplot() +\n  geom_sf(data = batas, aes(fill = popn_density)) +\n  scale_fill_viridis_c(\n    option = \"plasma\",\n    labels = scales::comma_format()\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Population Density in Jakarta\",\n    fill = \"Population\\nDensity\\n(per km²)\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe density map reveals high population clusters in central Jakarta (yellow/orange areas)\nThere is an interesting mismatch with school density in some areas\nSeveral high-density pockets are scattered across Jakarta\n\n\n\n3.5 Overall Summary\n\nOur preliminary EDA at the provincial level is too macro to provide detailed insights, but necessary to understand the overall distribution of schools in Jakarta\nCertain patterns of school and population concentration emerge, but we will need to confirm this with KDE and statistical tests\nWe still cannot determine if the school distribution matches population needs"
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#kernel-density-estimation-provincial-level",
    "href": "TakehomeEx/THE03C/THE03C.html#kernel-density-estimation-provincial-level",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "4.0 Kernel Density Estimation (Provincial Level)",
    "text": "4.0 Kernel Density Estimation (Provincial Level)\nTo analyze the spatial distribution of schools in Jakarta, we will use Kernel Density Estimation (KDE) to identify clustering patterns and hotspots. We will conduct KDE analysis at the provincial level and then drill down to individual cities to understand local variations.\n\n4.1 Provincial KDE\n\n# Convert to UTM projection for proper distance calculations\njakarta_schools_utm &lt;- st_transform(jakarta_schools, 32748)\nadm2_utm &lt;- st_transform(adm2, 32748)\n\n\nproper_jitter &lt;- function(sf_points, window) {\n  # Convert points to spatial points pattern\n  jittered_points &lt;- st_jitter(sf_points, amount = 1)\n  coords &lt;- st_coordinates(jittered_points)\n  \n  # Filter points within window\n  inside &lt;- inside.owin(x = coords[,1], y = coords[,2], w = window)\n  if(sum(inside) &gt; 0) {\n    valid_coords &lt;- coords[inside,]\n    \n    # Create ppp object\n    points_ppp &lt;- ppp(\n      x = valid_coords[,1],\n      y = valid_coords[,2],\n      window = window\n    )\n    \n    return(list(\n      points_ppp = points_ppp,\n      inside_count = sum(inside)\n    ))\n  } else {\n    stop(\"No points fall within the window after jittering\")\n  }\n}\n\n\nkde_analysis &lt;- function(jakarta_schools_utm, adm2_utm) {\n  # Create window\n  window &lt;- as.owin(st_union(adm2_utm))\n  \n  # Get point pattern\n  jittered_result &lt;- proper_jitter(jakarta_schools_utm, window)\n  points &lt;- jittered_result$points_ppp\n  inside_count &lt;- jittered_result$inside_count\n  \n  # Verify points exist\n  if(points$n &gt; 0) {\n    # Calculate KDE\n    kde &lt;- density.ppp(points, \n                      sigma = bw.diggle(points),\n                      edge = TRUE)\n    \n    kde_df &lt;- as.data.frame(kde)\n    \n    return(list(\n      kde_df = kde_df,\n      inside_count = inside_count\n    ))\n  } else {\n    stop(\"No valid points for KDE analysis\")\n  }\n}\n\n\nkde_result &lt;- kde_analysis(jakarta_schools_utm, adm2_utm)\n\nggplot() +\n  geom_sf(data = adm2_utm, fill = \"transparent\") +\n  geom_tile(data = kde_result$kde_df, aes(x = x, y = y, fill = value)) +\n  scale_fill_viridis_c(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"Kernel Density Estimation of All Schools\",\n    subtitle = paste0(\"Based on \", kde_result$inside_count, \" school locations\"),\n    fill = \"Density\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe overall KDE map shows spatial clustering with several high-density hotspots\nThe strongest concentration is in North-Central Jakarta (around 6.15S)\nSecondary clusters appear in the eastern and western regions\nSouthern areas generally show lower density\nThis patterns strongly suggests rejecting the null hypothesis of random distribution\n\n\n\n4.2 KDE by School Level\n\n# Function for KDE by school level\nkde_by_level &lt;- function(jakarta_schools_utm, adm2_utm) {\n  window &lt;- as.owin(st_union(adm2_utm))\n  kde_plots &lt;- list()\n  \n  for(level in unique(jakarta_schools_utm$school_level)) {\n    # Subset schools by level\n    schools_subset &lt;- jakarta_schools_utm[jakarta_schools_utm$school_level == level,]\n    \n    # Jitter points\n    jittered_result &lt;- proper_jitter(schools_subset, window)\n    points_ppp &lt;- jittered_result$points_ppp\n    \n    # Calculate KDE\n    kde_level &lt;- density.ppp(points_ppp,\n                            sigma = bw.diggle(points_ppp),\n                            edge = TRUE)\n    kde_df &lt;- as.data.frame(kde_level)\n    \n    # Create plot\n    kde_plots[[level]] &lt;- ggplot() +\n      geom_sf(data = adm2_utm, fill = \"transparent\") +\n      geom_tile(data = kde_df, aes(x = x, y = y, fill = value)) +\n      scale_fill_viridis_c(option = \"plasma\") +\n      theme_minimal() +\n      labs(\n        title = paste(\"School Density:\", level),\n        subtitle = paste0(\"Based on \", jittered_result$inside_count, \" school locations\"),\n        fill = \"Density\"\n      )\n  }\n  \n  return(kde_plots)\n}\n\nwalk(kde_by_level(jakarta_schools_utm, adm2_utm), print)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe KDE plots reveal distinct non-random spatial patterns in school distribution\nThe most intense clustering appears in the North-Central region across all school types\nDensity patterns vary by school level. Elementary schools show more dispersed, localized hotspots. Secondary schools display stronger clustering and special education schools show unique clustering patterns in central and southwestern regions.\n\n\n\n4.3 Quadrat Analysis\nSpatial Distribution\n\njittered_schools &lt;- st_jitter(jakarta_schools_utm, amount = 1)\ncoords &lt;- st_coordinates(jittered_schools)\nmarks &lt;- jittered_schools$school_level\nwindow &lt;- as.owin(st_union(adm2_utm))\n\n# Filter points within window\ninside &lt;- inside.owin(x = coords[,1], y = coords[,2], w = window)\nvalid_coords &lt;- coords[inside,]\nvalid_marks &lt;- marks[inside]\n\nprint(paste(\"Number of valid coordinates:\", nrow(valid_coords)))\n\n[1] \"Number of valid coordinates: 4734\"\n\nprint(paste(\"Number of valid marks:\", length(valid_marks)))\n\n[1] \"Number of valid marks: 4734\"\n\n\n\nquadrat_points &lt;- ppp(\n  x = valid_coords[,1],\n  y = valid_coords[,2],\n  window = window,\n  marks = factor(valid_marks)\n)\n\nq &lt;- quadratcount(quadrat_points, nx = 6, ny = 6)\n\nggplot() +\n  geom_sf(data = adm2_utm, fill = \"transparent\") +\n  stat_density2d(\n    data = as.data.frame(valid_coords),\n    aes(x = X, y = Y, fill = after_stat(level)),\n    geom = \"polygon\",\n    alpha = 0.5,\n    contour = TRUE\n  ) +\n  geom_point(\n    data = data.frame(\n      X = valid_coords[,1],\n      Y = valid_coords[,2],\n      Level = valid_marks\n    ),\n    aes(x = X, y = Y, color = Level),\n    alpha = 0.6,\n    size = 2\n  ) +\n  scale_fill_viridis_c(option = \"plasma\", name = \"Density\") +\n  scale_color_viridis_d(option = \"plasma\", name = \"School Level\") +\n  theme_minimal() +\n  labs(\n    title = \"Quadrat Analysis of Schools in Jakarta\",\n    subtitle = paste(\"Based on\", nrow(valid_coords), \" school locations\")\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe quadrat analysis confirms the non-random distribution of schools in Jakarta\nElementary schools show widest spatial coverage, secondary schools tend to be clustered together and special education facilities are sparsely distributed\nHigher density areas correspond to areas with multiple school types\n\nStatistical Analysis\n\n# Chi-square test\nq_test &lt;- quadrat.test(quadrat_points)\nprint(\"Quadrat Test Results:\")\n\n[1] \"Quadrat Test Results:\"\n\nprint(q_test)\n\n\n    Chi-squared test of CSR using quadrat counts\n\ndata:  quadrat_points\nX2 = 513.45, df = 22, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\nQuadrats: 23 tiles (irregular windows)\n\n\nFrom the Chi-squared test, the extremely low p-value &lt; 2.2e-16 strongly rejects the null hypothesis of Complete Spatial Randomness (CSR). The high chi-squared value of 513.45 indicates substantial deviation from expected frequencies. The results statistically confirm the visual clustering patterns.\nFrequency Analysis\n\nquadrat_summary &lt;- data.frame(\n  observed = as.vector(q),\n  expected = mean(as.vector(q)),\n  quadrat = 1:length(as.vector(q))\n)\n\nggplot(quadrat_summary) +\n  geom_point(aes(x = quadrat, y = observed), color = \"blue\", alpha = 0.6) +\n  geom_hline(yintercept = mean(quadrat_summary$expected), \n             linetype = \"dashed\", color = \"red\") +\n  theme_minimal() +\n  labs(\n    title = \"Observed vs Expected Quadrat Frequencies\",\n    x = \"Quadrat Number\",\n    y = \"Frequency\",\n    caption = \"Red line indicates expected frequency under CSR\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nThere is large variation in observed frequencies across quadrats\nMost quadrats show frequencies significantly different from expected (red line)\nSeveral quadrats show very high frequencies (&gt;300 schools). Some quadrats show very low frequencies (&lt;100 schools)\nThis pattern suggests strong deviation from CSR"
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#exploratory-data-analysis-city-level",
    "href": "TakehomeEx/THE03C/THE03C.html#exploratory-data-analysis-city-level",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "5.0 Exploratory Data Analysis (City Level)",
    "text": "5.0 Exploratory Data Analysis (City Level)\nTo gain a more granular understanding of school distribution patterns, we will conduct a detailed analysis at the city level. By examining each city’s school network, we can identify local variations, assess the distribution of public vs private schools, and analyze nearest neighbor relationships.\n\n5.1 School Distribution by City\n\n# Create individual maps for each city\nbatas_utm &lt;- st_transform(batas, 32748)\ncity_maps &lt;- list()\n\nfor(city in unique(batas$city)) {\n  city_boundary &lt;- batas_utm[batas_utm$city == city,]\n  \n  city_schools &lt;- jakarta_schools_utm[st_intersects(jakarta_schools_utm, \n                                                   st_union(city_boundary)) %&gt;% \n                                      lengths &gt; 0,]\n  \n  city_maps[[city]] &lt;- ggplot() +\n    geom_sf(data = city_boundary, \n            aes(fill = popn_density)) +\n    geom_sf(data = city_schools,\n            aes(color = school_level),\n            size = 2,\n            alpha = 0.6) +\n    scale_fill_viridis_c(\n      option = \"plasma\",\n      name = \"Population\\nDensity\",\n      labels = scales::comma_format()\n    ) +\n    scale_color_viridis_d(\n      option = \"plasma\",\n      name = \"School Level\"\n    ) +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 14, face = \"bold\"),\n      plot.subtitle = element_text(size = 12),\n      legend.title = element_text(size = 10),\n      legend.text = element_text(size = 8),\n      plot.margin = margin(10, 10, 10, 10)\n    ) +\n    labs(\n      title = paste(\"Schools Distribution in\", city),\n      subtitle = paste(\"Number of schools:\", nrow(city_schools))\n    )\n}\n\n# Display all maps\nwalk(names(city_maps), function(city) {\n  print(city_maps[[city]])\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKey Observations\n\nJakarta Timur: Most extensive school network with even distribution across the region. There is strong correlation between population density and school locations. Notable clustering in central-north areas where population density reaches 40,000-60,000. Special education facilities well-distributed compared to other regions\nJakarta Barat: Clear north-east educational corridor, dense clustering in eastern regions. Population density hotspots show good school coverage. Relatively even distribution of school levels.\nJakarta Selatan: More dispersed distribution pattern, lower population density, higher proportion of senior high schools. Educational clusters observed in northern districts. Overall, good balance between school types and population needs.\nJakarta Utara: Unique coastal-inland distribution pattern. Strong east-west variation in school density. Population density clusters in central areas. Limited special education facilities, clear correlation between major roads and school locations.\nJakarta Pusat: Highest concentration of schools per unit area, intense clustering in eastern districts. Strong alignment with high population density. Notable educational complexes, since there are multiple school levels in close proximity. However, limited coverage in western sectors.\n\n\n\n5.2 Public School Ratio by City\n\npublic_ratio &lt;- jakarta_schools_utm %&gt;%\n  group_by(city_name) %&gt;%\n  summarise(\n    total_schools = n(),\n    public_schools = sum(school_type == \"Public\"),\n    public_ratio = public_schools / total_schools,\n    .groups = \"drop\"\n  )\n\nggplot(public_ratio) +\n  geom_bar(aes(x = reorder(city_name, public_ratio), \n               y = public_ratio, \n               fill = city_name), \n           stat = \"identity\") +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12)\n  ) +\n  labs(\n    title = \"Public School Ratio by City\",\n    subtitle = \"Proportion of public schools to total schools\",\n    x = \"City\",\n    y = \"Proportion of Public Schools\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe public school ratio varies significantly across cities\nThe highest ratios is in Jakarta Selatan, which is surprisingly since South Jakarta has the third highest population in Jakarta\nThis suggests an uneven distribution of public education resources\n\n\n\n5.3 Nearest Neighbour Analysis\n\nnn_analysis &lt;- list()\nfor(city in unique(jakarta_schools_utm$city_name)) {\n  # Get schools for this city\n  city_schools &lt;- jakarta_schools_utm[jakarta_schools_utm$city_name == city,]\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  city_window &lt;- as.owin(st_union(city_boundary))\n    \n  # Jitter points properly\n  jittered_result &lt;- proper_jitter(city_schools, city_window)\n  points_ppp &lt;- jittered_result$points_ppp\n  \n  # Store results\n  nn_analysis[[city]] &lt;- data.frame(\n    city = city,\n    observed_mean_dist = mean(nndist(points_ppp)),\n    n_points = npoints(points_ppp),\n    area = area.owin(city_window),\n    expected_mean_dist = 1/(2*sqrt(npoints(points_ppp)/area.owin(city_window))),\n    stringsAsFactors = FALSE\n  )\n}\n\nnn_df &lt;- bind_rows(nn_analysis) %&gt;%\n  mutate(R = observed_mean_dist/expected_mean_dist)\n\n\nnn_df %&gt;%\n  select(city, observed_mean_dist, n_points, expected_mean_dist, R) %&gt;%\n  arrange(R) %&gt;%\n  kable(\"html\") %&gt;%\n  kable_styling(\"striped\", full_width = FALSE)\n\n\nggplot(nn_df) +\n  geom_bar(aes(x = reorder(city, R), y = R, fill = city),\n           stat = \"identity\") +\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"red\") +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\"\n  ) +\n  labs(\n    title = \"Nearest Neighbor Analysis by City\",\n    subtitle = \"R &lt; 1 indicates clustering, R &gt; 1 indicates dispersion\",\n    x = \"City\",\n    y = \"R Statistic\"\n  )\n\n\n\n\n\n\n\n\n\nggplot(nn_df) +\n  geom_segment(aes(x = city, xend = city,\n                   y = expected_mean_dist, yend = observed_mean_dist),\n               color = \"gray50\") +\n  geom_point(aes(x = city, y = expected_mean_dist), color = \"blue\", size = 3) +\n  geom_point(aes(x = city, y = observed_mean_dist), color = \"red\", size = 3) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  ) +\n  labs(\n    title = \"Expected vs Observed Mean Nearest Neighbor Distances\",\n    subtitle = \"Blue: Expected, Red: Observed\",\n    x = \"City\",\n    y = \"Distance (meters)\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nAll cities show an R-value &lt; 1 confirming significant clustering\nThe strongest clustering is in Jakarta Pusat (0.48) and most dispersed in Jakarta Barat (0.67)\nAll cities show observed distances significantly lower than expected, confirming non-random distribution\n\n\n\n5.4 Cross K Function Analysis\nPublic vs Private Schools\n\n# Enhanced Cross K Analysis of Public vs Private Schools by City\ncross_k_status &lt;- list()\n\nfor(city in unique(jakarta_schools_utm$city_name)) {\n  # Get schools for this city\n  city_schools &lt;- jakarta_schools_utm[jakarta_schools_utm$city_name == city,]\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  city_window &lt;- as.owin(st_union(city_boundary))\n  \n  # Separate public and private schools\n  public_schools &lt;- city_schools[city_schools$school_type == \"Public\",]\n  private_schools &lt;- city_schools[city_schools$school_type == \"Private\",]\n  \n  # Add jitter to coordinates\n  public_coords &lt;- st_coordinates(public_schools)\n  private_coords &lt;- st_coordinates(private_schools)\n  \n  # Filter points within window\n  public_inside &lt;- inside.owin(x = public_coords[,1], y = public_coords[,2], w = city_window)\n  private_inside &lt;- inside.owin(x = private_coords[,1], y = private_coords[,2], w = city_window)\n  \n  public_valid &lt;- public_coords[public_inside,]\n  private_valid &lt;- private_coords[private_inside,]\n  \n  # Create point pattern if we have valid points\n  if(nrow(public_valid) &gt; 0 && nrow(private_valid) &gt; 0) {\n    points_ppp &lt;- ppp(\n      x = c(public_valid[,1], private_valid[,1]),\n      y = c(public_valid[,2], private_valid[,2]),\n      window = city_window,\n      marks = factor(c(\n        rep(\"Public\", nrow(public_valid)),\n        rep(\"Private\", nrow(private_valid))\n      ))\n    )\n    \n    # Calculate cross K function\n    cross_k &lt;- Kcross(points_ppp, \n                      i = \"Public\", \n                      j = \"Private\",\n                      correction = \"border\")\n    \n    # Calculate theoretical envelope\n    cross_k_env &lt;- envelope(points_ppp, \n                           fun = Kcross,\n                           i = \"Public\",\n                           j = \"Private\",\n                           nsim = 99,\n                           correction = \"border\")\n    \n    cross_k_status[[city]] &lt;- data.frame(\n      r = cross_k$r,\n      theo = cross_k$theo,\n      obs = cross_k$border,\n      env_lo = cross_k_env$lo,\n      env_hi = cross_k_env$hi,\n      city = city\n    )\n  }\n}\n\nWarning: data contain duplicated points\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nWarning: data contain duplicated points\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nWarning: data contain duplicated points\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nWarning: data contain duplicated points\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nWarning: data contain duplicated points\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n# Combine results\ncross_k_df &lt;- bind_rows(cross_k_status)\n\n# Create enhanced visualization\nggplot(cross_k_df) +\n  # Add envelope\n  geom_ribbon(aes(x = r, ymin = env_lo, ymax = env_hi),\n              fill = \"grey70\", alpha = 0.3) +\n  # Add theoretical CSR line\n  geom_line(aes(x = r, y = theo), \n            color = \"red\", linetype = \"dashed\") +\n  # Add observed line\n  geom_line(aes(x = r, y = obs, color = city)) +\n  facet_wrap(~city) +\n  scale_color_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    plot.title = element_text(size = 12, face = \"bold\"),\n    strip.text = element_text(size = 10)\n  ) +\n  labs(\n    title = \"Cross K Function: Public vs Private School Interaction\",\n    subtitle = \"Grey band: 95% confidence envelope, Red line: theoretical CSR\",\n    x = \"Distance (r)\",\n    y = \"K(r)\",\n    color = \"City\"\n  )\n\n\n\n\n\n\n\n\nKey Observations\n\nJakarta Barat: Closest alignment to CSR, minimal deviation from theoretical line. Balanced distribution between public and private schools.\nJakarta Pusat: Moderate deviation above CSR line, consistent clustering pattern across distances. Tighter confidence envelope at shorter distances. There is presence of planned co-location of public and private schools.\nJakarta Selatan: Gradual increase in deviation with distance, systematic clustering at neighborhood line.\nJakarta Timur: Strongest deviation above CSR, wide confidence envelope at larger distances. Indicates significant clustering of public and private schools\nJakarta Utara: Most pronounced deviation from CSR, steepest curve especially at larger distances. Strong clustering pattern suggests potential access inequality issues.\n\nInteraction Strength Metrics\n\n# Calculate interaction strength metrics\ninteraction_metrics &lt;- cross_k_df %&gt;%\n  group_by(city) %&gt;%\n  summarise(\n    mean_deviation = mean(obs - theo),\n    max_deviation = max(obs - theo),\n    min_distance = first(r[which.min(abs(obs - theo))]),\n    envelope_exceed = mean(obs &gt; env_hi),\n    .groups = \"drop\"\n  )\n\nggplot(interaction_metrics) +\n  geom_bar(aes(x = reorder(city, mean_deviation), \n               y = mean_deviation,\n               fill = mean_deviation),\n           stat = \"identity\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n  scale_fill_viridis_c(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    legend.position = \"none\"\n  ) +\n  labs(\n    title = \"Mean Deviation from CSR by City\",\n    subtitle = \"Positive values indicate clustering between public and private schools\",\n    x = \"City\",\n    y = \"Mean Deviation from CSR\"\n  )\n\n\n\n\n\n\n\n\nSchool Level Interactions by City\n\n# Enhanced Cross K Function Analysis with Jitter\ncross_k_by_level &lt;- list()\nsuppressWarnings({\n  for(city in unique(jakarta_schools_utm$city_name)) {\n  city_schools &lt;- jakarta_schools_utm[jakarta_schools_utm$city_name == city,]\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  city_window &lt;- as.owin(st_union(city_boundary))\n  \n  school_levels &lt;- unique(city_schools$school_level)\n  \n  for(level1 in school_levels) {\n    for(level2 in school_levels) {\n      if(level1 &lt; level2) {  # Avoid redundant comparisons\n        schools1 &lt;- city_schools[city_schools$school_level == level1,]\n        schools2 &lt;- city_schools[city_schools$school_level == level2,]\n        \n        # Add jitter to coordinates\n        coords1 &lt;- st_coordinates(schools1)\n        coords2 &lt;- st_coordinates(schools2)\n        \n        # Filter points within window\n        inside1 &lt;- inside.owin(x = coords1[,1], y = coords1[,2], w = city_window)\n        inside2 &lt;- inside.owin(x = coords2[,1], y = coords2[,2], w = city_window)\n        \n        valid1 &lt;- coords1[inside1,]\n        valid2 &lt;- coords2[inside2,]\n        \n        # Create point pattern only if we have valid points\n        if(nrow(valid1) &gt; 0 && nrow(valid2) &gt; 0) {\n          points_ppp &lt;- ppp(\n            x = c(valid1[,1], valid2[,1]),\n            y = c(valid1[,2], valid2[,2]),\n            window = city_window,\n            marks = factor(c(\n              rep(level1, nrow(valid1)),\n              rep(level2, nrow(valid2))\n            ))\n          )\n          \n          # Calculate cross K function\n          cross_k &lt;- Kcross(points_ppp, i = level1, j = level2, correction = \"border\")\n          \n          cross_k_by_level[[paste(city, level1, level2, sep=\"_\")]] &lt;- data.frame(\n            r = cross_k$r,\n            theo = cross_k$theo,\n            obs = cross_k$border,\n            city = city,\n            level1 = level1,\n            level2 = level2\n          )\n        }\n      }\n    }\n  }\n}\n\n  # Combine results\n  cross_k_df &lt;- bind_rows(cross_k_by_level)\n})\n\n# Create visualization\nggplot(cross_k_df) +\n  geom_line(aes(x = r, y = theo), color = \"red\", linetype = \"dashed\") +\n  geom_line(aes(x = r, y = obs, color = paste(level1, \"-\", level2))) +\n  facet_wrap(~city, scales = \"free\") +\n  scale_color_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 10),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    axis.text = element_text(size = 8),\n    strip.text = element_text(size = 10)\n  ) +\n  labs(\n    title = \"Cross K Function Analysis: School Level Interactions by City\",\n    subtitle = \"Red dashed line: theoretical CSR\",\n    x = \"Distance (r)\",\n    y = \"K(r)\",\n    color = \"School Level Pair\"\n  ) +\n  guides(color = guide_legend(nrow = 2))\n\n\n\n\n\n\n\n\nKey Observations\n\nElementary-Junior High: Strongest clustering in all cities. Consistent with educational progression planning. This means that elementary and junior high schools are often co-located. Above CSR line across all distances.\nElementary-Senior High: More varied patterns across cities. Jakarta Timur shows strongest clustering. Jakarta Barat shows more random distribution.\nSpecial Education: Most variable patterns, strongest clustering in Jakarta Utara, weakest clustering in Jakarta Barat.\n\nLevel Pairs by City\n\n# Create separate plots for each school level pair\nlevel_pairs &lt;- unique(paste(cross_k_df$level1, \"-\", cross_k_df$level2))\n\nfor(pair in level_pairs) {\n  pair_data &lt;- cross_k_df %&gt;%\n    filter(paste(level1, \"-\", level2) == pair)\n  \n  p &lt;- ggplot(pair_data) +\n    geom_line(aes(x = r, y = theo), color = \"red\", linetype = \"dashed\") +\n    geom_line(aes(x = r, y = obs, color = city)) +\n    facet_wrap(~city, scales = \"free\") +\n    scale_color_viridis_d(option = \"plasma\") +\n    theme_minimal() +\n    theme(\n      legend.position = \"bottom\",\n      plot.title = element_text(size = 12, face = \"bold\"),\n      axis.text = element_text(size = 8),\n      strip.text = element_text(size = 10)\n    ) +\n    labs(\n      title = paste(\"Cross K Function Analysis:\", pair),\n      subtitle = \"Red dashed line: theoretical CSR\",\n      x = \"Distance (r)\",\n      y = \"K(r)\",\n      color = \"City\"\n    )\n  \n  print(p)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSummary Statistics\n\n# Calculate summary statistics\nsummary_stats &lt;- cross_k_df %&gt;%\n  group_by(city, level1, level2) %&gt;%\n  summarise(\n    mean_deviation = mean(obs - theo),\n    max_deviation = max(obs - theo),\n    min_distance = first(r[which.min(abs(obs - theo))]),\n    .groups = \"drop\"\n  )\n\n# Create summary visualization\nggplot(summary_stats, \n       aes(x = reorder(paste(level1, \"-\", level2), mean_deviation), \n           y = mean_deviation, \n           fill = city)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 12, face = \"bold\")\n  ) +\n  labs(\n    title = \"Mean Deviation from CSR by School Level Pair and City\",\n    x = \"School Level Pair\",\n    y = \"Mean Deviation from CSR\",\n    fill = \"City\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nElementary-Special Education: Highest deviation in Jakarta Utara, negative deviations in western cities. Possibly due to accessibilty challenges.\nJunior High-Special Education: Strong clustering in eastern regions. Infrastructure implications for accessibility.\nElementary-Senior High: More balanced deviation, positive deviations in all eastern cities. Supports educational progression planning.\n\n\n\n5.5 K Function and L Function Analysis\n\nk_l_analysis &lt;- list()\n\nfor(city in unique(jakarta_schools_utm$city_name)) {\n  city_schools &lt;- jakarta_schools_utm[jakarta_schools_utm$city_name == city,]\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  \n  # Create window and points\n  city_window &lt;- as.owin(st_union(city_boundary))\n  jittered_result &lt;- proper_jitter(city_schools, city_window)\n  points_ppp &lt;- jittered_result$points_ppp\n  \n  # Calculate K and L functions\n  k_func &lt;- Kest(points_ppp, correction = \"border\")\n  l_func &lt;- Lest(points_ppp, correction = \"border\")\n  \n  k_l_analysis[[city]] &lt;- list(\n    k = k_func,\n    l = l_func\n  )\n}\n\n# Plot K function\nk_plot_data &lt;- lapply(names(k_l_analysis), function(city) {\n  data.frame(\n    r = k_l_analysis[[city]]$k$r,\n    theo = k_l_analysis[[city]]$k$theo,\n    obs = k_l_analysis[[city]]$k$border,\n    city = city\n  )\n}) %&gt;% bind_rows()\n\np_k &lt;- ggplot(k_plot_data) +\n  geom_line(aes(x = r, y = theo), color = \"red\", linetype = \"dashed\") +\n  geom_line(aes(x = r, y = obs, color = city)) +\n  facet_wrap(~city) +\n  scale_color_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"Ripley's K Function by City\",\n    subtitle = \"Red dashed line: theoretical CSR\",\n    x = \"Distance (r)\",\n    y = \"K(r)\"\n  )\n\n# Plot L function\nl_plot_data &lt;- lapply(names(k_l_analysis), function(city) {\n  data.frame(\n    r = k_l_analysis[[city]]$l$r,\n    theo = k_l_analysis[[city]]$l$theo,\n    obs = k_l_analysis[[city]]$l$border - k_l_analysis[[city]]$l$r,\n    city = city\n  )\n}) %&gt;% bind_rows()\n\np_l &lt;- ggplot(l_plot_data) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n  geom_line(aes(x = r, y = obs, color = city)) +\n  facet_wrap(~city) +\n  scale_color_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"L Function by City\",\n    subtitle = \"L(r) - r, positive values indicate clustering\",\n    x = \"Distance (r)\",\n    y = \"L(r) - r\"\n  )\n\n\np_k\n\n\n\n\n\n\n\n\nKey Observations:\n\nAll cities show positive deviation from CSR indicating non-random spatial clustering of schools.\nThe deviation magnitude varies significantly, showing different planning approaches across Jakarta.\nThe steepness of curves increases with distance, suggesting neighborhood-level educational clusters.\n\n\np_l\n\n\n\n\n\n\n\n\nKey Observations:\n\nIntensity of clustering varies dramatically between North and West\nCentral regions show moderate, consistent clustering\nDistance appears to amplify clustering patterns, particularly in northern regions"
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#kernel-density-estimation-city-level",
    "href": "TakehomeEx/THE03C/THE03C.html#kernel-density-estimation-city-level",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "6.0 Kernel Density Estimation (City Level)",
    "text": "6.0 Kernel Density Estimation (City Level)\nTo further understand school distribution patterns, we will conduct a Kernel Density Estimation (KDE) analysis at the city level. By examining the density of school locations, we can identify hotspots, assess clustering patterns, and evaluate spatial relationships between schools.\n\n6.1 KDE Analysis\n\n# KDE Analysis by City\nkde_city_level &lt;- list()\n\nfor(city in unique(jakarta_schools_utm$city_name)) {\n  city_schools &lt;- jakarta_schools_utm[jakarta_schools_utm$city_name == city,]\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  city_window &lt;- as.owin(st_union(city_boundary))\n  \n  kde_city_level[[city]] &lt;- list()\n  \n  # Process all schools in city\n  jittered_schools &lt;- st_jitter(city_schools, amount = 1)\n  coords &lt;- st_coordinates(jittered_schools)\n  \n  inside &lt;- inside.owin(x = coords[,1], y = coords[,2], w = city_window)\n  valid_coords &lt;- coords[inside,]\n  \n  if(nrow(valid_coords) &gt;= 4) {\n    points_ppp &lt;- ppp(\n      x = valid_coords[,1],\n      y = valid_coords[,2],\n      window = city_window\n    )\n    \n    h &lt;- bw.scott(points_ppp)\n    kde &lt;- density.ppp(points_ppp, \n                      sigma = h,\n                      edge = TRUE,\n                      at = \"pixels\",\n                      dimyx = c(128, 128))\n    \n    kde_city_level[[city]][[\"All\"]] &lt;- list(\n      kde = kde,\n      n_points = nrow(valid_coords),\n      bandwidth = h\n    )\n  }\n  \n  for(level in unique(city_schools$school_level)) {\n    level_schools &lt;- city_schools[city_schools$school_level == level,]\n    jittered_level &lt;- st_jitter(level_schools, amount = 1)\n    level_coords &lt;- st_coordinates(jittered_level)\n    \n    inside &lt;- inside.owin(x = level_coords[,1],\n                         y = level_coords[,2],\n                         w = city_window)\n    valid_coords &lt;- level_coords[inside,]\n    \n    if(nrow(valid_coords) &gt;= 4) {\n      points_ppp &lt;- ppp(\n        x = valid_coords[,1],\n        y = valid_coords[,2],\n        window = city_window\n      )\n      \n      h &lt;- bw.scott(points_ppp)\n      kde &lt;- density.ppp(points_ppp, \n                        sigma = h,\n                        edge = TRUE,\n                        at = \"pixels\",\n                        dimyx = c(128, 128))\n      \n      kde_city_level[[city]][[level]] &lt;- list(\n        kde = kde,\n        n_points = nrow(valid_coords),\n        bandwidth = h\n      )\n    }\n  }\n}\n\n\ncity_plots &lt;- list()\n\nfor(city in names(kde_city_level)) {\n  plot_list &lt;- list()\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  \n  kde_df &lt;- as.data.frame(kde_city_level[[city]][[\"All\"]]$kde)\n  plot_list[[\"All\"]] &lt;- ggplot() +\n    geom_tile(data = kde_df, aes(x = x, y = y, fill = value)) +\n    geom_sf(data = city_boundary, fill = NA, color = \"white\", size = 0.4) +\n    scale_fill_viridis_c(option = \"plasma\", name = \"Density\") +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 10),\n      axis.text = element_text(size = 8),\n      legend.position = \"right\"\n    ) +\n    labs(title = \"All Schools\")\n  \n  legend &lt;- get_legend(plot_list[[\"All\"]])\n  \n  for(level in setdiff(names(kde_city_level[[city]]), \"All\")) {\n    kde_df &lt;- as.data.frame(kde_city_level[[city]][[level]]$kde)\n    plot_list[[level]] &lt;- ggplot() +\n      geom_tile(data = kde_df, aes(x = x, y = y, fill = value)) +\n      geom_sf(data = city_boundary, fill = NA, color = \"white\", size = 0.4) +\n      scale_fill_viridis_c(option = \"plasma\") +\n      theme_minimal() +\n      theme(\n        plot.title = element_text(size = 10),\n        axis.text = element_text(size = 8),\n        legend.position = \"none\"\n      ) +\n      labs(title = level)\n  }\n\n  combined_plots &lt;- wrap_plots(\n    plot_list,\n    ncol = 3,\n    guides = \"collect\"\n  ) +\n    plot_annotation(\n      title = paste(\"School Density Analysis -\", city),\n      theme = theme(\n        plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)\n      )\n    )\n  \n  city_plots[[city]] &lt;- combined_plots\n}\n\nfor(city in names(city_plots)) {\n  ggsave(\n    filename = paste0(\"kde_\", gsub(\" \", \"_\", city), \".png\"),\n    plot = city_plots[[city]],\n    width = 15,\n    height = 12,\n    dpi = 300\n  )\n}\n\n\n\n\n\n\nElementary Schools\n\nConsistent Core Distribution:\n\nForms the backbone of educational infrastructure in all cities\nHighest density clusters align with residential areas\nMore evenly distributed compared to other school types\nStrongest presence in eastern districts of Jakarta Pusat and western areas of Jakarta Timur\n\nEdge Effects:\n\nLower density at city boundaries suggests potential cross-border dependencies\nSome peripheral areas show coverage gaps\nNotable boundary clustering between Jakarta Pusat and Jakarta Timur\n\n\nJunior High Schools\n\nClustering Patterns:\n\nStrong correlation with elementary school locations\nMore concentrated distribution than elementary schools\nClear hotspots in commercial/residential transition zones\nNotable concentration along major transportation corridors\n\n\nSenior High Schools:\n\nStrategic Positioning:\n\nConcentrated in accessible, central locations\nStrong alignment with commercial districts\nClear clustering near transportation hubs\nHigher density in areas with good connectivity\n\nCoverage Patterns:\n\nMore selective location strategy than lower levels\nForms distinct educational nodes\nHigher concentration in developed urban areas\nShows gaps in peripheral regions\n\n\nSpecial Education:\n\nCritical Findings\n\nSeverely limited distribution across all cities\nMost concentrated in Jakarta Pusat and Jakarta Selatan\nSignificant coverage gaps in peripheral areas\nLowest density among all school types\n\nAccess Concerns\n\nLimited accessibility from residential areas\nUneven distribution creates service gaps\nConcentration in affluent areas suggests inequality\n\n\n\n\n6.2 Relative Density Metrics\n\n# Calculate relative densities for each city\ndensity_metrics &lt;- data.frame(\n  city = character(),\n  level = character(),\n  max_density = numeric(),\n  mean_density = numeric(),\n  relative_density = numeric(),\n  stringsAsFactors = FALSE\n)\n\nfor(city in names(kde_city_level)) {\n  city_max &lt;- max(kde_city_level[[city]][[\"All\"]]$kde$v, na.rm = TRUE)\n  \n  for(level in names(kde_city_level[[city]])) {\n    if(level != \"All\") {\n      kde_data &lt;- kde_city_level[[city]][[level]]\n      \n      density_metrics &lt;- rbind(density_metrics, data.frame(\n        city = city,\n        level = level,\n        max_density = max(kde_data$kde$v, na.rm = TRUE),\n        mean_density = mean(kde_data$kde$v, na.rm = TRUE),\n        relative_density = max(kde_data$kde$v, na.rm = TRUE) / city_max,\n        stringsAsFactors = FALSE\n      ))\n    }\n  }\n}\n\n\nggplot(density_metrics, \n                       aes(x = level, y = relative_density, fill = city)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10),\n    plot.margin = margin(20, 20, 20, 20)\n  ) +\n  labs(\n    title = \"Relative Density of School Types by City\",\n    subtitle = \"Maximum density relative to overall school density\",\n    x = \"School Level\",\n    y = \"Relative Density\",\n    fill = \"City\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nElementary schools dominate the educational landscape (0.4 - 0.7 relative density)\nSecondary schools show remarkably consistent density across cities\nSpecial education facilities are significantly underrepresented across all cities"
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#insights-and-recommendations",
    "href": "TakehomeEx/THE03C/THE03C.html#insights-and-recommendations",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "7.0 Insights and Recommendations",
    "text": "7.0 Insights and Recommendations\n\n7.1 Key Spatial Patterns\nProvincial Level\n\nClustering Intensity\n\n\nStrong clustering in central Jakarta\nModerate clustering in peripheral areas\nNon-random distribution confirmed by chi-squared test\n\n\nSchool Type Distribution\n\n\nElementary schools show most even distribution\nSecondary schools cluster near transportation nodes\nSpecial education facilities show significant gaps\n\n\nPopulation Alignment\n\n\nStrong correlation in established areas\nMismatches in rapidly developing areas\nNorthern coastal areas underserved\n\nCity Level\n\nJakarta Pusat\n\n\nHighest density, strong public-private integration\n\n\nJakarta Timur\n\n\nMost balanced distribution, strong correlation with population, effective public-private mix\n\n\nJakarta Barat\n\n\nModerate clustering, north-south disparity, transportation corridor alignment\n\n\nJakarta Selatan\n\n\nHighest public school ratio, dispersed distribution pattern, good accessibility score\n\n\nJakarta Utara\n\n\nCoastal inland disparity, limited special-education access, strong east-west variation\n\n\n\n7.2 Critical Issues\n\nInequity in Distributional Access\n\n\nSpecial education facilities concentrated in affluent areas (e.g. Jakarta Pusat)\nPeripheral regions underserved\nTransportation barriers in northern regions\n\n\nPublic-Private Balance\n\n\nVarying ratio across cities\nCompetition in central areas\nComplementary services in periphery\n\n\nSchool Level Progression\n\n\nStrong elementary-junior high correlation\nWeaker junior-senior high alignment sugggests less people make it from junior to senior high possibly due to distribution of schools and accessibility issues\nSpecial education integration challenges\n\n\n\n7.3 Policy Recommendations\nShort-Term Interventions\n\nAccess Enhancement\n\n\nExpand special education in underserved areas\nImprove transportation links to schools\nEstablish mobile educational services\n\nMedium-Term Strategies\n\nInfrastructure Development\n\n\nNew schools in growth areas\nEducational complexes in strategic locations\nSpecial education facility expansion\n\n\nPublic-Private Collaboration\n\n\nJoint planning frameworks\nResource sharing agreements\nStandardized access metrics\n\nLong-Term Vision\n\nSustainable Distribution\n\n\nComprehensive educational network\nIntegrated public-private services\nInclusive special education facilities\n\n\nEducational Equity\n\n\nEqual access for all students\nProgressive school level alignment\nImproved transition rates between school levels"
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#shiny-application-design",
    "href": "TakehomeEx/THE03C/THE03C.html#shiny-application-design",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "8.0 Shiny: Application Design",
    "text": "8.0 Shiny: Application Design\nYou may access the deployed application here: https://baojieyeo.shinyapps.io/THE03_Demo/\n\n8.1 Application Directory\nThe Shiny component will have the following .R files:\n\nglobal.R: Main file that handles data preprocessing logic, KDE and statistical calculations\nui.R: User interface design and layout\nserver.R: Server-side logic for data processing and visualization\n\nThis is the file structure of the app:\n\napp/\n\nglobal.R\nui.R\nserver.R\ndata/\n\n\n\n\n8.2 Shiny Packages\nIn global.R we define a few shiny packages to be loaded:\n\npacman::p_load(shiny, shinydashboard, shinyWidgets, shinyBS, sf, tidyverse, \n               viridis, spatstat, spdep, DT, plotly, tmap, tmaptools)\n\nIn particular, we load shinydashboard, shinyWidgets, shinyBS. The shineydashboard package will be used to create a dashboard layout, while shinyWidgets and shinyBS will be used for interactive widgets and bootstrap styling.\n\n\n8.3 Motivation\nThe application will provide a comprehensive spatial analysis of school distributions across Jakarta through three main analytical perspectives: Provincial Overview, City Analysis, and Statistical Tests.\nThis tool will enable stakeholders to:\n\nUnderstand educational resource distribution patterns\nIdentify gaps in educational access across districts\nSupport evidence-based decision making for new schools placement\nAnalyze disparities between public and private school distribution\nMonitor and evaluate educational access initiatives\n\nProposed target users:\n\nEducation policymakers\nUrban planners\nSchool administrators\nResearchers analyzing educational equity\nGovernment officials\n\n\n\n8.4 Iterative Design\n\n8.4.1 Initial Single-Page Design\n\n\n\n\n\n\nJakarta Schools Analysis\n\n\n       |\nAnalysis | Spatial Analysis Controls | Visualization | Window | |\n\n\n\nThe initial design was a simple application focused on a two-panel layout that emphasized:\n\nClear visual hierarchy\nEfficient space utilization\n\nHowever, there were a few limitations that were immediately apparent. The design was too simplified and we had to cover both provincial and city level analysis. This meant we had to rethink the layout and add more interactive elements, or separate levels through tabs.\n\n\n8.4.2 Two-Tab Design\n\n\n\n\n\n\nJakarta Schools Analysis\n\n\n[Province] [City]\n\n\n       |\nAnalysis | Main Visualization Controls | | Statistical| Related Statistical Tests | Visualizations | |\n\n\n\nWith two tabs, we could separate the provincial and city level analysis. This allowed for more detailed visualizations and controls for each level. The statistical tests would be grouped together in their respective tabs.\nHowever, there were still limitations to this design.\n\nStatistical tests competed for limited space\nLimited ability to focus on specific analyses\nNavigation between province and city views seemed confusing\nDifficult to compare analyses across different levels\n\n\n\n8.4.3 Final Three-Tab Design\n\n\n\n\n\n\nSpatial Points Patterns Analysis\n\n\n\nThe three tab design would feature the following tabs:\n\nProvincial Overview\nCity Analysis\nStatistical Tests\n\nThis design solved the issue of space limitations and allowed for more detailed visualizations and controls. The statistical tests would have their own tab, and this seemed more efficient.\nIf users were interested to know about what goes on behind the scenes, they could navigate to the statistical tests tab. Naturally, the statistics tab were more important to stakeholders rather than regular users.\nEach visualization panel contains:\n\nTitle bar with blue background\nInteractive visualizations\nCaption and/or descriptions\n\nThis design meets the following requirements\n\nSeparation of concerns across tabs\nChanges in each tab would not affect the others\nImproved visual hierarchy\nEqual emphasis on all analysis types\nDedicated control sidebar present in all views (albeit with some minor differences)\n\n\n\n\n8.5 Application Features\n\n8.4.1 Provincial Analysis\n\nPurpose\nThe Provincial Overview tab provides macro-level insights into school distribution patterns across Jakarta.\nComponents and Interactions\nLeft Sidebar Controls:\n\n\nSchool Level Filter\nSchool Type Filter\nKDE Bandwidth Filter\n\nMain Visualizations:\n\n\nSchool Distribution Plot (Top Left)\n\n\nInteractive bar chart showing total schools by city\nHoverable for exact counts * Updates based on selected filters\n\n\nSchool Density Map (Top Right)\n\n\nKDE Visualization at the Province Level\nShows spatial clustering of schools\nResponds to bandwidth slider\nColor intensity indicates school concentration\n\n\n\nDistribution by Level Plot (Bottom Left)\n\n\nStacked bar chart showing school level proportions\nColor-coded by school level\nInteractive legends\nFiltered by selected school types\n\n\nPopulation Density Map (Bottom Right)\n\n\nBackground context visualization\nStatic display (Not affected by filters)\nHelps identify mismatch between school and population density\n\n\n\n8.4.2 City Analysis\n\nPurpose\nPresents a detailed analysis of school distributions within each city.\nComponents and Interactions\n\nLeft Sidebar Controls:\n\nCity Selector\n\n\nDropdown to select Jakarta city\nPrimary filter for this tab\n\n\nSchool Level Filter\n\n\nSame as Provincial tab\nAffects city-specific visualizations\n\n\nSchool Status Filter\n\n\nSame as Provincial tab\nUpdates city-level analyses\n\nMain Visualizations\n\n\nCity KDE Plot (Top Left)\n\n\nKDE visualization for selected city\nShows school density distribution\nUpdates based on selected filters\nIncludes count in subtitle\n\n\nPublic School Ratio (Top Right)\n\n\nBar chart showing public-private ratio\nFixed across cities for comparison\nUpdates with school type selection\n\n\n\nNearest Neighbor Analysis (Bottom Left)\n\n\nCompares observed vs expected distance\nShows R statistic\nUpdates with all filters\n\n\nCity Statistics Table (Bottom Right)\n\n\nDetailed breakdown of schools\nSortable columns\nResponsive to all filters\n\n\n\n8.4.3 Statistical Tests\n\nPurpose\nThe statistical tests tab provides advanced spatial statistics for pattern analysis.\nMain Visualizations\n\n\nQuadrat Analysis (Top Left)\n\n\nGrid-based spatial distribution test\nShows points and quadrat counts\nChi-square results below plot\n\n\nCross K Function (Top Right)\n\n\nAnalyzes public-private school interactions\nShows observed vs theoretical patterns\n\n\n\nK Function Analysis (Bottom Left)\n\n\nOverall spatial dependence measure\nShows clustering at different scales\n\n\nL Function Analysis (Bottom Right)\n\n\nNormalized version of K Function\nEasier interpretation of clustering patterns"
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#shiny-user-interface-design",
    "href": "TakehomeEx/THE03C/THE03C.html#shiny-user-interface-design",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "9.0 Shiny: User Interface Design",
    "text": "9.0 Shiny: User Interface Design\n\n9.1 Dashboard Framework and Layout\nThe user interface utilizes shinydashboard to create an application with a clear visual hierarchy. The three-tabbed design is implemented through a persistent sidebar menu that maintains context across different views.\n\n9.1.1. Layout Components\n\nHeaders: Dual-line title with hierarchical typography\nSidebar: Fixed width (300px) navigation and control panel\nBody: Responsive grid-based content area\nBoxes: Consistent 6-column width containers for visualizations\n\n\n\n\n9.2 Color Palette\nPrimary Colors:\n\nBrand Blue: #3c8dbc (Links, buttons, active states)\nDark Background: #2c3b41 (Sidebar)\nWhite: #ffffff (Text, icons)\nMuted: #4f5962 (Borders, separators)\n\nAccent Colors: - Success/Active: #367fa9 - Border Highlight: rgba(255, 255, 255, 0.2)\nThese colors were chosen to maintain a professional, modern look while ensuring readability and accessibility.\n\n\n9.3. Interactivity\n\n\n9.3.1 shinyWidgets components\nPretty Checkbox Groups\n\nprettyCheckboxGroup(\n  inputId = \"schoolLevels\",\n  label = \"School Levels:\",\n  choices = c(\"Elementary\", \"Junior High\", \"Senior High\", \"Special Education\"),\n  status = \"primary\",\n  animation = \"smooth\",\n  icon = icon(\"check\")\n)\n\nThe checkboxes are styled wih the shinyWidgets package to provide enhanced visual feedback, clear active states and improved touch targets.\nPicker Inputs\n\npickerInput(\n  inputId = \"citySelect\",\n  label = \"Select City:\",\n  choices = cities,\n  options = list(\n    style = \"btn-primary\",\n    size = 5,\n    `live-search` = TRUE\n  )\n)\n\nThe pickerInput widget is used to create a dropdown with search functionality. This allows users to quickly find and select the desired city.\n\n\n9.3.2 shinyBS tooltips\n\nbsTooltip(\n  \"provincialBandwidth\",\n  \"Adjust the smoothing parameter for density estimation\",\n  placement = \"right\",\n  options = list(container = \"body\")\n)\n\nWhen adjusting the KDE bandwidth slider, we provide a tooltip to explain the purpose of this control. This improves accessibility while maintaining clear instruction delivery. The positioning of the tooltip is also non-intrusive to the main content.\n\n\n9.4 Visual Container System\n\n9.4.1 Box Components\nEach visualization is contained within a standardized box.\n\nbox(width = 6,\n    plotOutput(\"visualization\"),\n    title = \"Main Title\",\n    subtitle = \"Descriptive subtitle\",\n    status = \"primary\",\n    solidHeader = TRUE,\n    footer = div(\n      class = \"text-muted\",\n      style = \"font-style: italic; padding: 10px;\",\n      \"Contextual information\"\n    )\n)\n\nThe box component includes:\n\nConsistent padding\nClear visual hierarchy\nContextual footers\nSolid headers for emphasis\n\n\n\n9.4.2 Sidebar Sections\n\n.sidebar-section {\n  padding: 10px;\n  margin: 10px 0;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 4px;\n}\n\nThe sidebar controls are different depending on which tab the user is on. The sidebar section is deliberately styled according to the above to provide a clear visual separation from the main content area."
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#shiny-storyboarding",
    "href": "TakehomeEx/THE03C/THE03C.html#shiny-storyboarding",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "10.0 Shiny: Storyboarding",
    "text": "10.0 Shiny: Storyboarding\n\n10.1 User Personas\nEducation Policymaker\n\nUser Background: Maria, Director of Education Planning\nNeeds: Understand resource distribution, identify underserved areas\nGoals: Make data-driven decisions about new school locations\n\nUrban Planner\n\nUser Background: Ahmad, City Development Analyst\nNeeds: Analyze school accessibility relative to population density\nGoals: Integrate education facilities into urban development plans\n\nSchool Administrator\n\nUser Background: James, Private School Network Manager\nNeeds: Understand market gaps and opportunities\nGoals: Strategic planning for new educational facilities\n\n\n\n10.2 User Journey Map\n\n10.2.1 Initial Engagement\n\nEntry Point: Provincial Overview Tab\nFirst Impressions: School Distribution Chart\nProgression: KDE Map Exploration\nContext Building: Population Density Comparison\n\n\n\n10.2.2 Learning Flow\nProvincial Level Understanding\nStep 1: Overall Distribution - Views total school counts across cities - Notices East Jakarta has highest concentration - Questions: “Why this distribution?”\nStep 2: Density Patterns - Explores KDE map - Adjusts bandwidth to see clustering - Insight: Schools cluster in urban centers\nStep 3: Educational Level Analysis - Switches to level distribution - Compares proportions across cities - Discovery: Elementary schools dominate\nCity Level Deep Dive\nStep 1: City Selection - Chooses area of interest - Focuses on local patterns - Compares with provincial context\nStep 2: Public-Private Balance - Examines ownership ratios - Notes variations by district - Identifies service gaps\nStep 3: Spatial Analysis - Studies nearest neighbor results - Understands clustering patterns - Forms hypotheses about distribution\nStatistical Validation\nStep 1: Pattern Confirmation - Reviews quadrat analysis - Validates clustering observations - Builds confidence in findings\nStep 2: Cross-Analysis - Examines K-functions - Understands spatial relationships - Confirms or adjusts hypotheses\n\n\n\n10.3 Key Learning Moments\n\n10.3.1 Distribution Insights\nUser Thought Process\n\n“I see East Jakarta has the most schools, but…” -&gt;\n“The density map shows concentrations in unexpected areas” -&gt;\n“Population density explains some patterns, but not all” -&gt;\n“There might be historical or socioeconomic factors at play”\n\n\n\n10.3.2 Accessibility Analysis\nUser Realization Path\n\n“High school distribution seems more clustered than elementary” -&gt;\n“This makes sense given transportation capabilities of older students” -&gt;\n“But some areas might still be underserved” -&gt;\n“Need to compare with population age demographics”\n\n\n\n10.3.3 Policy Implications\nDecision-Making Process\n\n“Statistical tests confirm non-random distribution” -&gt;\n“Some areas show significant clustering” -&gt;\n“Need to balance between concentration and accessibility” -&gt;\n“Can identify priority areas for new facilities”\n\n\n\n\n10.4 Knowledge Building\n\n10.4.1 Core Insights\n\nSpatial Distribution Understanding\n\n\nPattern recognition\nClustering identification\nAccess gap discovery\n\n\nEducational Resource Balance\n\n\nPublic-private dynamics\nLevel distribution patterns\nService coverage analysis\n\n\nStatistical Validation\n\n\nPattern confirmation\nSignificance understanding\nEvidence-based conclusions\n\n\n\n10.4.2 Applied Learning\nObservation → Analysis → Validation → Action Example: Notices clustering → Examines local factors → Confirms statistical significance → Identifies development opportunities\nThis proposed storyboard emphasizes user discovery and learning, guiding stakeholders through meaningful analysis while maintaining flexibility for different analytical approaches. Each interaction builds upon previous knowledge, creating a comprehensive understanding of Jakarta’s educational landscape."
  },
  {
    "objectID": "TakehomeEx/THE03C/THE03C.html#references",
    "href": "TakehomeEx/THE03C/THE03C.html#references",
    "title": "Take Home Exercise 3 (Corrected)",
    "section": "References",
    "text": "References\n\nClaude AI. (n.d.). Claude AI. https://claude.ai/\nKraak, M. J. (2020). Advanced Applications of Spatial Analysis Dashboards. International Journal of Geographical Information Science.\nSeah, G. (2021). “Building a Storyboard for Analytics Dashboard”. https://giniceseah.netlify.app/posts/2021-07-31-storyboard/\nShneiderman, B., et al. (2016). Designing the User Interface: Strategies for Effective Human-Computer Interaction (6th ed.). Pearson."
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html",
    "href": "TakehomeEx/THE01/THE01.html",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "",
    "text": "This exercise aims to analyze the spatial and temporal patterns of conflict events in Myanmar from January 2021 to June 2024, using conflict data from the Armed Conflict Location & Event Data Project (ACLED). By employing geospatial analysis techniques, we seek to provide insights into the evolving nature of the conflict, its geographical distribution, and potential implications for conflict resolution and humanitarian efforts."
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html#introduction",
    "href": "TakehomeEx/THE01/THE01.html#introduction",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "1.0 Introduction",
    "text": "1.0 Introduction\nMyanmar, formerly known as Burma, has been embroiled in a complex and multifaceted conflict since its independence in 1948. The current phase of the conflict, which this study focuses on, began with the military coup on February 1, 2021. This coup abruptly ended a decade of quasi-democratic rule and plunged the country into a new era of political instability and armed conflict.\n\n1.1 Timeline of Conflict\nThe conflict in Myanmar is part of a long history of political instability and ethnic tensions. To understand the current situation, it’s crucial to consider the historical precedence:\n\n1948: Myanmar gains independence from British rule.\n1962: General Ne Win leads a military coup, establishing a one-party state.\n1988: Nationwide pro-democracy protests (8888 Uprising) are violently suppressed by the military.\n1990: The National League for Democracy (NLD) wins a landslide victory in elections, but the military refuses to hand over power.\n2011: The military junta is officially dissolved, leading to a period of quasi-democratic rule.\n2015: The NLD wins a majority in the first openly contested election in 25 years.\n\nRecent Events:\nFebruary 1, 2021: The Myanmar Armed Forces (Tatmadaw/junta) seizes power in a coup d’état, detaining State Counsellor Aung San Suu Kyi and other senior members of the ruling NLD party.\nFebruary 2021 onwards: Nationwide protests erupt against military rule, known as the Civil Disobedience Movement (CDM).\nApril 2021: The National Unity Government (NUG), a parallel government formed by ousted lawmakers and ethnic leaders, declares a “people’s defensive war” against the military junta.\n2021-2024: Ongoing armed conflict between the military, ethnic armed organizations (EAOs), and newly formed People’s Defence Forces (PDFs).\n\n\n1.2 Key Actors\nThe conflict in Myanmar involves multiple actors with diverse interests:\n\nTatmadaw (Myanmar Armed Forces: The main actor representing the military junta.\nNational Unity Government (NUG): The parallel government formed by ousted lawmakers and ethnic leaders.\nEthnic Armed Organizations (EAOs): The EAOs are made of disjointed groups representing ethnic minorities, some of which have been in conflict with the central government for decades.\nPeople’s Defence Forces (PDFs): A coalition of civilian resistance groups formed in response to the military coup.\n\n\n\n1.3 Regional Dynamics\nMyanmar’s conflict landscape is complex and multifaceted, with regional dynamics playing a crucial role:\n\nSagaing Region: Traditional hotspot of resistance against the military junta, with intense fighting between the military and local PDFs.\nRakhine State: Historically a site of conflict involving the Arakan Army (EAO) and issues related to the Rohingya minority.\nShan State: Complex dynamics involving multiple EAOs and ongoing conflicts over territory and resources.\nYangon Region: The country’s largest city and former capital, a focal point for urban resistance and protests."
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html#data-collection",
    "href": "TakehomeEx/THE01/THE01.html#data-collection",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "2.0 Data Collection",
    "text": "2.0 Data Collection\n\n2.1 Armed Conflict Data\nFor this assignment, armed conflict data of Myanmar between January 2021 - June 2024 from Armed Conflict Location & Event Data (ACLED), an independent, impartial, international non-profit organization collecting data on violent conflict and protest in all countries and territories in the world, was used.\n\n\n2.2 GIS Data\nRelevant Geospatial data was gathered from Myanmar Information Management Unit (MIMU)"
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html#data-wrangling",
    "href": "TakehomeEx/THE01/THE01.html#data-wrangling",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "3.0 Data Wrangling",
    "text": "3.0 Data Wrangling\n\n3.1 Loading Packages\n\npacman::p_load(sf, tidyverse, tmap, maptools, raster, spatstat, sp, sparr, OpenStreetMap, stars, RColorBrewer, knitr, igraph, viridis, patchwork, gridExtra, ggrepel, tmaptools, mapview)\n\n\n\n3.2 Loading Data\nBefore proceeding with our analysis, we need to import two sets of data:\n\nArmed Conflict Data: This dataset from ACLED contains information on the location, date, and type of conflict events that occurred in Myanmar from January 1, 2024 until June 30, 2024.\nAdministrative Boundary Data: These shapefiles from MIMU contain the administrative boundaries of Myanmar at the state and region level.\n\n\nacled_sf &lt;- read_csv(\"data/aspatial/ACLED_Myanmar.csv\") %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;%\n  mutate(event_date = dmy(event_date)) %&gt;%\n  mutate(\n    quarter = paste0(year, \"-Q\", quarter(event_date, with_year = FALSE)),\n    quarter = factor(quarter)\n  ) %&gt;%\n  relocate(quarter, .after = year)\n\nRows: 51553 Columns: 32\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): event_id_cnty, event_date, disorder_type, event_type, sub_event_ty...\ndbl (12): year, time_precision, inter1, inter2, interaction, iso, latitude, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nExploring the Armed Conflict Data\n\nhead(acled_sf, n=10)\n\nSimple feature collection with 10 features and 31 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 94.9021 ymin: 21.9251 xmax: 96.6819 ymax: 23.1269\nGeodetic CRS:  WGS 84\n# A tibble: 10 × 32\n   event_id_cnty event_date  year quarter time_precision disorder_type         \n   &lt;chr&gt;         &lt;date&gt;     &lt;dbl&gt; &lt;fct&gt;            &lt;dbl&gt; &lt;chr&gt;                 \n 1 MMR64313      2024-06-30  2024 2024-Q2              1 Political violence    \n 2 MMR64320      2024-06-30  2024 2024-Q2              1 Political violence    \n 3 MMR64321      2024-06-30  2024 2024-Q2              1 Political violence    \n 4 MMR64322      2024-06-30  2024 2024-Q2              1 Strategic developments\n 5 MMR64323      2024-06-30  2024 2024-Q2              1 Political violence    \n 6 MMR64324      2024-06-30  2024 2024-Q2              1 Strategic developments\n 7 MMR64325      2024-06-30  2024 2024-Q2              1 Political violence    \n 8 MMR64326      2024-06-30  2024 2024-Q2              1 Political violence    \n 9 MMR64328      2024-06-30  2024 2024-Q2              1 Political violence    \n10 MMR64330      2024-06-30  2024 2024-Q2              1 Political violence    \n# ℹ 26 more variables: event_type &lt;chr&gt;, sub_event_type &lt;chr&gt;, actor1 &lt;chr&gt;,\n#   assoc_actor_1 &lt;chr&gt;, inter1 &lt;dbl&gt;, actor2 &lt;chr&gt;, assoc_actor_2 &lt;chr&gt;,\n#   inter2 &lt;dbl&gt;, interaction &lt;dbl&gt;, civilian_targeting &lt;chr&gt;, iso &lt;dbl&gt;,\n#   region &lt;chr&gt;, country &lt;chr&gt;, admin1 &lt;chr&gt;, admin2 &lt;chr&gt;, admin3 &lt;chr&gt;,\n#   location &lt;chr&gt;, geo_precision &lt;dbl&gt;, source &lt;chr&gt;, source_scale &lt;chr&gt;,\n#   notes &lt;chr&gt;, fatalities &lt;dbl&gt;, tags &lt;chr&gt;, timestamp &lt;dbl&gt;,\n#   population_best &lt;dbl&gt;, geometry &lt;POINT [°]&gt;\n\n\nA quick glance at the data reveals that there are a few columns to look out for:\n\nacled_sf\n\n\n\n\n\n\n\nfield\nclass\nrepresentation\n\n\n\n\nevent_date\ndate\nWhen the conflict event occurred\n\n\nyear\ndbl\nYear of conflict event\n\n\nquarter\nfctr\nWhich quarter the conflict event occured in the year\n\n\nevent_type\nchr\nType of conflict\n\n\nactor1\nchr\nMain Actor 1\n\n\nactor2\nchr\nMain Actor 2\n\n\nadmin1\nchr\nAdministrative Region\n\n\nadmin2\nchr\nDistrict\n\n\nadmin3\nchr\nTownship\n\n\nfatalities\ndbl\nNumber of fatalities in the conflict event\n\n\n\n\nadm0 &lt;- st_read(dsn = \"data/adms\", layer = \"mmr_polbnda_adm0_250k_mimu_1\")\n\nReading layer `mmr_polbnda_adm0_250k_mimu_1' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\TakehomeEx\\THE01\\data\\adms' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\nadm1 &lt;- st_read(dsn = \"data/adms\", layer = \"mmr_polbnda_adm1_250k_mimu_1\")\n\nReading layer `mmr_polbnda_adm1_250k_mimu_1' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\TakehomeEx\\THE01\\data\\adms' \n  using driver `ESRI Shapefile'\nSimple feature collection with 15 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\n\n\n3.3 Visualization of Myanmar Administrative Divisions\nBefore we conducting any analysis, we need to familiarize ourselves with the entire map of Myanmar. Myanmar is divided into several administrative divisions, including states, regions, districts, and townships. We will visualize these administrative divisions using the tmap package.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ncolorblind_friendly_palette &lt;- brewer.pal(8, \"Set2\")\n\nmyanmar_map &lt;- tm_shape(adm1) +\n  tm_polygons(\"ST\", \n              title = \"States and Regions\",\n              palette = colorblind_friendly_palette,\n              border.col = \"white\",\n              border.alpha = 0.5) +\n  tm_shape(adm0) +\n  tm_borders(lwd = 2) +\n  tm_graticules(labels.inside.frame = FALSE,\n                labels.rot = c(0, 90)) +\n  tm_layout(main.title = \"Administrative Divisions of Myanmar\",\n            main.title.size = 1.2,\n            legend.outside = TRUE,\n            legend.outside.position = \"right\",\n            frame = FALSE)\n\n# tmap_save(myanmar_map, filename = \"myanmar_admin_divisions.png\", width = 8, height = 10)\nmyanmar_map"
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html#preliminary-exploratory-data-analysis-understanding-the-conflict-landscape",
    "href": "TakehomeEx/THE01/THE01.html#preliminary-exploratory-data-analysis-understanding-the-conflict-landscape",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "4.0 Preliminary Exploratory Data Analysis: Understanding the Conflict Landscape",
    "text": "4.0 Preliminary Exploratory Data Analysis: Understanding the Conflict Landscape\n\n4.1 Overall Landscape of Conflict Events\nSpatial Point Distribution\nThe point map of conflict events in Myanmar, while rudimentary, is crucial for understanding the spatial distribution of the conflict. At a glance, we can observe regional hotspots.\n\npoint_map &lt;- ggplot() +\n  geom_sf(data = adm1, fill = \"white\", color = \"gray\") +\n  geom_sf(data = acled_sf, aes(color = event_type), size = 0.5, alpha = 0.6) +\n  theme_minimal() +\n  labs(title = \"Distribution of Conflict Events in Myanmar\",\n       color = \"Event Type\") +\n  guides(color = guide_legend(override.aes = list(size = 5, alpha = 1, shape = 15))) +\n  theme(legend.key.size = unit(1, \"cm\"),\n        legend.text = element_text(size = 8),\n        legend.title = element_text(size = 10, face = \"bold\"))\n\npoint_map\n\n\n\n\n\n\n\n\nKey Observations:\n\nThere appears to be a much higher concentration of events in the Central and Northern regions\nCoastal areas and southern regions show fewer events, which suggests the conflict is more intense in the interior of the country.\n\nEvent Type Distribution\nAnother basic plot, but important to our discussion, is the distribution of event types.\n\nevent_type_plot &lt;- acled_sf %&gt;%\n  count(event_type) %&gt;%\n  ggplot(aes(x = reorder(event_type, n), y = n, fill = event_type)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = n), hjust = -0.2, size = 3) +\n  coord_flip() +\n  theme_minimal() +\n  labs(title = \"Distribution of Event Types\",\n       x = \"Event Type\", y = \"Number of Events\") +\n  theme(legend.position = \"none\") + \n  scale_y_continuous(expand = expansion(mult = c(0, 0.3)))\n\nevent_type_plot\n\n\n\n\n\n\n\n\nKey Observations:\n\nBattles appear to be the most common type of event, indicating a high level of direct armed confrontation.\nViolence against civilians is also prevalent, highlighting the humanitarian impact of the conflict.\nProtests and riots suggest significant civil unrest component to the overall conflict landscape.\nThe presence of strategic developments indicates that non-violent events also play a role in shaping the conflict dynamics.\n\nAt this stage, looking at numbers alone is insufficient and will not guarantee a comprehensive picture of the conflict landscape. We need to delve deeper into the data to uncover more nuanced insights.\nTop Actors\nNo conflict discussion can be complete without framing the key actors involved.\n\ntop_actors &lt;- acled_sf %&gt;%\n  gather(key = \"actor_type\", value = \"actor\", actor1, actor2) %&gt;%\n  count(actor) %&gt;%\n  top_n(5, n) %&gt;%\n  mutate(actor = fct_reorder(actor, n, .desc = TRUE)) %&gt;%\n  ggplot(aes(x = actor, y = n, fill = actor)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = n, y = n), hjust = -0.2) +\n  coord_flip() +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.25))) +\n  theme_minimal() +\n  labs(title = \"Top 5 Actors by Number of Events\",\n       x = \"Actor\", y = \"Number of Events\") +\n  theme(legend.position = \"none\")\n\ntop_actors\n\n\n\n\n\n\n\n\nKey Observations:\n\nMilitary-Centric Conflict: The Myanmar Armed Forces are overwhelmingly involved in the highest nunmber of events, more than all other actors combined.\nHumanitarian Crisis: The high involvement of civilians implies a severe humanitarian impact, potentially including human rights violations, displacement, and civilian casualties.\nAsymmetric Conflict: The vast disparity between military events and other groups is a situation where the state’s armed forces are engaged against multiple, smaller opposition groups and civilian resistance.\nPotential for Escalation: The high involvement of civilians and protestors alongside military actions may indicate a volatile solution with potential for further escalation. Whether this holds true, we need to delve deeper into the data.\n\nBonus: Network Analysis of Top Actors\nIf it wasn’t apparent that the Myanmar Armed Forces is the central antagonist in the conflict, a network analysis of the top actors will make it abundantly clear. We want to explicitly show their deep involvement in the conflict landscape.\n\nactor_network &lt;- acled_sf %&gt;%\n  dplyr::select(actor1, actor2) %&gt;%\n  filter(actor1 != actor2) %&gt;%\n  group_by(actor1, actor2) %&gt;%\n  summarise(weight = n(), .groups = \"drop\") %&gt;%\n  filter(weight &gt; 30) \n\ngraph &lt;- graph_from_data_frame(actor_network, directed = FALSE)\ntop_actors &lt;- names(sort(degree(graph), decreasing = TRUE)[1:10])\ngraph &lt;- induced_subgraph(graph, top_actors)\n\ncomm &lt;- cluster_louvain(graph)\nV(graph)$community &lt;- membership(comm)\nV(graph)$degree &lt;- degree(graph)\n\nlayout &lt;- layout_with_kk(graph)\n\nnetwork_data &lt;- as.data.frame(layout)\nnames(network_data) &lt;- c(\"x\", \"y\")\nnetwork_data$name &lt;- V(graph)$name\nnetwork_data$community &lt;- V(graph)$community\nnetwork_data$degree &lt;- V(graph)$degree\n\nset.seed(123)\nnetwork_data$x &lt;- network_data$x + runif(nrow(network_data), -0.05, 0.05)\nnetwork_data$y &lt;- network_data$y + runif(nrow(network_data), -0.05, 0.05)\n\nedge_data &lt;- as_edgelist(graph) %&gt;%\n  as.data.frame() %&gt;%\n  rename(from = V1, to = V2) %&gt;%\n  left_join(actor_network, by = c(\"from\" = \"actor1\", \"to\" = \"actor2\")) %&gt;%\n  left_join(network_data, by = c(\"from\" = \"name\")) %&gt;%\n  rename(x = x, y = y) %&gt;%\n  left_join(network_data, by = c(\"to\" = \"name\"), suffix = c(\"\", \"_end\")) %&gt;%\n  rename(xend = x_end, yend = y_end)\n\nnum_communities &lt;- length(unique(network_data$community))\ncolor_palette &lt;- colorRampPalette(brewer.pal(8, \"Dark2\"))(num_communities)\n\nnetwork_plot &lt;- ggplot() +\n  geom_segment(data = edge_data, aes(x = x, y = y, xend = xend, yend = yend, linewidth = weight),\n               alpha = 0.3, color = \"lightgray\", na.rm = TRUE) +\n  geom_point(data = network_data, aes(x = x, y = y, color = as.factor(community), size = degree)) +\n  geom_text(data = network_data, aes(x = x, y = y, label = name), check_overlap = TRUE, size = 3, vjust = 1.5) +\n  scale_color_manual(values = color_palette) +\n  scale_size_continuous(range = c(2, 10)) +\n  theme_void() +\n  labs(title = \"Network of Top Actors in Conflicts\",\n       subtitle = \"Showing connections with weight &gt; 30\") +\n  theme(legend.position = \"none\",\n         plot.margin = unit(c(1, 1, 1, 1), \"cm\")) +\n  coord_cartesian(clip = \"off\") +\n  expand_limits(x = c(min(network_data$x) - 0.4, max(network_data$x) + 0.4), \n                y = c(min(network_data$y) - 0.4, max(network_data$y) + 0.4))\n\nggsave(\"network_plot.png\", network_plot, width = 12, height = 10, dpi = 300)\n\n\n\n\nNetwork Plot\n\n\nKey Observations:\n\nCentral Node - Myanmar Armed Forces: Being the largest node in the graph, the military forces has connections to almost all other actors. Unsurprisingly, it is the most connected and influential actor in the conflict. This is unsurprising for several reasons:\n\nThe national military is engaged in conflicts with multiple groups across the country\nIt has the resources and reach to be involved in most conflict events\n\nCivilian (Myanmar) Node: The second largest node represents civilians. Civilians are frequently targets or involved in conflict events.\n\nSection Recap\n\nCentral and Northern regions show higher conflict events\nMyanmar Armed Forces is the primary actor in the conflict\nThe volatile situation may give way to further escalation\n\n\n\n4.2 Progression of Conflict\nIn the previous section, we presented a snapshot of the conflict landscape. Since 2021, over 3.5 years of the conflict has passed, and we want to understand how the conflict has evolved.\nTemporal Trend: Conflict Events\n\ntemporal_plot &lt;- acled_sf %&gt;%\n  count(quarter) %&gt;%\n  mutate(quarter = factor(quarter, levels = unique(quarter[order(quarter)]))) %&gt;%\n  ggplot(aes(x = quarter, y = n)) +\n  geom_line(aes(group = 1), color = \"blue\", alpha = 0.7) +\n  geom_point(color = \"blue\", size = 3) +\n  geom_smooth(aes(group = 1), formula = y ~ x, method = \"loess\", se = TRUE, \n              color = \"red\", fill = \"pink\", alpha = 0.3, linewidth = 1.2) +\n  labs(title = \"Trend of Conflict Events Over Time\",\n       x = \"Quarter\", y = \"Number of Events\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = scales::comma)\n\nprint(temporal_plot)\n\n\n\n\n\n\n\n\nKey Observations:\n\nPeak and Decline: There is a clear peak in conflict events around 2021-Q2 to 2022-Q1, around the start of the conflict. Subsequently, there is a general decline in conflict events over time.\n\nThe conflict might be starting to stabilize or reduce in intensity.\n\nRecent Fluctuations: The overall trend may be downward, but there are noticeable fluctuations in the most recent quarters, suggesting the conflict remains volatile.\nUncertainty in Trend: The large confidence area presents a high degree of uncertainty. This could prove challenging to make definitive predictions about future conflict patterns based on this data alone.\n\nTemporal Trend: Fatalities\n\nfatalities_trend &lt;- acled_sf %&gt;%\n  group_by(quarter) %&gt;%\n  summarise(total_fatalities = sum(fatalities, na.rm = TRUE)) %&gt;%\n  mutate(quarter = factor(quarter, levels = unique(quarter[order(quarter)]))) %&gt;%\n  ggplot(aes(x = quarter, y = total_fatalities)) +\n  geom_line(aes(group = 1), color = \"blue\", alpha = 0.7) +\n  geom_point(color = \"blue\", size = 3) +\n  geom_smooth(aes(group = 1), formula = y ~ x, method = \"loess\", se = TRUE, \n              color = \"red\", fill = \"pink\", alpha = 0.3, linewidth = 1.2) +\n  labs(title = \"Trend of Fatalities Over Time in Myanmar\",\n       x = \"Quarter\", y = \"Total Fatalities\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = scales::comma)\n\nfatalities_trend\n\n\n\n\n\n\n\n\nKey Observations:\n\nRapid Initial Increase: There’s a sharp rise in fatalities from 2021-Q1 to 2022-Q1, indicating an intensification of the conflict in its early stages, contingent with the observations in the previous plot.\nStabilization at High Level: After the initial peak, fatalities have stabilized at a high level, with some fluctuations but no clear downward trend.\n\nHeatmap: Concentration of Conflict Events\n\nacled_df &lt;- acled_sf %&gt;%\n  mutate(Longitude = st_coordinates(geometry)[,1],\n         Latitude = st_coordinates(geometry)[,2])\n\nanimated_heatmap &lt;- ggplot() +\n  stat_density_2d(data = acled_df, \n                  aes(x = Longitude, \n                      y = Latitude,\n                      fill = after_stat(level)),\n                  geom = \"polygon\", \n                  alpha = 0.5) +\n    geom_sf(data = adm1, fill = NA, color = \"gray\") +\n  scale_fill_viridis() +\n  theme_minimal() +\n  labs(title = \"Heatmap of Conflict Events in Myanmar\",\n       subtitle = \"Quarter: {current_frame}\",\n       x = \"Longitude\",\n       y = \"Latitude\",\n       fill = \"Density\") +\n  gganimate::transition_manual(quarter) +\n  gganimate::ease_aes('linear')\n\n# animated_heatmap_render &lt;- gganimate::animate(animated_heatmap, \n#                                    nframes = length(unique(acled_df$quarter)), \n#                                    fps = 1, \n#                                    width = 800, \n#                                    height = 600)\n# gganimate::anim_save(\"animated_heatmap.gif\", animated_heatmap_render)\n\n\n\n\nAnimated Heatmap\n\n\nKey Observations:\n\nSpatial Concentration: Conflict events are densely concentrated in the Central, Northern and Southern regions of Myanmar.\n\nCentral/Northern Hotspots: Sagaing, Magway, Mandalay, Shan\nSouthern Hotspots: Yangon\n\nStabilization of Conflict: The density of each hotspot appears to decrease over time, suggesting a potential stabilization of the conflict in these areas.\n\nSection Recap\n\nWe have identified conflict hotspots as Sagaing, Magway, Mandalay, Shan, and Yangon.\nThe conflict may be stabilizing, but the recent fluctuations and high fatality rates may suggest a volatile situation, in line with our earlier speculation.\n\n\n\n4.3 Contested Areas and Relative Impact\nMost Active Administrative Regions\n\nclean_admin_name &lt;- function(name) {\n  name &lt;- str_remove(name, \"-.*$\")\n  name &lt;- str_remove(name, \"\\\\(.*\\\\)\")\n  return(str_trim(name))\n}\n\ntop_10_regions &lt;- acled_sf %&gt;%\n  st_drop_geometry() %&gt;%\n  mutate(admin1 = clean_admin_name(admin1)) %&gt;%\n  count(admin1) %&gt;%\n  arrange(desc(n)) %&gt;%\n  top_n(10, n)\n\ntop_regions_plot &lt;- ggplot(top_10_regions, aes(x = reorder(admin1, n), y = n, fill = n)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  scale_fill_viridis(option = \"D\", direction = -1) +\n  labs(title = \"Top 10 Administrative Regions with Most Conflicts\",\n       x = \"Administrative Region\",\n       y = \"Number of Conflict Events\") +\n  theme_minimal() +\n  theme(axis.text.y = element_text(angle = 0, hjust = 1))\n\ntop_regions_plot\n\n\n\n\n\n\n\n\nThe above bar chart verifies our earlier observations, with Sagaing, Shan, Mandalay, Magway and Yangon being the most conflict-prone regions in Myanmar.\nScatter Plot Analysis: Fatalities vs Conflict Events across Administrative Divisions\n\nevents_fatalities &lt;- acled_sf %&gt;%\n  mutate(admin1 = clean_admin_name(admin1)) %&gt;%\n  group_by(admin1) %&gt;%\n  summarise(\n    total_events = n(),\n    total_fatalities = sum(fatalities, na.rm = TRUE)\n  )\n\nggplot(events_fatalities, aes(x = total_events, y = total_fatalities)) +\n  geom_point(aes(size = total_events, color = total_fatalities), alpha = 0.7) +\n  geom_text_repel(aes(label = admin1), size = 3, max.overlaps = Inf) +\n  scale_size_continuous(range = c(2, 10)) +\n  scale_color_viridis_c() +\n  scale_x_log10(labels = scales::comma) +\n  scale_y_log10(labels = scales::comma) +\n  labs(\n    title = \"Fatalities vs Number of Events by Administrative Division\",\n    x = \"Total Number of Events (log scale)\",\n    y = \"Total Fatalities (log scale)\",\n    size = \"Number of Events\",\n    color = \"Fatalities\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"right\") +\n  coord_cartesian(clip = \"off\")\n\n\n\n\n\n\n\n\nKey Observations:\n\nSeverity Hotspots: Regions in the upper right quadrant experience intense conflict with both high event frequency and high fatalities.\n\nSagaing’s position in the upper right corner indicates it’s the most severely affected region.\nMagway, Shan and Mandalay also show high levels of conflict intensity.\n\nOutliers: Yangon shows an interesting pattern with a relatively high number of events but lower fatalities, possibly indicating a different nature of conflict.\n\nSection Recap\n\nConflict hotspots result in the most number of events and fatalities\nYangon’s unique position calls into question further research on the regions’ geographical and political dynamics\n\n\n\n4.4 Overall Analysis\n\nConflict Intensity and Distribution: The conflict in Myanmar is not uniformly distributed, with clear hotspots in the Central and Northern regions.\n\nHypothesis Test: Test if the spatial distribution of conflict events is random.\n\nTemporal Trends and Conflict Evolution: While there’s an overall declining trend in conflict events since the peak in 2021 - 2022, fatalities remain high, and recent fluctuations suggest ongoing volatality. This pattern indicates a potential shift in conflict dynamics rather than de-escalation.\n\nResearch Question: How has the nature of the conflict changed over time, and what factors are contributing to the sustained high fatality rates despite decreasing event frequency?\n\nCentral Role of Myanmar Armed Forces: The miltary is overwhelmingly involved in conflict events. Their dominance suggests an asymmetric conflict where state forces are engaged against multiple, smaller opposition groups and civilian resistance.\nRegional Variations in Conflict Characteristics: The Southern front on a whole is relatively less contested, though Yangon shows a unique pattern."
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html#first-order-spatial-temporal-patterns-analysis-a-closer-look-at-the-myanmar-conflict-landscape",
    "href": "TakehomeEx/THE01/THE01.html#first-order-spatial-temporal-patterns-analysis-a-closer-look-at-the-myanmar-conflict-landscape",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "5.0 First Order Spatial-Temporal Patterns Analysis: A Closer Look at the Myanmar Conflict Landscape",
    "text": "5.0 First Order Spatial-Temporal Patterns Analysis: A Closer Look at the Myanmar Conflict Landscape\n\n5.1 Quarterly Kernel Density Estimation\nMethodology\n\nTemporal Trends: Quarterly KDE maps will be generated to visualize the spatial distribution of conflict events over time.\nDuplicate Coordinates: There are duplicates in the Myanmar conflict data. KDE requires unique points to estimate the density. We will use the spatstat package to handle this issue.\n\nImplementation\nThe kde_quarterly function generates KDE layer for each quarter, allowing us to observe how the spatial intensity of conflicts changes over time.\n\nkde_quarterly &lt;- function(data, quarter, bw = NULL) {\n  data_quarter &lt;- data %&gt;%\n    filter(quarter == !!quarter)\n  \n  window &lt;- as.owin(st_bbox(adm0))\n  coords &lt;- st_coordinates(data_quarter)\n  \n  unique_coords &lt;- unique(coords)\n  ppp_obj &lt;- ppp(unique_coords[,1], unique_coords[,2], window = window)\n  \n  ppp_obj &lt;- rjitter(ppp_obj, retry = TRUE, nsim = 1, drop = TRUE)\n  ppp_obj &lt;- unique.ppp(ppp_obj)\n  \n  if (is.null(bw)) {\n    bw &lt;- bw.diggle(ppp_obj)\n  }\n  \n  tryCatch({\n    kde &lt;- density.ppp(ppp_obj, sigma = bw.diggle, edge = TRUE)\n    r &lt;- raster(kde)\n    r_masked &lt;- mask(r, as(adm0, \"Spatial\"))\n    return(r_masked)\n  }, error = function(e) {\n    warning(paste(\"Error in quarter\", quarter, \":\", e$message))\n    return(NULL)\n  })\n}\n\n\nquarters &lt;- unique(acled_sf$quarter) %&gt;%\n  sort()\nquarters\n\n [1] 2021-Q1 2021-Q2 2021-Q3 2021-Q4 2022-Q1 2022-Q2 2022-Q3 2022-Q4 2023-Q1\n[10] 2023-Q2 2023-Q3 2023-Q4 2024-Q1 2024-Q2\n14 Levels: 2021-Q1 2021-Q2 2021-Q3 2021-Q4 2022-Q1 2022-Q2 2022-Q3 ... 2024-Q2\n\n\nBy applying the KDE function across all quarters, we create a comprehensive temporal view of the conflict’s spatial patterns\n\ncreate_kde_layers &lt;- function(data, quarters) {\n  kde_layers &lt;- lapply(quarters, function(q) {\n    tryCatch({\n      kde_quarterly(data, q)\n    }, error = function(e) {\n      warning(paste(\"Error in quarter\", q, \":\", e$message))\n      return(NULL)\n    })\n  })\n  \n  kde_layers &lt;- kde_layers[!sapply(kde_layers, is.null)]\n  names(kde_layers) &lt;- quarters[!sapply(kde_layers, is.null)]\n  return(kde_layers)\n}\n\nWe also ensure to establish a consistent density range across all quarters to enable fair comparison between time periods. This identifies true changes in conflict intensity rather than artifacts of varying scales.\n\nkde_layers &lt;- create_kde_layers(acled_sf, quarters)\n\nget_density_range &lt;- function(kde_layers) {\n  min_density &lt;- min(sapply(kde_layers, function(layer) min(values(layer), na.rm = TRUE)))\n  max_density &lt;- max(sapply(kde_layers, function(layer) max(values(layer), na.rm = TRUE)))\n  return(c(min_density, max_density))\n}\n\ndensity_range &lt;- get_density_range(kde_layers)\n\nThe KDE plots are grouped by year, with the intention of allowing for easier temporal comparison and identification of trends.\n\nplot_kde_layer &lt;- function(kde_layer, quarter, admin_boundary, density_range) {\n  if (is.null(kde_layer)) {\n    return(ggplot() + theme_void() + ggtitle(paste(\"No data for\", quarter)))\n  }\n  \n  kde_df &lt;- as.data.frame(kde_layer, xy = TRUE) %&gt;%\n    rename(density = layer)\n  \n  ggplot() +\n    geom_raster(data = kde_df, aes(x = x, y = y, fill = density)) +\n    geom_sf(data = admin_boundary, fill = NA, color = \"black\", size = 0.2) +\n    scale_fill_viridis_c(option = \"plasma\",\n                         limits = density_range,\n                         oob = scales::squish,\n                         name = \"Conflict\\nDensity\") +\n    labs(title = paste(\"KDE:\", quarter),\n         x = NULL, y = NULL) +\n    theme_minimal() +\n    theme(plot.title = element_text(size = 10, face = \"bold\"),\n          legend.position = \"right\",\n          axis.text = element_blank(),\n          axis.ticks = element_blank()) +\n    coord_sf()\n}\n\ncreate_kde_plots &lt;- function(kde_layers, density_range) {\n  lapply(seq_along(kde_layers), function(i) {\n    plot_kde_layer(kde_layers[[i]], names(kde_layers)[i], adm0, density_range)\n  })\n}\nkde_plots &lt;- create_kde_plots(kde_layers, density_range)\n\nfor (i in seq(1, length(kde_plots), by = 4)) {\n  end &lt;- min(i + 3, length(kde_plots))\n  plots_to_combine &lt;- kde_plots[i:end]\n  combined_plot &lt;- wrap_plots(plots_to_combine, ncol = 2)\n  print(combined_plot)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKey Observations\n\nTemporal Evolution: There’s a noticeable increase in conflict density across the country from 2021 Q2 to 2022 Q4, followed by a noticeable decline.\nSpatial Concentration:\n\n\nThe Central and Northern regions consistently show higher conflict density across all quarterly snapshots, aligning with our earlier identification of hotspots in Sagaing, Magway, Mandalay and Shan\nThe Southern regions, including Yangon, shows less intense conflict density\n\n\n\n5.2 Quarterly Spatio-Temporal KDE\nData Preparation\n\nPrepare the study area as a spatial window\nCalculate number of quarters since start of 2021 and create a new spatial dataframe with a numeric quarter column\nConverts spatial data to a point pattern object, applying jittering to handle duplicate points\n\n\nutm_crs &lt;- st_crs(32647)\n\nprepare_study_area &lt;- function(adm0) {\n  adm0 %&gt;%\n    st_transform(utm_crs) %&gt;%\n    st_union() %&gt;%\n    st_zm(drop = TRUE, what = \"ZM\") %&gt;%\n    as.owin()\n}\nadm0_window &lt;- prepare_study_area(adm0)\n\nacled_sf_projected &lt;- st_transform(acled_sf, utm_crs)\n\ncalculate_quarters &lt;- function(date) {\n  (year(date) - 2021) * 4 + quarter(date)\n}\n\nacled_quarter &lt;- st_sf(\n  QuarterNumeric = calculate_quarters(acled_sf_projected$event_date),\n  geometry = st_geometry(acled_sf_projected)\n)\n\nacled_quarter_ppp &lt;- as.ppp(acled_quarter)\nacled_quarter_ppp &lt;- rjitter(acled_quarter_ppp, retry = TRUE, nsim = 1, drop = TRUE)\nacled_quarter_ppp &lt;- unique.ppp(acled_quarter_ppp)\n\nSummary\n\nacled_owin &lt;- acled_quarter_ppp[adm0_window]\nsummary_output &lt;- summary(acled_owin)\n# print(summary_output)\n\nPart of the summary output will be shown as follows:\nMarked planar point pattern: 51458 points Average intensity 7.683584e-08 points per square unit\nCoordinates are given to 16 decimal places\nmarks are numeric, of type ‘double’ Summary: Min. 1st Qu. Median Mean 3rd Qu. Max. 1.000 4.000 7.000 7.087 11.000 14.000\nWindow: polygonal boundary 563 separate polygons (3 holes) enclosing rectangle: [-210008.6, 724647.6] x [1072026.3, 3158467.1] units (934700 x 2086000 units) Window area = 6.69714e+11 square units Fraction of frame area: 0.343\nSpatio-Temporal KDE Computation\nTo perform the spatio-temporal KDE analysis, we use spattemp.density from the spatstat package. This function estimates the spatio-temporal intensity of point patterns.\n\nst_kde &lt;- spattemp.density(acled_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\nsummary(st_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 43044.42 (spatial)\n  lambda = 0.0046 (temporal)\n\nNo. of observations\n  51456 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 14]\n\nEvaluation\n  128 x 128 x 14 trivariate lattice\n  Density range: [1.542265e-25, 2.363246e-10]\n\n\nSpatio-Temporal KDE Visualization\nThe code below handles:\n\nExtracting and formatting STKDE quarterly results\nCreating individual plots for each quarter\nCombining and displaying plots in groups of four\n\n\nplot_stkde_layer &lt;- function(st_kde, quarter, year, adm0, density_range) {\n  quarter_data &lt;- as.data.frame(st_kde$z.cond[[quarter]]$v)\n  colnames(quarter_data) &lt;- st_kde$z.cond[[quarter]]$xcol\n  quarter_data$y &lt;- st_kde$z.cond[[quarter]]$yrow\n  \n  quarter_data_long &lt;- tidyr::pivot_longer(quarter_data, \n                                           cols = -y, \n                                           names_to = \"x\", \n                                           values_to = \"density\")\n  quarter_data_long$x &lt;- as.numeric(quarter_data_long$x)\n  quarter_data_long &lt;- st_as_sf(quarter_data_long, coords = c(\"x\", \"y\"), crs = st_crs(adm0))\n  \n  ggplot() +\n    geom_sf(data = quarter_data_long, aes(fill = density, color = density), size = 0.1) +\n    geom_sf(data = adm0, fill = NA, color = \"black\", size = 0.5) +\n    scale_fill_viridis_c(option = \"plasma\",\n                         trans = \"log10\",\n                         labels = scales::scientific,\n                         limits = density_range) +\n    scale_color_viridis_c(option = \"plasma\",\n                         trans = \"log10\",\n                         labels = scales::scientific,\n                         limits = density_range) +\n    coord_sf() +\n    theme_minimal() +\n    labs(title = paste0(\"STKDE: \", year, \"-Q\", (quarter-1) %% 4 + 1),\n         x = NULL, y = NULL) +\n    theme(legend.position = \"right\",\n          plot.title = element_text(size = 10, face = \"bold\"),\n          axis.text = element_blank(),\n          axis.ticks = element_blank())\n}\n\ncreate_stkde_plots &lt;- function(st_kde, adm0, density_range) {\n  plots &lt;- list()\n  for (i in 1:length(st_kde$z.cond)) {\n    year &lt;- 2021 + (i-1) %/% 4\n    quarter &lt;- (i-1) %% 4 + 1\n    plots[[i]] &lt;- plot_stkde_layer(st_kde, i, year, adm0, density_range)\n  }\n  return(plots)\n}\n\ndisplay_stkde_plots &lt;- function(stkde_plots) {\n  for (i in seq(1, length(stkde_plots), by = 4)) {\n    end &lt;- min(i + 3, length(stkde_plots))\n    plots_to_combine &lt;- stkde_plots[i:end]\n    combined_plot &lt;- wrap_plots(plots_to_combine, ncol = 2)\n    print(combined_plot)\n  }\n}\n\nall_densities &lt;- unlist(lapply(st_kde$z.cond, function(x) as.vector(x$v)))\ndensity_range &lt;- range(quantile(all_densities[is.finite(all_densities)], probs = c(0.01, 0.99), na.rm = TRUE))\nstkde_plots &lt;- create_stkde_plots(st_kde, adm0, density_range)\ndisplay_stkde_plots(stkde_plots)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe density range of 0.01 and 0.99 quantiles was used to exclude extreme outliers and ensure a decently consistent scale across all plots.\n\n\nKey Observations:\n\nTemporal Evolution:\n\n\nIn 2021, the conflict appears relatively concentrated in the Central and Northern regions\nAround 2022-2023, there is an intensification and spread of conflict events across broader areas of the country\nBy 2024, there seems to be a slight contraction in the intensity and spread of events, though still remaining at elevated levels compared to the early period.\n\n\nSpatial Patterns:\n\n\nPersistent Hotspots: Certain areas, particularly in the Central and Northern regions show consistently high-intensity conflicts through the study period.\nExpanding Conflict Zero: The conflict intensity is seen spreading to new areas, suggesting an expansion of the conflict’s geographical scope.\nRegional Variations: The area around Yangon shows lower intensity throughout but with noticeable fluctuations.\n\n\nGeographical Features: The conflict appears to follow certain geographical patterns, possibly aligning with major urban centers, transport routes, or areas of strategic importance.\n\nTo ascertain if the distribution of conflict events is random or clusterd, we will conduct second-order spatial patterns analysis."
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html#second-order-spatial-temporal-patterns-analysis-focused-exploration-of-conflict-hotspots",
    "href": "TakehomeEx/THE01/THE01.html#second-order-spatial-temporal-patterns-analysis-focused-exploration-of-conflict-hotspots",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "6.0 Second Order Spatial-Temporal Patterns Analysis: Focused Exploration of Conflict Hotspots",
    "text": "6.0 Second Order Spatial-Temporal Patterns Analysis: Focused Exploration of Conflict Hotspots\n\n6.1 Region of Interest (ROI) Analysis\nThe data we gathered from MIMU also includes adm1, which represents the states and regions of Myanmar. We can use this data to focus on specific regions of interest (ROIs) and analyze the conflict dynamics in more detail.\n\nadm1 &lt;- st_read(dsn = \"data/adms\", layer = \"mmr_polbnda_adm1_250k_mimu_1\") %&gt;%\n  st_transform(crs = 32647)\n\nReading layer `mmr_polbnda_adm1_250k_mimu_1' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\TakehomeEx\\THE01\\data\\adms' \n  using driver `ESRI Shapefile'\nSimple feature collection with 15 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\nHighlighting Conflict Hotspots\n\nhighlight_regions &lt;- c(\"Sagaing\", \"Magway\", \"Mandalay\", \"Shan\", \"Yangon\")\nadm1$highlight &lt;- ifelse(adm1$ST %in% highlight_regions, adm1$ST, NA)\n\nggplot() +\n  geom_sf(data = adm1, fill = \"white\", color = \"black\", size = 0.1) +\n  geom_sf(data = adm1, aes(fill = highlight), color = \"black\", size = 0.1) +\n  theme_minimal() +\n  labs(title = \"Conflict Hotspots\",\n       fill = \"Region\") +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(hjust = 0.5, face = \"bold\"),\n        axis.text = element_blank(),\n        axis.title = element_blank())\n\n\n\n\n\n\n\n\nIn our earlier analysis, we have identified hotspots in the Northern/Central and Southern regions. We will now focus on these regions to understand the conflict dynamics in more detail.\nSecond Order Point Pattern Analysis Methodology\n\nG-Function: The G-function measures the spatial distribution of distances to the nearest neighbor for each point. It helps identify clustering or regularity at smaller scales.\nL-Function: The L-function measures the number of points within a given distance of any arbitrary point. It’s useful for detecting patterns at multiple scales.\nSpatio-Temporal KDE: We want to know how the conflict intensity in these regions has evolved over time.\n\n\n\n6.2 Central/Northern Region Hotspots\n\nregion_ppp &lt;- function(data, admin_data, region_name) {\n  region &lt;- admin_data %&gt;% \n    filter(ST == region_name)\n  \n  hotspot &lt;- data %&gt;% \n    st_join(region) %&gt;% \n    filter(!is.na(ST)) %&gt;%\n    st_jitter()\n  \n  window_region &lt;- as.owin(st_bbox(region))\n  \n  conflict_region_ppp &lt;- as.ppp(st_coordinates(hotspot), W = window_region)\n  \n  return(ppp_object = conflict_region_ppp)\n}\n\n\n6.2.1 Sagaing\n\nsagaing_ppp &lt;- region_ppp(acled_sf_projected, adm1, \"Sagaing\")\n\nG-Function\n\nsagaing_ppp_km &lt;- rescale(sagaing_ppp, 1000, \"km\")\nG_sagaing &lt;- Gest(sagaing_ppp_km, correction = \"border\")\nplot(G_sagaing, main = \"G-Function for Conflict Events in Sagaing\")\n\n\n\n\n\n\n\n\nMonte Carlo test with G-Function\n\nG_sagaing.csr &lt;- envelope(sagaing_ppp_km,\n                          Gest,\n                          nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(G_sagaing.csr, main = \"Monte Carlo Test: G-Function for Conflict Events in Sagaing\")\n\n\n\n\n\n\n\n\nL-Function\n\nL_sagaing &lt;- Lest(sagaing_ppp_km, correction = \"Ripley\")\nplot(L_sagaing, . -r ~ r, main = \"L-Function for Conflict Events in Sagaing\")\n\n\n\n\n\n\n\n\nMonte Carlo test with L-Function\n\nL_sagaing.csr &lt;- envelope(sagaing_ppp_km,\n                          fun = Lest,\n                          nsim = 99,\n                          rank = 1,\n                          glocal = TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_sagaing.csr, main = \"Monte Carlo Test: L-Function for Conflict Events in Sagaing\")\n\n\n\n\n\n\n\n\nKey Observations:\n\nG-Function: The observed G(r) lies significantly above the theoretical line and outside the simulation envelopes for small distances. This suggests strong clustering of conflict events at short distances.\nL-function: The observed L(r) - r is consistently above zero and outside the simulation envelopes across all distances. This indicates significant clustering at multiple scales.\n\nNull Hypothesis \\(H~0\\): The spatial distribution of conflict events in Sagaing is random. Alternative Hypothesis \\(H~1\\): The spatial distribution of conflict events in Sagaing is not random.\nGiven that both G and L functions show significant departure from the theoretical CSR line and lie outside the simulation envelopes, we reject the null hypothesis. The evidence strongly suggests that conflict events in Sagaing are not randomly distributed but exhibit significant clustering at various scales.\nSagaing Spatio-Temporal KDE Analysis\n\n\nShow Code\n\n\nadm1_t &lt;- st_transform(adm1, 32647)\n\nsagaing_area &lt;- adm1_t |&gt;\n  filter(ST == \"Sagaing\") |&gt;\n  st_union()\nsagaing_owin &lt;- as.owin(sagaing_area)\nsagaing_ppp &lt;- acled_quarter_ppp[sagaing_owin]\nsagaing_ppp &lt;- rescale(sagaing_ppp, 1000, \"km\")\nstkde_sagaing &lt;- spattemp.density(sagaing_ppp)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\nsummary(stkde_sagaing)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 15.6218 (spatial)\n  lambda = 0.0112 (temporal)\n\nNo. of observations\n  14031 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-17.69996, 308.3414] x [2390.345, 3029.739]\n\nTemporal bound\n  [1, 14]\n\nEvaluation\n  128 x 128 x 14 trivariate lattice\n  Density range: [1.129206e-96, 0.0005931396]\n\n\n\nlibrary(animation)\nplot_stkde_animated &lt;- function(stkde_object, region_name) {\n  total_quarters &lt;- 14\n  \n  saveGIF({\n    for(i in 1:total_quarters) {\n      year &lt;- 2021 + (i-1) %/% 4\n      quarter &lt;- (i-1) %% 4 + 1\n      \n      plot(stkde_object, i,\n           override.par=FALSE,\n           fix.range=TRUE,\n           main=paste0(\"KDE of \", region_name, \": \", year, \"-Q\", quarter))\n    }\n  }, movie.name = paste0(region_name, \"_KDE_animation.gif\"), \n     ani.width = 600, ani.height = 600, ani.res = 100, \n     interval = 1, loop = 0)\n}\n\n\n\nSTKDE Observations:\n\nTemporal Evolution: The intensity of conflicts appear to decrease over time, with the highest intensities observed in earlier quarters (2021-2022) and lower intensities in later quarters (2023-2024).\nSpatial Concentration: Regional conflict hotspots are consistently observed in the Southern and Central parts of Sagaing, particularly concentrated around the borders, with some fluctuation in intensity over time.\n\nDuring our EDA process, Sagaing stood out because of it’s position as having the highest number of conflict events and highest fatalities. Later on, we will revisit Sagaing.\n\n\n6.2.2 Magway\n\nmagway_ppp &lt;- region_ppp(acled_sf_projected, adm1, \"Magway\")\n\nG-Function\n\nmagway_ppp_km &lt;- rescale(magway_ppp, 1000, \"km\")\nG_magway &lt;- Gest(magway_ppp_km, correction = \"border\")\nplot(G_magway, main = \"G-Function for Conflict Events in Magway\")\n\n\n\n\n\n\n\n\nMonte Carlo test with G-Function\n\nG_magway.csr &lt;- envelope(magway_ppp_km,\n                         Gest,\n                         nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(G_magway.csr, main = \"Monte Carlo Test: G-Function for Conflict Events in Magway\")\n\n\n\n\n\n\n\n\nL-Function\n\nL_magway &lt;- Lest(magway_ppp_km, correction = \"Ripley\")\nplot(L_magway, . -r ~ r, main = \"L-Function for Conflict Events in Magway\")\n\n\n\n\n\n\n\n\nMonte Carlo test with L-Function\n\nL_magway.csr &lt;- envelope(magway_ppp_km,\n                         fun = Lest,\n                         nsim = 99,\n                         rank = 1,\n                         glocal = TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_magway.csr, main = \"Monte Carlo Test: L-Function for Conflict Events in Magway\")\n\n\n\n\n\n\n\n\nKey Observations:\n\nG-function: The observed G(r) lies above the theoretical line and outside the simulation envelopes for small to medium distances, indicating clustering at these scales.\nL-function: The observed L(r) - r is consistently above zero and outside the simulation envelopes across all distances, suggesting significant clustering at multiple scales.\n\nNull Hypothesis \\(H~0\\): The spatial distribution of conflict events in Magway is random. Alternative Hypothesis \\(H~1\\): The spatial distribution of conflict events in Magway is not random.\nBoth G and L functions show significant departure from CSR, so we reject the null hypothesis. The conflict events in Magway exhibit clear clustering patterns at various scales.\nMagway Spatio-Temporal KDE Analysis\n\n\nShow Code\n\n\nmagway_area &lt;- adm1_t |&gt;\n  filter(ST == \"Magway\") |&gt;\n  st_union()\nmagway_owin &lt;- as.owin(magway_area)\nmagway_ppp &lt;- acled_quarter_ppp[magway_owin]\nmagway_ppp &lt;- rescale(magway_ppp, 1000, \"km\")\nstkde_magway &lt;- spattemp.density(magway_ppp)\nsummary(stkde_magway)\nplot_stkde_animated(stkde_magway, \"Magway\")\n\n\n\nSTKDE Observations:\n\nTemporal Evolution: There is an initial spike in conflict intensity around 2021-Q2 to 2022-Q1, followed by a general decline in intensity, however there seems to be a resurgence of conflicts in 2024-Q2.\nSpatial Distribution: The regional conflict hotspots seems to have shifted from the Central area (2021-Q1) towards the Northern areas.\n\n\n\n6.2.3 Mandalay\n\nmandalay_ppp &lt;- region_ppp(acled_sf_projected, adm1, \"Mandalay\")\n\nG-Function\n\nmandalay_ppp_km &lt;- rescale(mandalay_ppp, 1000, \"km\")\nG_mandalay &lt;- Gest(mandalay_ppp_km, correction = \"border\")\nplot(G_mandalay, main = \"G-Function for Conflict Events in Mandalay\")\n\n\n\n\n\n\n\n\nMonte Carlo test with G-Function\n\nG_mandalay.csr &lt;- envelope(mandalay_ppp_km,\n                           Gest,\n                           nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nL-Function\n\nL_mandalay &lt;- Lest(mandalay_ppp_km, correction = \"Ripley\")\nplot(L_mandalay, . -r ~ r, main = \"L-Function for Conflict Events in Mandalay\")\n\n\n\n\n\n\n\n\nMonte Carlo test with L-Function\n\nL_mandalay.csr &lt;- envelope(mandalay_ppp_km,\n                           fun = Lest,\n                           nsim = 99,\n                           rank = 1,\n                           glocal = TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_mandalay.csr, main = \"Monte Carlo Test: L-Function for Conflict Events in Mandalay\")\n\n\n\n\n\n\n\n\nKey Observations:\n\nG-function: The observed G(r) lies significantly above the theoretical line and outside the simulation envelopes for small to medium distances, indicating strong clustering at these scales.\nL-function: The observed L(r) - r is consistently above zero and outside the simulation envelopes across all distances, suggesting significant clustering at multiple scales.\n\nNull Hypothesis \\(H~0\\): The spatial distribution of conflict events in Mandalay is random. Alternative Hypothesis \\(H~1\\): The spatial distribution of conflict events in Mandalay is not random.\nBoth G and L functions show significant departure from CSR, so we reject the null hypothesis. The conflict events in Mandalay show clear and strong clustering patterns at various scales.\nMandalay Spatio-Temporal KDE Analysis\n\n\nShow Code\n\n\nmandalay_area &lt;- adm1_t |&gt;\n  filter(ST == \"Mandalay\") |&gt;\n  st_union()\nmandalay_owin &lt;- as.owin(mandalay_area)\nmandalay_ppp &lt;- acled_quarter_ppp[mandalay_owin]\nmandalay_ppp &lt;- rescale(mandalay_ppp, 1000, \"km\")\nstkde_mandalay &lt;- spattemp.density(mandalay_ppp)\nsummary(stkde_mandalay)\nplot_stkde_animated(stkde_mandalay, \"Mandalay\")\n\n\n\nSTKDE Observations:\n\nTemporal Evolution: The intensity of conflicts in Mandalay significantly decreases over time.\nSpatial Concentration: Conflict hotspots are primarily concentrated in the Central border along Mandalay.\n\n\n\n6.2.4 Shan\n\nshan_ppp &lt;- region_ppp(acled_sf_projected, adm1, \"Shan\")\n\n\nshan_ppp_km &lt;- rescale(shan_ppp, 1000, \"km\")\nG_shan &lt;- Gest(shan_ppp_km, correction = \"border\")\nplot(G_shan, main = \"G-Function for Conflict Events in Shan\")\n\n\n\n\n\n\n\n\nMonte Carlo test with G-Function\n\nG_shan.csr &lt;- envelope(shan_ppp_km,\n                       Gest,\n                       nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(G_shan.csr, main = \"Monte Carlo Test: G-Function for Conflict Events in Shan\")\n\n\n\n\n\n\n\n\nL-Function\n\nL_shan &lt;- Lest(shan_ppp_km, correction = \"Ripley\")\nplot(L_shan, . -r ~ r, main = \"L-Function for Conflict Events in Shan\")\n\n\n\n\n\n\n\n\nMonte Carlo test with L-Function\n\nL_shan.csr &lt;- envelope(shan_ppp_km,\n                       fun = Lest,\n                       nsim = 99,\n                       rank = 1,\n                       glocal = TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_shan.csr, main = \"Monte Carlo Test: L-Function for Conflict Events in Shan\")\n\n\n\n\n\n\n\n\nKey Observations:\n\nG-function: The observed G(r) lies above the theoretical line and outside the simulation envelopes for small to medium distances, indicating clustering at these scales.\nL-function: The observed L(r) - r is consistently above zero and outside the simulation envelopes across all distances, suggesting significant clustering at multiple scales.\n\nNull Hypothesis \\(H~0\\): The spatial distribution of conflict events in Shan is random. Alternative Hypothesis \\(H~1\\): The spatial distribution of conflict events in Shan is not random.\nBoth G and L functions show significant departure from CSR, so we reject the null hypothesis. The conflict events in Shan exhibit clear clustering patterns at various scales.\nShan Spatio-Temporal KDE Analysis\n\n\nShow Code\n\n\nshan_area &lt;- adm1_t |&gt;\n  filter(ST == \"Shan\") |&gt;\n  st_union()\nshan_owin &lt;- as.owin(shan_area)\nshan_ppp &lt;- acled_quarter_ppp[shan_owin]\nshan_ppp &lt;- rescale(shan_ppp, 1000, \"km\")\nstkde_shan &lt;- spattemp.density(shan_ppp)\nsummary(stkde_shan)\nplot_stkde_animated(stkde_shan, \"Shan\")\n\n\n\nSTKDE Observations:\n\nTemporal Trend: There is an initial spike in conflict events in 2021-Q1, followed by a general decline. However, there is a sharp resurgence in 2023-Q4 and 2024-Q2. It seems like Shan suffers from decently large fluctuations in conflict intensity.\nSpatial Distribution: Conflict hotspots are scattered across Shan, the Northern and Southern areas being persistently affected.\nComplex Spatial Pattern: Shan is a curious case, as the conflict patterns appears more dispersed compared to other regions, possibly due to its larger size and diverse ethnic composition.\n\n\n\n6.2.5 Summary: Central/Northern Regions\nThrough our Second Order Analysis, the four hotspots we identified generally conform to similar trends:\n\nSpatial Clustering: All regions exhibit significant clustering of conflict events at multiple scales, as evidenced by the G and L functions.\nTemporal Evolution: The intensity of conflicts in these regions generally decreases over time, with some fluctuations in the later quarters of 2023 and 2024.\n\nThe spatial distribution of conflict events in Sagaing, Magway, Mandalay, and Shan regions, which form part of Myanmar’s Dry Zone, is not uniform. Instead, conflict events are concentrated in specific areas, particularly along borders and urban centers, reflecting the strategic significance of these regions.\nThe Dry Zone, situated in the central part of Myanmar, is an agriculturally vital area, especially for rice production, despite its relatively arid climate. Control over these regions is crucial for economic and political power, as the ability to control or disrupt food supplies can have widespread consequences. Thus, these regions provide both tactical and strategic advantages, making them hotspots for prolonged conflict.\n\n\n\n6.3 Southern Region Hotspots\nWe have identified the distinctive hotspot in the Southern region as Yangon. We will now focus on this region to understand the conflict dynamics in more detail.\n\nyangon_ppp &lt;- region_ppp(acled_sf_projected, adm1, \"Yangon\")\n\nG-Function\n\nyangon_ppp_km &lt;- rescale(yangon_ppp, 1000, \"km\")\nG_yangon &lt;- Gest(yangon_ppp_km, correction = \"border\")\nplot(G_yangon, main = \"G-Function for Conflict Events in Yangon\")\n\n\n\n\n\n\n\n\nMonte Carlo test with G-Function\n\nG_yangon.csr &lt;- envelope(yangon_ppp_km,\n                         Gest,\n                         nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(G_yangon.csr, main = \"Monte Carlo Test: G-Function for Conflict Events in Yangon\")\n\n\nL-Function\n\nL_yangon &lt;- Lest(yangon_ppp_km, correction = \"Ripley\")\nplot(L_yangon, . -r ~ r, main = \"L-Function for Conflict Events in Yangon\")\n\n\n\n\n\n\n\n\nMonte Carlo test with L-Function\n\nL_yangon.csr &lt;- envelope(yangon_ppp_km,\n                         fun = Lest,\n                         nsim = 99,\n                         rank = 1,\n                         glocal = TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_yangon.csr, main = \"Monte Carlo Test: L-Function for Conflict Events in Yangon\")\n\n\n\n\n\n\n\n\nKey Observations:\n\nG-function: The observed G(r) lies above the theoretical line and outside the simulation envelopes for small distances, indicating clustering at short scales.\nL-function: The observed L(r) - r is above zero and outside the simulation envelopes for most distances, suggesting significant clustering at multiple scales, though the effect is less pronounced than in other regions.\n\nNull Hypothesis \\(H~0\\): The spatial distribution of conflict events in Yangon is random. Alternative Hypothesis \\(H~1\\): The spatial distribution of conflict events in Yangon is not random.\nBoth G and L functions show departure from CSR, so we reject the null hypothesis. However, the clustering in Yangon appears less intense compared to the other analyzed regions.\nYangon Spatio-Temporal KDE Analysis\n\n\nShow Code\n\n\nyangon_area &lt;- adm1_t |&gt;\n  filter(ST == \"Yangon\") |&gt;\n  st_union()\nyangon_owin &lt;- as.owin(yangon_area)\nyangon_ppp &lt;- acled_quarter_ppp[yangon_owin]\nyangon_ppp &lt;- rescale(yangon_ppp, 1000, \"km\")\nstkde_yangon &lt;- spattemp.density(yangon_ppp)\nsummary(stkde_yangon)\nplot_stkde_animated(stkde_yangon, \"Yangon\")\n\n\n\nSummary: Southern Region Hotspot Analysis\n\nTemporal Evolution: The intensity of conflicts in Yangon significantly decreases over time, with the highest intensities observed in the earlier quarters of 2021.\nSpatial Concentration: Conflict hotspots are primarily concentrated in the Central and Western areas of Yangon, likely corresponding to more densely populated urban areas.\nUrban Conflict Dynamics: The pattern of conflict in Yangon differs from other regions, possibly reflecting its status as the largest city and former capital. The conflicts here may be more related to urban unrest and protests rather than armed battles."
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html#openstreetmap-integration-geospatial-visualization-of-conflict-events",
    "href": "TakehomeEx/THE01/THE01.html#openstreetmap-integration-geospatial-visualization-of-conflict-events",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "7.0 OpenStreetMap Integration: Geospatial Visualization of Conflict Events",
    "text": "7.0 OpenStreetMap Integration: Geospatial Visualization of Conflict Events\n\n7.1 First Order Spatio-Temporal KDE Analysis\nUsing OpenStreetMap is a great way to visualize the KDE layers we generated earlier. We will create an animated GIF to show the temporal evolution of conflict intensity in Myanmar.\n\nget_osm_map &lt;- function(bbox) {\n  osm_map &lt;- read_osm(bbox, type = \"osm\", zoom = NULL)\n  return(osm_map)\n}\n\n\nplot_kde_animated &lt;- function(kde_layers, region_name, adm0, basemap) {\n  total_quarters &lt;- length(kde_layers)\n  \n  saveGIF({\n    for(i in 1:total_quarters) {\n      kde_layer &lt;- kde_layers[[i]]\n      quarter &lt;- names(kde_layers)[i]\n      \n      kde_stars &lt;- st_as_stars(kde_layer)\n      st_crs(kde_stars) &lt;- st_crs(adm0)\n      \n      map &lt;- tm_shape(basemap) +\n        tm_rgb() +\n        tm_shape(kde_stars) +\n        tm_raster(alpha = 0.7, palette = \"-viridis\", title = \"Conflict Density\") +\n        tm_shape(adm0) +\n        tm_borders() +\n        tm_layout(title = paste(\"KDE:\", quarter),\n                  legend.outside = TRUE,\n                  legend.outside.position = \"right\")\n      \n      print(map)\n    }\n  }, movie.name = paste0(region_name, \"_OSM_KDE_animation.gif\"), \n     ani.width = 800, ani.height = 600, ani.res = 100, \n     interval = 1, loop = 0)\n}\n\n\nmyanmar_bbox &lt;- st_bbox(adm0)\nbasemap &lt;- get_osm_map(myanmar_bbox)\n# plot_kde_animated(kde_layers, \"Myanmar\", adm0, basemap)\n\n\n\nFor the map, I reversed the plasma palette so the higher density areas were more visually striking."
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html#bonus-fatality-analysis-in-selected-regions",
    "href": "TakehomeEx/THE01/THE01.html#bonus-fatality-analysis-in-selected-regions",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "8.0 Bonus: Fatality Analysis in Selected Regions",
    "text": "8.0 Bonus: Fatality Analysis in Selected Regions\nEarlier, we identified a few regional hotspots. These two particular regions stand out:\n\nSagaing: High number of conflict events and fatalities.\nYangon: Distinct conflict dynamics compared to other regions.\n\nFirst, let’s focus our search area to these two regions, and focus on a few specific event types.\n\nfocused_data &lt;- acled_sf %&gt;%\n  mutate(admin1 = clean_admin_name(admin1)) %&gt;%\n  filter(admin1 %in% c(\"Sagaing\", \"Yangon\"),\n         event_type %in% c(\"Battles\", \"Explosions/Remote violence\", \n                           \"Strategic developments\", \"Violence against civilians\"))\n\nDistribution of Fatalities in Sagaing and Yangon\n\nfatalities_by_type &lt;- focused_data %&gt;%\n  group_by(admin1, event_type) %&gt;%\n  summarise(\n    total_fatalities = sum(fatalities, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\npie_chart &lt;- function(data, region) {\n  ggplot(data %&gt;% filter(admin1 == region), \n         aes(x = \"\", y = total_fatalities, fill = event_type)) +\n    geom_bar(stat = \"identity\", width = 1) +\n    coord_polar(\"y\", start = 0) +\n    labs(title = paste(\"Fatalities by Event Type:\", region),\n         fill = \"Event Type\") +\n    theme_minimal() +\n    theme(axis.text = element_blank(),\n          axis.title = element_blank(),\n          panel.grid = element_blank())\n}\n\nsagaing_pie &lt;- pie_chart(fatalities_by_type, \"Sagaing\")\nyangon_pie &lt;- pie_chart(fatalities_by_type, \"Yangon\")\n\ngrid.arrange(sagaing_pie, yangon_pie, nrow = 2)\n\n\n\n\n\n\n\n\nKey Observations:\n\nSagaing: Battles account for the majority of fatalities, followed by Explosions/Remote violence. Tis suggests a high-intensity conflict with direct armed confrontations.\nYangon: Violence against civilians is the leading cause of fatalities, followed by explosions/remote violence. We’ve hypothesized that there is a different conflict dynamic in Yangon, potentially more focused on civilian targets.\n\nQuarterly Fatalities Over Time\nThe simple time series plot below was chosen to visualize the temporal trends of fatalities in both region in order to identify possible patterns and peaks.\n\nfatalities_over_time &lt;- focused_data %&gt;%\n  group_by(admin1, quarter) %&gt;%\n  summarise(total_fatalities = sum(fatalities, na.rm = TRUE), .groups = \"drop\")\n\nggplot(fatalities_over_time, aes(x = quarter, y = total_fatalities, color = admin1, group = admin1)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Quarterly Fatalities in Sagaing and Yangon\",\n       x = \"Quarter\", y = \"Total Fatalities\", color = \"Region\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nKey Observations:\n\nSagaing shows a dramatic increase in fatalities from 2021-Q2 to 2021-Q4, followed by a general declining trend with fluctuations.\nYangon maintains a relatively lower and more consistent level of fatalities throughout the conflict period.\n\nScatter Plot Analysis: Event Frequency vs Fatalities by Event Type\n\nevent_fatality_correlation &lt;- focused_data %&gt;%\n  group_by(admin1, event_type) %&gt;%\n  summarise(\n    event_count = n(),\n    total_fatalities = sum(fatalities, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\nggplot(event_fatality_correlation, aes(x = event_count, y = total_fatalities, color = admin1, shape = event_type)) +\n  geom_point(size = 3) +\n  geom_text_repel(aes(label = event_type), size = 3) +\n  labs(title = \"Event Frequency vs Fatalities by Event Type\",\n       x = \"Number of Events\", \n       y = \"Total Fatalities\",\n       color = \"Region\",\n       shape = \"Event Type\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nKey Observations:\n\nBattles are both frequent and highly lethal in Sagaing. In Yangon, violence against civilians is more common but results in fewer fatalities per event.\nExplosions/Remote violence in Sagaing are less frequent than battles but still result in high fatalities.\nStrategic developments are more common in Yangon but result in very few fatalities.\n\nHigh-Fatality Events in Sagaing and Yangon\n\nhigh_fatality_events &lt;- focused_data %&gt;%\n  filter(fatalities &gt; quantile(fatalities, 0.95, na.rm = TRUE))\n\nggplot() +\n  geom_sf(data = adm1 %&gt;% filter(ST %in% c(\"Sagaing\", \"Yangon\")), fill = \"lightgrey\") +\n  geom_sf(data = high_fatality_events, aes(color = event_type, size = fatalities)) +\n  facet_wrap(~admin1) +\n  labs(title = \"High-Fatality Events in Sagaing and Yangon\",\n       subtitle = \"Top 5% of events by Fatality Count\",\n       size = \"Fatalities\",\n       color = \"Event Type\") +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nSagaing: There is a widespread distribution of high-fatality events, primarily battles and explosions/remote violence along the Southern and Central regions.\nYangon: High fatality events are more concentrated and diverse in type.\n\nThis is an interesting plot that highlights regional hotspots off intense violence. Sagaing is a large region, with the widespread nature of high-fatality events suggesting a more pervasive conflict. In contrast, Yangon’s is more concentrated indicating specific targeted areas of violence.\nStatistical Testing\nTo statistically compare the distribution of fatalities between Sagaing and Yangon, a Wilcoxon rank sum test was performed.\n\nwilcox_test &lt;- wilcox.test(fatalities ~ admin1, data = focused_data)\nprint(wilcox_test)\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  fatalities by admin1\nW = 17624040, p-value &lt; 2.2e-16\nalternative hypothesis: true location shift is not equal to 0\n\n\nNull Hypothesis \\(H~0\\): There is no difference in the distribution of fatalities between Sagaing and Yangon. Alternative Hypothesis \\(H~1\\): There is a difference in the distribution of fatalities between Sagaing and Yangon.\nResult: The test yield a p-value &lt; 2.2e-16, which is highly significant. We reject the null hypothesis and conclude that the difference in fatality distributions between Sagaing and Yangon is not due to chance.\nConclusion: Te test confirms that the difference in fatality distributions between these two regions is not due to chance. Sagaing and Yangon are experiencing fundamentally different conflict dynamics.\nSummary: Fatality Analysis\n\nRegional Variation: Sagaing and Yangon exhibit different types and intensities of conflict. The importance then falls on understanding the underlying causes and dynamics, and utilizing region-specific approaches in conflict resolution and peacekeeping efforts.\nConflict Evolution: Temporal analysis suggests that while the overall conflict may be showing signs of de-escalation, it remains volatile and unpredictable.\nCivilian Impact: The high proportion of fatalities from violence against civilians in Yangon underscores severe humanitarian implications of the conflict, particularly in urban areas."
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html#conclusion",
    "href": "TakehomeEx/THE01/THE01.html#conclusion",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "9.0 Conclusion",
    "text": "9.0 Conclusion\n\n9.1 Overall Insights\nThe analysis of the Myanmar conflict from January 2021 to June 2024 has revealed several key insights:\n\nSpatial Heterogeneity: The EDA and spatial analyses consistently showed that the conflict in Myanmar is not uniformly distributed. Regions like Sagaing, Magway, Mandalay, Shan, and Yangon emerged as major hotspots, while other areas experienced relatively less intense conflict.\n\n\nBorder Proximity: Conflict hotspots were often concentrated around the borders, suggesting strategic importance and potential cross-border influences.\n\n\nTemporal Evolution: The first-order and second-order analyses revealed a dynamic conflict landscape. We observed an initial escalation phase in 2021, followed by peaks in intensity during 2022-2023, and hints of potential de-escalation in some areas by 2024. However, this trend varied significantly across regions.\nConflict Intensity and Event Types: Our analysis showed that different regions experienced varying types and intensities of conflict events. For instance, Sagaing saw a high number of battles, while Yangon experienced more incidents of violence against civilians.\nRegional Variations: The conflict exhibited distinct characteristics in different regions, likely influenced by factors such as ethnic composition, strategic importance, and historical context.\n\n\n\n9.2 Personal Takeaways\nThis exercise provided an invaluable opportunity to gain both a macroscopic and focused view of the ongoing conflict in Myanmar.\nThe combination of various analytical techniques allowed for a comprehensive understanding of the conflict’s complexity, moving beyond headline news to grasp nuanced realities on the ground.\nThe power of data analysis in conflict studies became evident, as plotting visualizations demonstrate how quantitative methods can complement qualitative understanding to provide a more complete picture.\nI’m particularly proud of the scatter plot analysis, temporal trend visualizations and network analysis, which provided unique insights into the conflict dynamics.\nThe integration of OpenStreetMap (OSM) data added a crucial geographical context to enhance the interpretability of our findings."
  },
  {
    "objectID": "TakehomeEx/THE01/THE01.html#references",
    "href": "TakehomeEx/THE01/THE01.html#references",
    "title": "Take Home Exercise 1: Armed Conflict in Myanmar",
    "section": "References",
    "text": "References\n\nMyanmar’s Coup Shakes Up Its Ethnic Conflicts. (2022, January 12). Crisis Group. https://www.crisisgroup.org/asia/south-east-asia/myanmar/myanmars-coup-shakes-its-ethnic-conflicts\nMyanmar coup: Aung San Suu Kyi detained as military seizes control. (2021, February 1). BBC. https://www.bbc.com/news/world-asia-55882489\nMahtani, S. (2021, September 7). Myanmar shadow government declares war on military junta, escalating crisis. The Washington Post. https://www.washingtonpost.com/world/asia_pacific/myanmar-military-war/2021/09/07/46c14ca2-0f93-11ec-baca-86b144fc8a2d_story.html\nPhotos of Burma - The World Factbook. (n.d.). CIA. https://www.cia.gov/the-world-factbook/countries/burma/\nMaizland, L., & Ferragamo, M. (2022, January 31). Myanmar’s Troubled History: Coups, Military Rule, and Ethnic Conflict. Council on Foreign Relations. https://www.cfr.org/backgrounder/myanmar-history-coup-military-rule-ethnic-conflict-rohingya\nThe Contested Areas of Myanmar: Subnational Conflict, Aid, and Development. (2017, October 16). The Asia Foundation. https://asiafoundation.org/publication/contested-areas-myanmar-subnational-conflict-aid-development/\nIdentity Crisis: Ethnicity and Conflict in Myanmar. (2020, August 28). Crisis Group. https://www.crisisgroup.org/asia/south-east-asia/myanmar/312-identity-crisis-ethnicity-and-conflict-myanmar\nLoong, S., Smith, B., & Connelly, A. (2022, July 5). The Dry Zone - IISS Myanmar Conflict Map. Myanmar Conflict Map. https://myanmar.iiss.org/analysis/dryzone\nClaude AI. (n.d.). Claude AI. https://claude.ai/"
  },
  {
    "objectID": "InClassEx/ICE11/ICE11.html",
    "href": "InClassEx/ICE11/ICE11.html",
    "title": "In Class Exercise 11",
    "section": "",
    "text": "pacman::p_load(tidyverse, sf, tmap, httr, performance)"
  },
  {
    "objectID": "InClassEx/ICE11/ICE11.html#loading-packages",
    "href": "InClassEx/ICE11/ICE11.html#loading-packages",
    "title": "In Class Exercise 11",
    "section": "",
    "text": "pacman::p_load(tidyverse, sf, tmap, httr, performance)"
  },
  {
    "objectID": "InClassEx/ICE11/ICE11.html#importing-data",
    "href": "InClassEx/ICE11/ICE11.html#importing-data",
    "title": "In Class Exercise 11",
    "section": "Importing Data",
    "text": "Importing Data\n\nfolder_path &lt;-  \"data/aspatial\"\nfile_list &lt;-  list.files(path = folder_path,\n                         pattern = \"^realis.*\\\\.csv$\",\n                         full.names = TRUE)\nrealis_data &lt;- file_list %&gt;% \n  map_dfr(read_csv)\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 10000 Columns: 21\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (15): Project Name, Sale Date, Address, Type of Sale, Type of Area, Nett...\ndbl  (2): Area (SQM), Number of Units\nnum  (4): Transacted Price ($), Area (SQFT), Unit Price ($ PSF), Unit Price ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 6643 Columns: 21\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (15): Project Name, Sale Date, Address, Type of Sale, Type of Area, Nett...\ndbl  (1): Number of Units\nnum  (5): Transacted Price ($), Area (SQFT), Unit Price ($ PSF), Area (SQM),...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "InClassEx/ICE11/ICE11.html#data-preprocessing",
    "href": "InClassEx/ICE11/ICE11.html#data-preprocessing",
    "title": "In Class Exercise 11",
    "section": "Data Preprocessing",
    "text": "Data Preprocessing\n\ncondo_resale &lt;- realis_data %&gt;% \n  mutate(`Sale Date` = dmy(`Sale Date`)) %&gt;% \n  filter(`Type of Sale` == \"Resale\" & `Property Type` == \"Condominium\")"
  },
  {
    "objectID": "InClassEx/ICE11/ICE11.html#geocoding",
    "href": "InClassEx/ICE11/ICE11.html#geocoding",
    "title": "In Class Exercise 11",
    "section": "Geocoding",
    "text": "Geocoding\n\npostcode &lt;- unique(condo_resale$`Postal Code`)\n\n\nurl &lt;- \"https://onemap.gov.sg/api/common/elastic/search\"\nfound &lt;- data.frame()\nnot_found &lt;- data.frame()\n\nfor (post in postcode) {\n  query &lt;-  list('searchVal'=post, 'returnGeom' = 'Y',\n                 'getAddrDetails' = 'Y', 'pageNum'='1')\n  res &lt;- GET(url, query=query)\n  if(content(res)$found !=0) {\n    found &lt;- rbind(found, data.frame(content(res))[4:13])\n  } else {not_found = data.frame(post)}\n}"
  },
  {
    "objectID": "InClassEx/ICE11/ICE11.html#tidying-field-names",
    "href": "InClassEx/ICE11/ICE11.html#tidying-field-names",
    "title": "In Class Exercise 11",
    "section": "Tidying Field Names",
    "text": "Tidying Field Names\n\nfound &lt;- found %&gt;% \n  select(c(6:8)) %&gt;% \n  rename(POSTAL = `results.POSTAL`,\n         XCOORD = `results.X`,\n         YCOORD = `results.Y`)"
  },
  {
    "objectID": "InClassEx/ICE11/ICE11.html#converting-to-point-feature-data-frame",
    "href": "InClassEx/ICE11/ICE11.html#converting-to-point-feature-data-frame",
    "title": "In Class Exercise 11",
    "section": "Converting to Point Feature Data Frame",
    "text": "Converting to Point Feature Data Frame\n\nJoining Tables\n\ncondo_resale_geocoded = left_join(\n  condo_resale, found, by = c('Postal Code' = 'POSTAL'))\n\n\n\nConverting to sf object\n\ncondo_resale_sf &lt;- st_as_sf(condo_resale_geocoded,\n                            coords = c(\"XCOORD\", \"YCOORD\"),\n                            crs=3414)"
  },
  {
    "objectID": "InClassEx/ICE11/ICE11.html#cleaning-spatial-data",
    "href": "InClassEx/ICE11/ICE11.html#cleaning-spatial-data",
    "title": "In Class Exercise 11",
    "section": "Cleaning Spatial Data",
    "text": "Cleaning Spatial Data\n\nCheck Overlapping Point Features\n\noverlapping_points &lt;- condo_resale_sf %&gt;% \n  mutate(overlap = lengths(st_equals(., .)) &gt; 1)\n\n\n\nSpatial Jittering\n\ncondo_resale_sf &lt;- condo_resale_sf %&gt;% \n  st_jitter(amount=2)"
  },
  {
    "objectID": "InClassEx/ICE09/ICE09.html",
    "href": "InClassEx/ICE09/ICE09.html",
    "title": "In-Class Exercise 9",
    "section": "",
    "text": "pacman::p_load(spdep, sp, tmap, sf, ClustGeo, cluster, factoextra,\n               NbClust, tidyverse, GGally)\n\nWe will be using spdep for the scatter function. sp for spatial data manipulation. tmap for plotting. sf for spatial data manipulation. ClustGeo for spatial clustering. cluster for clustering. factoextra for clustering. NbClust for clustering. tidyverse for data manipulation. GGally for plotting."
  },
  {
    "objectID": "InClassEx/ICE09/ICE09.html#loading-required-packages",
    "href": "InClassEx/ICE09/ICE09.html#loading-required-packages",
    "title": "In-Class Exercise 9",
    "section": "",
    "text": "pacman::p_load(spdep, sp, tmap, sf, ClustGeo, cluster, factoextra,\n               NbClust, tidyverse, GGally)\n\nWe will be using spdep for the scatter function. sp for spatial data manipulation. tmap for plotting. sf for spatial data manipulation. ClustGeo for spatial clustering. cluster for clustering. factoextra for clustering. NbClust for clustering. tidyverse for data manipulation. GGally for plotting."
  },
  {
    "objectID": "InClassEx/ICE09/ICE09.html#import-data",
    "href": "InClassEx/ICE09/ICE09.html#import-data",
    "title": "In-Class Exercise 9",
    "section": "Import Data",
    "text": "Import Data\n\nshan_sf &lt;- read_rds(\"data/rds/shan_sf.rds\")\nshan_ict &lt;- read_rds(\"data/rds/shan_ict.rds\")\nshan_sf_cluster &lt;- read_rds(\"data/rds/shan_sf_cluster.rds\")\n\n\nwrite_rds(shan_sf_cluster, \"data/rds/shan_sf_cluster.rds\")"
  },
  {
    "objectID": "InClassEx/ICE09/ICE09.html#conventional-hierarchical-clustering",
    "href": "InClassEx/ICE09/ICE09.html#conventional-hierarchical-clustering",
    "title": "In-Class Exercise 9",
    "section": "Conventional Hierarchical Clustering",
    "text": "Conventional Hierarchical Clustering\n\nHierarchical Clustering\n\nproxmat &lt;- dist(shan_ict, method = 'euclidean')\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))\n\n\n\nAppending to Geospatial Data\n\nshan_sf_cluster &lt;- cbind(shan_sf, \n                         as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`) %&gt;%\n  select(-c(3:4, 7:9)) %&gt;%\n  rename(TS = TS.x)\n\n\n\nPlotting Dendrogram\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, k = 6, border = 2:5)\n\n\n\n\n\n\n\n\n\n\nCluster Map\n\nqtm(shan_sf_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "InClassEx/ICE09/ICE09.html#spatially-constrained-clustering-skater",
    "href": "InClassEx/ICE09/ICE09.html#spatially-constrained-clustering-skater",
    "title": "In-Class Exercise 9",
    "section": "Spatially Constrained Clustering: SKATER",
    "text": "Spatially Constrained Clustering: SKATER\n\nComputing Nearest Neighbours\n\nshan.nb &lt;- poly2nb(shan_sf)\nsummary(shan.nb)\n\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\n\n\n\nVisualizing Neighbours\n\nplot(st_geometry(shan_sf), \n     border=grey(.5))\npts &lt;- st_coordinates(st_centroid(shan_sf))\n\nWarning: st_centroid assumes attributes are constant over geometries\n\nplot(shan.nb, \n     pts, \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\n\n\n\n\n\n\nCompute Minimum Spanning Tree (MST)\nFirst, we need to calculate the edge costs for the minimum spanning tree. This can be done by using the nbcosts function.\n\nlcosts &lt;- nbcosts(shan.nb, shan_ict)\n\nNext, we incorporate these weights into a weights object using the nb2listw function.\n\nshan.w &lt;- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n\n\nThen, we call mstree to compute the minimum spanning tree.\n\nshan.mst &lt;- mstree(shan.w)\n\n\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot.mst(shan.mst, \n         pts, \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)"
  },
  {
    "objectID": "InClassEx/ICE09/ICE09.html#computing-spatially-constrained-clusters",
    "href": "InClassEx/ICE09/ICE09.html#computing-spatially-constrained-clusters",
    "title": "In-Class Exercise 9",
    "section": "Computing Spatially Constrained Clusters",
    "text": "Computing Spatially Constrained Clusters\n\nskater.clust6 &lt;- skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\n\n\nSkater Tree\n\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot(skater.clust6, \n     pts, \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter"
  },
  {
    "objectID": "InClassEx/ICE09/ICE09.html#visualizing-clusters-in-choropleth-map",
    "href": "InClassEx/ICE09/ICE09.html#visualizing-clusters-in-choropleth-map",
    "title": "In-Class Exercise 9",
    "section": "Visualizing Clusters in Choropleth Map",
    "text": "Visualizing Clusters in Choropleth Map\n\ngroups_mat &lt;- as.matrix(skater.clust6$groups)\nshan_sf_spatialcluster &lt;- cbind(shan_sf_cluster, as.factor(groups_mat)) %&gt;%\n  rename(`skater_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"skater_CLUSTER\")\n\n\n\n\n\n\n\n\n\nPlotting Cluster Map\n\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.8, 0.6))\n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"skater_CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "InClassEx/ICE09/ICE09.html#spatially-constrained-clustering-clustgeo",
    "href": "InClassEx/ICE09/ICE09.html#spatially-constrained-clustering-clustgeo",
    "title": "In-Class Exercise 9",
    "section": "Spatially Constrained Clustering: ClustGeo",
    "text": "Spatially Constrained Clustering: ClustGeo\n\nComputing Spatial Distance Matrix\n\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)\n\n\n\nCluster Graphs\n\ncr &lt;- choicealpha(proxmat, distmat, \n                  range.alpha = seq(0, 1, 0.1), \n                  K=6, graph = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSaving ClustGeo Output\n\nclustG &lt;- hclustgeo(proxmat, distmat, alpha = 0.2)\ngroups &lt;- as.factor(cutree(clustG, k=6))\nshan_sf_clustGeo &lt;- cbind(shan_sf, \n                          as.matrix(groups)) %&gt;%\n  rename(`clustGeo` = `as.matrix.groups.`)\n\n\n\nVisualizing ClustGeo Map\n\nqtm(shan_sf_clustGeo, \"clustGeo\")\n\n\n\n\n\n\n\n\n\n\nComparing Cluster Maps\n\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.8, 0.6))\n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"skater_CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\nclustGeo.map &lt;- qtm(shan_sf_clustGeo,\n                   \"clustGeo\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\ntmap_arrange(hclust.map, shclust.map, \n             clustGeo.map,\n             asp=NA, ncol=3)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "InClassEx/ICE09/ICE09.html#characterizing-clusters",
    "href": "InClassEx/ICE09/ICE09.html#characterizing-clusters",
    "title": "In-Class Exercise 9",
    "section": "Characterizing Clusters",
    "text": "Characterizing Clusters\n\nggparcoord(data = shan_sf_clustGeo, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ clustGeo) + \n  theme(axis.text.x = element_text(angle = 30))"
  },
  {
    "objectID": "InClassEx/ICE05/ICE05.html",
    "href": "InClassEx/ICE05/ICE05.html",
    "title": "In Class Exercise 5",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)"
  },
  {
    "objectID": "InClassEx/ICE05/ICE05.html#getting-started",
    "href": "InClassEx/ICE05/ICE05.html#getting-started",
    "title": "In Class Exercise 5",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)"
  },
  {
    "objectID": "InClassEx/ICE05/ICE05.html#loading-data",
    "href": "InClassEx/ICE05/ICE05.html#loading-data",
    "title": "In Class Exercise 5",
    "section": "Loading Data",
    "text": "Loading Data\n\nhunan_sf &lt;- st_read(\n  dsn = \"data/geospatial\",\n  layer = \"Hunan\"\n)\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nhunan_sf &lt;- left_join(hunan_sf,hunan2012)%&gt;%\n  select(1:3, 7, 15, 16, 31, 32)\n\n\nwrite_rds(hunan_sf, \"data/rds/hunan_sf.rds\")\n\n\nhunan_sf &lt;- read_rds(\"data/rds/hunan_sf.rds\")\n\n\nhunan_sp &lt;- as_Spatial(hunan_sf)\n\n\nbw_AIC &lt;- bw.gwr(GDPPC ~ 1, data = hunan_sp, approach = \"AIC\", adaptive = TRUE, kernel = \"bisquare\", longlat = T)\n\nAdaptive bandwidth (number of nearest neighbours): 62 AICc value: 1923.156 \nAdaptive bandwidth (number of nearest neighbours): 46 AICc value: 1920.469 \nAdaptive bandwidth (number of nearest neighbours): 36 AICc value: 1917.324 \nAdaptive bandwidth (number of nearest neighbours): 29 AICc value: 1916.661 \nAdaptive bandwidth (number of nearest neighbours): 26 AICc value: 1914.897 \nAdaptive bandwidth (number of nearest neighbours): 22 AICc value: 1914.045 \nAdaptive bandwidth (number of nearest neighbours): 22 AICc value: 1914.045 \n\n\n\nbw_AIC\n\n[1] 22\n\n\n\nbw_CV &lt;- bw.gwr(GDPPC ~ 1, data = hunan_sp, approach = \"CV\", adaptive = TRUE, kernel = \"bisquare\", longlat = T)\n\nAdaptive bandwidth: 62 CV score: 15515442343 \nAdaptive bandwidth: 46 CV score: 14937956887 \nAdaptive bandwidth: 36 CV score: 14408561608 \nAdaptive bandwidth: 29 CV score: 14198527496 \nAdaptive bandwidth: 26 CV score: 13898800611 \nAdaptive bandwidth: 22 CV score: 13662299974 \nAdaptive bandwidth: 22 CV score: 13662299974 \n\n\n\nbw_CV\n\n[1] 22\n\n\n\nbw_AIC &lt;- bw.gwr(GDPPC ~ 1, data = hunan_sp, approach = \"AIC\", adaptive = FALSE, kernel = \"bisquare\", longlat = T)\n\n\nbw_CV &lt;- bw.gwr(GDPPC ~ 1, data = hunan_sp, approach = \"CV\", adaptive = FALSE, kernel = \"bisquare\", longlat = T)"
  },
  {
    "objectID": "InClassEx/ICE05/ICE05.html#geoweighted-summary-statistics",
    "href": "InClassEx/ICE05/ICE05.html#geoweighted-summary-statistics",
    "title": "In Class Exercise 5",
    "section": "Geoweighted Summary Statistics",
    "text": "Geoweighted Summary Statistics\n\ngwstat &lt;- gwss(data = hunan_sp, vars = \"GDPPC\", bw = bw_AIC, kernel = \"bisquare\", adaptive = TRUE, longlat = T)\n\n\ngwstat_df &lt;- as.data.frame(gwstat$SDF)\n\n\nhunan_gstat &lt;- cbind(hunan_sf,gwstat_df)\n\nviz\n\ntm_shape(hunan_gstat) + tm_fill(\"GDPPC_LM\",\n                                n = 5,\n                                style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Dist of geoweighted mean\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.text.size =0.8,\n            legend.height = 1.0 ,\n            legend.width = 1.0,\n            frame = TRUE)"
  },
  {
    "objectID": "InClassEx/ICE03/ICE03.html",
    "href": "InClassEx/ICE03/ICE03.html",
    "title": "In Class Exercise 3",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, tmap)\n\n\ninstall.packages('maptools', repos=\"https://packagemanager.posit.co/cran/2023-10-13\")\n\nWe cannot do p_load for maptools because it is not available in the CRAN repository. We will have to install it manually. We can use #| eval: false to prevent the code chunk from being evaluated. The next time we want to load maptools, we can use library(maptools)."
  },
  {
    "objectID": "InClassEx/ICE03/ICE03.html#getting-started",
    "href": "InClassEx/ICE03/ICE03.html#getting-started",
    "title": "In Class Exercise 3",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, tmap)\n\n\ninstall.packages('maptools', repos=\"https://packagemanager.posit.co/cran/2023-10-13\")\n\nWe cannot do p_load for maptools because it is not available in the CRAN repository. We will have to install it manually. We can use #| eval: false to prevent the code chunk from being evaluated. The next time we want to load maptools, we can use library(maptools)."
  },
  {
    "objectID": "InClassEx/ICE03/ICE03.html#import-myanmar-data",
    "href": "InClassEx/ICE03/ICE03.html#import-myanmar-data",
    "title": "In Class Exercise 3",
    "section": "Import Myanmar Data",
    "text": "Import Myanmar Data\n\nacled_sf &lt;- read_csv(\"data/geospatial/ACLED_Myanmar.csv\") |&gt;\n  st_as_sf(coords = c(\n    \"longitude\", \"latitude\"),\n    crs = 4326) |&gt;\n  st_transform(crs = 32647) |&gt;\n  mutate(event_date = dmy(event_date))\n\n\n# tmap_mode('view')\n# acled_sf |&gt;\n#   filter(year == 2023 | event_type == 'Political Violence') |&gt;\n#   tm_shape() +\n#   tm_dots()\n# tmap_mode('plot')"
  },
  {
    "objectID": "InClassEx/ICE01/ICE01.html",
    "href": "InClassEx/ICE01/ICE01.html",
    "title": "In Class Exercise 1",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "InClassEx/ICE01/ICE01.html#load-relevant-packages",
    "href": "InClassEx/ICE01/ICE01.html#load-relevant-packages",
    "title": "In Class Exercise 1",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "InClassEx/ICE01/ICE01.html#exploring-the-mpsz-2019-dataset",
    "href": "InClassEx/ICE01/ICE01.html#exploring-the-mpsz-2019-dataset",
    "title": "In Class Exercise 1",
    "section": "Exploring the MPSZ-2019 Dataset",
    "text": "Exploring the MPSZ-2019 Dataset\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\InClassEx\\ICE01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\n\nReflection\n\n\n\nThe imported data contains 332 features (representing different subzones in SG) with 6 fields. The geometry type is MULTIPOLYGON, with some areas consisting of multiple polygons (e.g. islands),"
  },
  {
    "objectID": "InClassEx/ICE01/ICE01.html#check-content-of-data-frame",
    "href": "InClassEx/ICE01/ICE01.html#check-content-of-data-frame",
    "title": "In Class Exercise 1",
    "section": "Check Content of Data Frame",
    "text": "Check Content of Data Frame\nFirst, we print the information of the feature class using st_geometry\n\nst_geometry(mpsz)\n\nGeometry set for 332 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((103.8802 1.283859, 103.8802 1.2...\n\n\nMULTIPOLYGON (((103.8376 1.295599, 103.8377 1.2...\n\n\nMULTIPOLYGON (((103.8341 1.292476, 103.8341 1.2...\n\n\nMULTIPOLYGON (((103.7125 1.291625, 103.7126 1.2...\n\n\nMULTIPOLYGON (((103.8472 1.297, 103.8473 1.2969...\n\n\nWe can use glimpse to provide information on the data type of each field\n\nglimpse(mpsz)\n\nRows: 332\nColumns: 7\n$ SUBZONE_N  &lt;chr&gt; \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"JURON…\n$ SUBZONE_C  &lt;chr&gt; \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MPSZ05\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WESTERN …\n$ PLN_AREA_C &lt;chr&gt; \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"WI\", \"SI\", \"SI\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"WEST…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"WR\", \"CR\", \"CR\",…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((103.8802 1...., MULTIPOLYGON (…\n\n\nFinally, use head to show the complete info of a feature object\n\nhead(mpsz, n=5)\n\nSimple feature collection with 5 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6537 ymin: 1.216215 xmax: 103.8811 ymax: 1.29742\nGeodetic CRS:  WGS 84\n                SUBZONE_N SUBZONE_C      PLN_AREA_N PLN_AREA_C       REGION_N\n1             MARINA EAST    MESZ01     MARINA EAST         ME CENTRAL REGION\n2        INSTITUTION HILL    RVSZ05    RIVER VALLEY         RV CENTRAL REGION\n3          ROBERTSON QUAY    SRSZ01 SINGAPORE RIVER         SR CENTRAL REGION\n4 JURONG ISLAND AND BUKOM    WISZ01 WESTERN ISLANDS         WI    WEST REGION\n5            FORT CANNING    MUSZ02          MUSEUM         MU CENTRAL REGION\n  REGION_C                       geometry\n1       CR MULTIPOLYGON (((103.8802 1....\n2       CR MULTIPOLYGON (((103.8376 1....\n3       CR MULTIPOLYGON (((103.8341 1....\n4       WR MULTIPOLYGON (((103.7125 1....\n5       CR MULTIPOLYGON (((103.8472 1....\n\n\nPython users will be familiar with tail to show the last few rows of a dataframe\n\ntail(mpsz, n=5)\n\nSimple feature collection with 5 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.21024 xmax: 103.8529 ymax: 1.371546\nGeodetic CRS:  WGS 84\n              SUBZONE_N SUBZONE_C PLN_AREA_N PLN_AREA_C          REGION_N\n328       UPPER THOMSON    BSSZ01     BISHAN         BS    CENTRAL REGION\n329          SHANGRI-LA    AMSZ05 ANG MO KIO         AM NORTH-EAST REGION\n330          TOWNSVILLE    AMSZ04 ANG MO KIO         AM NORTH-EAST REGION\n331           MARYMOUNT    BSSZ02     BISHAN         BS    CENTRAL REGION\n332 TUAS VIEW EXTENSION    TSSZ06       TUAS         TS       WEST REGION\n    REGION_C                       geometry\n328       CR MULTIPOLYGON (((103.8426 1....\n329      NER MULTIPOLYGON (((103.8354 1....\n330      NER MULTIPOLYGON (((103.8481 1....\n331       CR MULTIPOLYGON (((103.8465 1....\n332       WR MULTIPOLYGON (((103.626 1.3..."
  },
  {
    "objectID": "InClassEx/ICE01/ICE01.html#plotting-geospatial-data",
    "href": "InClassEx/ICE01/ICE01.html#plotting-geospatial-data",
    "title": "In Class Exercise 1",
    "section": "Plotting Geospatial Data",
    "text": "Plotting Geospatial Data\n\nplot(mpsz)\n\n\n\n\n\n\n\n\n\nplot(mpsz[\"PLN_AREA_C\"])\n\n\n\n\n\n\n\n\n\nplot(st_geometry(mpsz))"
  },
  {
    "objectID": "InClassEx/ICE01/ICE01.html#coordinate-systems",
    "href": "InClassEx/ICE01/ICE01.html#coordinate-systems",
    "title": "In Class Exercise 1",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\n\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "InClassEx/ICE01/ICE01.html#geoprocessing-with-sf-library",
    "href": "InClassEx/ICE01/ICE01.html#geoprocessing-with-sf-library",
    "title": "In Class Exercise 1",
    "section": "Geoprocessing with sf library",
    "text": "Geoprocessing with sf library\n\nBuffering\n\nst_crs(mpsz)  # Check current CRS\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\nmpsz_projected &lt;- st_transform(mpsz, 3414)  # Transform to Singapore SVY21 (EPSG:3414)\nmpsz_buffer &lt;- st_buffer(mpsz_projected, dist = 5, nQuadSegs = 30)"
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html",
    "href": "HandsOnEx/Ex10/Ex10.html",
    "title": "Hands-on Exercise 10",
    "section": "",
    "text": "Hands-on Note\n\n\n\nThis exercise combines Hands-on Exercise 10 and Hands-on Exercise 11."
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#overview",
    "href": "HandsOnEx/Ex10/Ex10.html#overview",
    "title": "Hands-on Exercise 10",
    "section": "Overview",
    "text": "Overview\nGeographically weighted regression (GWR) is a spatial statistical technique that takes into account spatial heterogeneity in the relationships between variables. In this exercise, we will attempt to learn how to build hedonic pricing models using GWR methods. The dependent variable is the resale prices of condominiums in 2015. The independent variables are either structural and locational."
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#datasets",
    "href": "HandsOnEx/Ex10/Ex10.html#datasets",
    "title": "Hands-on Exercise 10",
    "section": "Datasets",
    "text": "Datasets\nThe datasets we will use for this exercise consist of:\n\nURA Master Plan subzone boundary (MP14_SUBZONE_WEB_PL)\ncondo_resale_2015 (condo_resale_2015.csv)"
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#loading-packages",
    "href": "HandsOnEx/Ex10/Ex10.html#loading-packages",
    "title": "Hands-on Exercise 10",
    "section": "Loading Packages",
    "text": "Loading Packages\n\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\nThe GWmodel package provides a collection of localized spatial statistical methods, namely: Geographically Weighted Regression (GWR), Geographically Weighted Principal Component Analysis (GWPCA), Geographically Weighted Clustering (GWC), and Geographically Weighted Generalized Linear Models (GWGLM). Some of which are provided in basic and robust versions."
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#geospatial-data-wrangling",
    "href": "HandsOnEx/Ex10/Ex10.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 10",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling\n\nImporting Data\nWe import the MP_SUBZONE_WEB_PL shapefile using st_read() from the sf package.\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\yeoba\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nThe geometry type is multipolygon. The mpsz simple feature object does not contain the necessary EPSG information. Hence, we will assign the EPSG code to the object.\n\n\nUpading CRS\n\nmpsz_svy21 &lt;- st_transform(mpsz, 3414)\n\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNotice that the EPSG is indicated as 3414, which means we have verified that the coordinate reference system is correct.\nNext, we use st_bbox() to obtain the bounding box of the mpsz_svy21 object.\n\nst_bbox(mpsz_svy21)\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#aspatial-data-wrangling",
    "href": "HandsOnEx/Ex10/Ex10.html#aspatial-data-wrangling",
    "title": "Hands-on Exercise 10",
    "section": "Aspatial Data Wrangling",
    "text": "Aspatial Data Wrangling\n\nImporting Data\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\nRows: 1436 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (23): LATITUDE, LONGITUDE, POSTCODE, SELLING_PRICE, AREA_SQM, AGE, PROX_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             &lt;dbl&gt; 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            &lt;dbl&gt; 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\nLet’s examine the dataset to understand the variables.\n\nhead(condo_resale$LONGITUDE)\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE)\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nWe also display the summary statistics of condo_resale to understand the distribution of the variables.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\n\n\nConverting Data Frame into sf object\nThe condo_resale data frame is aspatial. We need to convert it into an sf object for spatial analysis. We can use the st_as_sf() function to convert the data frame into an sf object. st_transform is also called to convert the coordinates from WGS84 to SVY21.\n\ncondo_resale.sf &lt;- st_as_sf(condo_resale, coords = c(\"LONGITUDE\", \"LATITUDE\"), crs = 4326) %&gt;%\n  st_transform(crs=3414)\n\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLING_PRICE AREA_SQM   AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n     &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;\n1   118635       3000000      309    30     7.94          0.166            2.52 \n2   288420       3880000      290    32     6.61          0.280            1.93 \n3   267833       3325000      248    33     6.90          0.429            0.502\n4   258380       4250000      127     7     4.04          0.395            1.99 \n5   467169       1400000      145    28    11.8           0.119            1.12 \n6   466472       1320000      139    22    10.3           0.125            0.789\n# ℹ 15 more variables: PROX_URA_GROWTH_AREA &lt;dbl&gt;, PROX_HAWKER_MARKET &lt;dbl&gt;,\n#   PROX_KINDERGARTEN &lt;dbl&gt;, PROX_MRT &lt;dbl&gt;, PROX_PARK &lt;dbl&gt;,\n#   PROX_PRIMARY_SCH &lt;dbl&gt;, PROX_TOP_PRIMARY_SCH &lt;dbl&gt;,\n#   PROX_SHOPPING_MALL &lt;dbl&gt;, PROX_SUPERMARKET &lt;dbl&gt;, PROX_BUS_STOP &lt;dbl&gt;,\n#   NO_Of_UNITS &lt;dbl&gt;, FAMILY_FRIENDLY &lt;dbl&gt;, FREEHOLD &lt;dbl&gt;,\n#   LEASEHOLD_99YR &lt;dbl&gt;, geometry &lt;POINT [m]&gt;\n\n\nInterestingly, the output is in point feature data frame."
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#exploratory-data-analysis",
    "href": "HandsOnEx/Ex10/Ex10.html#exploratory-data-analysis",
    "title": "Hands-on Exercise 10",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nThis section of the exercise deals with using the ggplot2 package to perform EDA.\n\nStatistical Graphics\n\nggplot(data = condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"skyblue\", alpha=0.7)\n\n\n\n\n\n\n\n\nFrom the figure, we realize that there is a right skewed distribution, which indicates more condominium units were transacted at relative lower prices.\nThe skewed distribution can be normalized using log transformation.\n\ncondo_resale.sf &lt;- condo_resale.sf %&gt;%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nNow, we plot the histogram of the log-transformed selling price.\n\nggplot(data = condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"skyblue\", alpha=0.7)\n\n\n\n\n\n\n\n\nNotice after the log transformation, the plot is more normally distributed and less skewed.\n\n\nMultiple Histogram Plots\nWe can also plot multiple histograms for the variables in the dataset. This is known as a trellis plot, and we can use the ggarange() function from the ggpubr package.\n\nAREA_SQM &lt;- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE &lt;- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)\n\n\n\n\n\n\n\n\n\n\nVisualizing Statistical Ppoint Map\nWe also want to reveal the geospatial distribution of condominium resale prices. We can use the tmap package to create a point map.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nFirst, we check if the sf object is valid.\n\nst_is_valid(mpsz_svy21, reason = TRUE)\n\n\ninvalid_polygons &lt;- which(!st_is_valid(mpsz_svy21))\nprint(paste(\"Number of invalid polygons:\", length(invalid_polygons)))\n\n[1] \"Number of invalid polygons: 9\"\n\n\nInteresting! There are a few polygons that are invalid. We can use the st_make_valid() function to fix the invalid polygons.\n\nmpsz_svy21 &lt;- st_make_valid(mpsz_svy21)\nany(!st_is_valid(mpsz_svy21))\n\n[1] FALSE\n\n\nNow, we can plot the visualization. We use tm_dots() instead of tm_bubbles() because we are trying to plot a point symbol map.\n\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))"
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#hedonic-price-modelling",
    "href": "HandsOnEx/Ex10/Ex10.html#hedonic-price-modelling",
    "title": "Hands-on Exercise 10",
    "section": "Hedonic Price Modelling",
    "text": "Hedonic Price Modelling\n\nSimple Linear Regression Method\nFirst, we build a simple linear regression using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable.\n\ncondo.slr &lt;- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nWhat the code above is doing is fitting a linear model to the data. The lm() function is used to fit linear models. The formula argument specifies the model to be fitted.\nWe can return a summary table of the results using the summary() function.\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: &lt; 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\ny = -258121.1 + 14719x1\nThe R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the \\(B_0\\) and \\(B_1\\) are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\nTo visualize the best fit curve on a scatterplot, we can incorporate lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm, formula = y ~ x)\n\n\n\n\n\n\n\n\nFrom the statistical plot above, it reveals a few outliers with relatively high selling prices. Though, most of the points are largely concentrated around the best fit line.\n\n\nMultiple Linear Regression\nBefore building a multiple regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. If these highly correlated independent variables are used in building a regression model by mistake, the quality of the model will be compromised. This phenomenon is known as multicollinearity in statistics.\nTo visualize the correlation matrix, we can use the corrplot package.\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\n\n\n\nFrom the matrix, we observe that Freehold is highly correlated to LEASE_99YEAR. Thus, it is advised to only include either one of them in the subsequent model building. We exclude LEASE_99YEAR for the model building.\n\n\nBuilding Hedonic Price Model using Multiple Linear Regression\nUsing the lm() function, we can build a multiple linear regression model.\n\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nPublication Quality Table: olsrr\nFrom the report above, not all the independent variables are statistically significant. We can revise the model by removing these insignificant variables.\nThis method uses the ols_regress() function from the olsrr package to generate a publication-quality table. This table will contain the coefficients, standard errors, t-values, p-values, and confidence intervals of the model.\n\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.591 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\nPublication Quality Table: gtsummary\nAdditionally, the gtsummary package provides a flexible way to create publication-ready tables. We can use the tbl_regression() function to generate a table.\n\ngtsummary::tbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\n(Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n\n\nAREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n\n\nAGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n\n\nPROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n\n\nPROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n\n\nPROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n\n\nPROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n\n\nPROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n\n\nPROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n\n\nPROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n\n\nPROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n\n\nPROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n\n\nNO_Of_UNITS\n-245\n-418, -73\n0.005\n\n\nFAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n\n\nFREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = &lt;0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nChecking for Multicolinearity\nIn this section, we use the olsrr package to build better multiple linear regression models.\nThe code chunk below uses the ols_vif_tol() function to check for multicollinearity in the model.\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\nSince the VIF of the independent variables is less than 10, this indicates that there is no multicollinearity in the model.\nTesting for Non-Linearity\nIn multiple linear regression, we have to test the assumption that linearity and addivitity of the relationship between dependent and independent variables.\nWe can use the ols_plot_resid_fit function to perform the linearity assumption test.\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\n\n\n\n\nFrom the figure above, most data points are scattered around the 0 line, so we can safely conclude that the relationship between the dependent and independent variables is linear.\nTest for Normality Assumption\nWe can also call upon the ols_plot_resid_hist() function to test the normality assumption.\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\n\n\n\n\nFrom the residual histogram above, the residuals are normally distributed. This indicates that the normality assumption is satisfied.\nWe can also conduct formal statistical tests using ols_test_normality().\n\nols_test_normality(condo.mlr1)\n\nWarning in ks.test.default(y, \"pnorm\", mean(y), sd(y)): ties should not be\npresent for the one-sample Kolmogorov-Smirnov test\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\nTesting for Spatial Autocorrelation\nThe hedonic model we are trying to build uses geographically referenced attributes, hence it is important for us to visualize the residual of the model to check for spatial autocorrelation.\nWe need to convert condo_resale.sf from an sf data frame into a SpatialPointsDataFrame\n\nmlr.output &lt;- as.data.frame(condo.mlr1$residuals)\n\nNext, we join the newly created data frame with condo_resale.sf\n\ncondo_resale.res.sf &lt;- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %&gt;%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\nThe next step is to convert the condo_resale.res.sf from a simple feature object into a SpatialPointsDataFrame object since spdep can only process sp conformed spatial data objects.\n\ncondo_resale.sp &lt;- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nWe can use tmap to display the spatial distribution of the residuals.\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nVariable(s) \"MLR_RES\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\nThe figure above reveals that there is indeed spatial autocorrelation in the residuals. We can use the spdep package to test for spatial autocorrelation.\nWe can perform a Moran’s I test.\nFirst, we compute the distance-based weight matrix by using dnearneigh() function.\n\nnb &lt;- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\n\nWarning in dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE):\nneighbour object has 10 sub-graphs\n\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, we compute the spatial weight matrix using the nb2listw() function.\n\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nFinally, we can perform the lm.morantest() function to test for residual spatial autocorrelation.\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#building-fixed-bandwidth-gwr-model",
    "href": "HandsOnEx/Ex10/Ex10.html#building-fixed-bandwidth-gwr-model",
    "title": "Hands-on Exercise 10",
    "section": "Building Fixed Bandwidth GWR Model",
    "text": "Building Fixed Bandwidth GWR Model\nWe will use bw.gwr() from GWModel to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE to indicate that we are interested to compute the fixed bandwidth.\nThere are two possible approaches to determine the stopping rule. They are: CV cross-validation approach and AIC corrected (AICc) approach. We define the stopping rule using approach agreement.\n\nComputing Fixed Bandwidth\n\nbw.fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\nThe result shows that the recommended bandwidth is 971.3405 metres.\nQuestion: Why is the bandwidth given in metres? Answer: The bandwidth is given in metres because the data is projected in SVY21.\n\n\nGWModel Method: Fixed Bandwidth\n\ngwr.fixed &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-28 23:00:50.368837 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2024-10-28 23:00:52.179856"
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#building-adaptive-bandwidth-gwr-model",
    "href": "HandsOnEx/Ex10/Ex10.html#building-adaptive-bandwidth-gwr-model",
    "title": "Hands-on Exercise 10",
    "section": "Building Adaptive Bandwidth GWR Model",
    "text": "Building Adaptive Bandwidth GWR Model\n\nComputing Adaptive Bandwidth\nSimilar to earlier, we first use bw.gwr() to determine the optimal adaptive bandwidth to use in the model. Notice that the argument adaptive is set to TRUE to indicate that we are interested to compute the adaptive bandwidth.\n\nbw.adaptive &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\n\n\nConstructing Adaptive Bandwidth GWR Model\n\ngwr.adaptive &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-28 23:01:05.259171 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2024-10-28 23:01:07.194709"
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#visualizing-gwr-output",
    "href": "HandsOnEx/Ex10/Ex10.html#visualizing-gwr-output",
    "title": "Hands-on Exercise 10",
    "section": "Visualizing GWR Output",
    "text": "Visualizing GWR Output\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: This diagnostic statistic measures the stability of the regression coefficients. A condition number greater than 30 indicates multicollinearity and the model may be unreliable.\nLocal R2: This field contains the local R2 values for each feature. Low values indicate that the model does not fit the data well. We map R2 values to show the spatial distribution of model fit.\nPredicted: This field contains the predicted y values for each feature. We map predicted values to show the spatial distribution of the model.\nResiduals: To obtain the residuals, the predicted y values are subtracted from the observed y values. We map residuals to show the spatial distribution of model error.\nCoefficient Standard Error: This field contains the standard errors of the coefficients. We map the standard errors to show the spatial distribution of the uncertainty in the coefficients.\n\nThese fields are stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list."
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#converting-sdf-into-sf-data.frame",
    "href": "HandsOnEx/Ex10/Ex10.html#converting-sdf-into-sf-data.frame",
    "title": "Hands-on Exercise 10",
    "section": "Converting SDF into sf data.frame",
    "text": "Converting SDF into sf data.frame\n\ncondo_resale.sf.adaptive &lt;- st_as_sf(gwr.adaptive$SDF) %&gt;%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 &lt;- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21\n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output &lt;- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive &lt;- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\nWe will use glimpse to examine the structure of the data frame.\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       &lt;dbl&gt; 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 &lt;dbl&gt; -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               &lt;dbl&gt; 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              &lt;dbl&gt; 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   &lt;dbl&gt; -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              &lt;dbl&gt; -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        &lt;dbl&gt; 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      &lt;dbl&gt; -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  &lt;dbl&gt; -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              &lt;dbl&gt; -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             &lt;dbl&gt; -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      &lt;dbl&gt; 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    &lt;dbl&gt; 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         &lt;dbl&gt; 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           &lt;dbl&gt; 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       &lt;dbl&gt; -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              &lt;dbl&gt; 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    &lt;dbl&gt; 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                &lt;dbl&gt; 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           &lt;dbl&gt; 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            &lt;dbl&gt; 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             &lt;dbl&gt; 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  &lt;dbl&gt; 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             &lt;dbl&gt; 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       &lt;dbl&gt; 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     &lt;dbl&gt; 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE &lt;dbl&gt; 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             &lt;dbl&gt; 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            &lt;dbl&gt; 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     &lt;dbl&gt; 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   &lt;dbl&gt; 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        &lt;dbl&gt; 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          &lt;dbl&gt; 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      &lt;dbl&gt; 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             &lt;dbl&gt; 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            &lt;dbl&gt; 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             &lt;dbl&gt; 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  &lt;dbl&gt; -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             &lt;dbl&gt; -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       &lt;dbl&gt; 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     &lt;dbl&gt; -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV &lt;dbl&gt; -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             &lt;dbl&gt; -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            &lt;dbl&gt; -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     &lt;dbl&gt; 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   &lt;dbl&gt; 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        &lt;dbl&gt; 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          &lt;dbl&gt; 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      &lt;dbl&gt; -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             &lt;dbl&gt; 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                &lt;dbl&gt; 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               &lt;dbl&gt; 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               &lt;dbl&gt; 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nsummary(gwr.adaptive$SDF$yhat)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901"
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#visualizing-local-r2",
    "href": "HandsOnEx/Ex10/Ex10.html#visualizing-local-r2",
    "title": "Hands-on Exercise 10",
    "section": "Visualizing Local R2",
    "text": "Visualizing Local R2\n\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))"
  },
  {
    "objectID": "HandsOnEx/Ex10/Ex10.html#visualizing-coefficient-estimates",
    "href": "HandsOnEx/Ex10/Ex10.html#visualizing-coefficient-estimates",
    "title": "Hands-on Exercise 10",
    "section": "Visualizing Coefficient Estimates",
    "text": "Visualizing Coefficient Estimates\n\nAREA_SQM_SE &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\n\n\nVisualizing By URA Planning Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html",
    "href": "HandsOnEx/Ex06/Ex06.html",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "In this exercise, we explore ways to compute Global Measures of Spatial Autocorrelation (GMSA):\n\nCompute GMSA statistics using appropraite functions in the spdep functions\n\nPlotting Moran scatterplot and Moran’s I correlogram\nCompute Moran’s I and Geary’s C\n\nProvide statistically correct interpretations of GSA statistics\n\n\n\n\npacman::p_load(sf, spdep, tmap, tidyverse)\n\n\n\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\n\n\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\",\n            main.title.size = 0.85,\n            legend.title.size = 0.75,\n            legend.text.size = 0.5,)\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\",\n            main.title.size = 0.85,\n            legend.title.size = 0.75,\n            legend.text.size = 0.5,)\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChloropleth Map Observations\n\n\n\n\n\nIn the two maps above, we visualize the GDPPC in Hunan province using two different classification methods: equal interval and quantile. In the left map, we use equal interval classification to divide the data into 5 classes. In the right map, we use quantile classification to divide the data into 5 classes.\nNotice that the two maps show different patterns of regional development. The equal interval classification map shows that the highest GDPPC values are concentrated in the central and eastern parts of the province, while the quantile classification map shows that the highest GDPPC values are concentrated in the central and southern parts of the province.\n\n\n\n\n\n\n\n\n\nBefore computing GSA, we need to construct a spatial weights of the study area. As we learnt in last week’s exercise, we can use the poly2nb function to create a spatial weights matrix based on polygon contiguity.\nWe can use the Queen contiguity criterion to define neighbors. This criterion considers two polygons as neighbors if they share a common boundary or a vertex.\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\n\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\n\n\n\nSpatial Weights Matrix Observations\n\n\n\nThe distribution of connections gives us an idea of Hunan’s spatial structure. The variation in the number of links suggests a diverse spatial pattern, with some isolated areas and some highly connected central regions.\nWhen creating our row-standardized weights matrix, this step is crucial for spatial analysis. Style “W” assigns equal weights to neighbors, summing to 1 for each region. Setting zero.policy = TRUE handles regions with no neighbors, preventing errors in subsequent analyses.\n\n\n\n\n\n\nMoran’s I statistics can be performed using the moran.test function in the spdep package. This function computes the Moran’s I statistic and its associated p-value.\n\n\n\n\n\n\nMoran’s I Interpretation\n\n\n\nDeveloped by Patrick Alfred Pierce Moran, Moran’s I is a measure of spatial autocorrelation that ranges from -1 to 1. A value close to 1 indicates positive spatial autocorrelation, meaning similar values are clustered together. A value close to -1 indicates negative spatial autocorrelation, meaning dissimilar values are clustered together. A value close to 0 indicates no spatial autocorrelation.\nWhy is it useful? Moran’s I helps us understand the spatial distribution of a variable and identify spatial patterns that may be hidden in the data.\n\n\n\n\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nQuestion: What statistical conclusion can you draw from the output above?\nAnswer:\n\nThe Moran I statistic is approximately 0.3007, indicating a positive spatial autocorrelation in the GDPPC across Hunan\nThe p-value is much less than the usual significance levels of 0.05 or 0.01, which might suggest that the spatial autocorrelation is statistically significant.\nHypothesis Test:\n\nNull Hypothesis (\\(H_0\\)): There is no spatial autocorrelation (spatial randomness)\nAlternative Hypothesis (\\(H_1\\)): There is positive spatial autocorrelation (greater than spatial randomness)\n\nConclusion: Given the very small p-value we reject the null hypothesis and conclude that there is positive spatial autocorrelation in the GDPPC across Hunan.\n\n\n\n\nWe can perform a permutation test for Moran’s I statistic using the moran.mc function. This function generates a Monte Carlo simulation to estimate the p-value of the Moran’s I statistic.\n\nset.seed(42)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nQuestion: What statistical conclusion can you draw from the output above?\nAnswer:\n\nThe observed Moran’s I statistic is 0.3007, which is within the range of simulated values.\nThe p-value is 0.001, which is less than common significance values of 0.01 or 0.05\nConclusion: Given that we’ve run 1000 Monte Carlo Simulations and the p-value still remains very low, we can conclude that the spatial autocorrelation in GDPPC across Hunan is statistically significant.\n\n\n\n\nThe Monte Carlo simulation can be visualized by plotting the distribution of simulated Moran’s I values and highlighting the observed Moran’s I value.\nWe can use hist() and abline() functions for data visualization.\n\nmean(bperm$res[1:999])\n\n[1] -0.007182342\n\nvar(bperm$res[1:999])\n\n[1] 0.004295062\n\n\n\nsummary(bperm$res[1:999])\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.200131 -0.052501 -0.013190 -0.007182  0.034529  0.228826 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\n\nQuestion: What statistical observation can you draw from the output above?\nAnswer:\n\nDistribution: The histogram shows the distribution of simulated Moran’s I values under the null hypothesis of spatial randomness. The distribution appears to be approximately normal, slightly left-skewed.\nCentral Tendency: The mean and median are close to zero but slightly negative, which is within expectations for spatial randomness.\nVariance: The range and variance indicate moderate variability in the simulated values.\nComparison to Observed Moran’s I: The red vertical line at 0 represents the expected value under complete spatial randomness. Around 88.79% of the simulated values fall within the range of -0.1 to 0.1, with very few extreme values.\n\n\nsimulated_values &lt;- bperm$res[1:999]\ncount_in_range &lt;- sum(simulated_values &gt;= -0.1 & simulated_values &lt;= 0.1)\npercentage_in_range &lt;- (count_in_range / length(simulated_values)) * 100\nprint(paste0(\"Percentage of values between -0.1 and 0.1: \", \n             round(percentage_in_range, 2), \"%\"))\n\n[1] \"Percentage of values between -0.1 and 0.1: 88.79%\"\n\n\n\nConclusion: TThe simulated distribution shows most values clustered between -0.1 and 0.1. Any observed Moran’s I value substantially outside this range would be considered statistically significant, indicating positive spatial autocorrelation in the GDPPC across Hunan.\n\n\n\n\n\npacman::p_load(ggplot2)\n\ndf &lt;- data.frame(moran_i = bperm$res[1:999])\n\nggplot(df, aes(x = moran_i)) +\n  geom_histogram(bins = 20, fill = \"lightgrey\", color = \"black\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"solid\", linewidth = 1) +\n  labs(title = \"Histogram of Simulated Moran's I\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeary’s C Interpretation\n\n\n\nGeary’s C, developed by Robert J. Geary, is another measure of spatial autocorrelation that ranges from 0 to 2. A value close to 0 indicates positive spatial autocorrelation, while a value close to 2 indicates negative spatial autocorrelation. A value of 1 indicates spatial randomness.\nMoran and Geary statistics are similar but have different interpretations. Geary’s C is less sensitive to extreme values and is often used as an alternative to Moran’s I.\n\n\n\n\nThe spdep package provides the geary.test function to compute Geary’s C statistic and its associated p-value.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\nQuestion: What statistical conclusion can you draw from the output above?\nAnswer:\n\nTest Statistic: The Geary C statistic is approximately 0.6907, indicating positive spatial autocorrelation in the GDPPC across Hunan.\n\nStrength of Autocorrelation: The value of 0.6907 is closer to 1 than 0, which could suggest a moderately positive spatial autocorrelation.\n\np-value: The p-value is 0.0001526 which is significantly smaller than the common significance values of 0.05 or 0.01\nHypothesis Test:\n\nNull Hypothesis (\\(H_0\\)): There is no spatial autocorrelation (spatial randomness)\nAlternative Hypothesis (\\(H_1\\)): The expectation is greater than the statistic, indicating positive spatial autocorrelation\n\nConclusion: Given the very small p-value, we reject the null hypothesis of spatial randomness. We conclude that there is significant positive spatial autocorrelation in the GDPPC across Hunan. This means regions with similar GDPPC values tend to be located near each other more often than would be expected by chance\n\n\n\n\nNow that we have computed both Moran’s I and Geary’s C statistics, let’s compare the results.\nThe results from Geary C’s test is consistent with Moran’s I test, indicating positive spatial autocorrelation in the GDPPC across Hunan.\nIt is interesting to note that unlike Moran’s I, a lower Geary’s C value indicates stronger positive autocorrelation. The value of 0.6907223 (less than 1) confirms positive autocorrelation.\n\n\n\nLikewise, we can run a Monte Carlo simulation to estimate the p-value of Geary’s C statistic using the geary.mc function.\n\nset.seed(42)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 2, p-value = 0.002\nalternative hypothesis: greater\n\n\nQuestion: What statistical conclusion can you draw from the output above?\nAnswer:\n\nThe observed Geary’s C statistic is 0.6907, which falls within the range of simulated values.\nThe p-value is 0.002, which is less than common significance values of 0.01 or 0.05\nConclusion: Given that we’ve run 1000 Monte Carlo Simulations and the p-value still remains very low, we can conclude that the spatial autocorrelation in GDPPC across Hunan is statistically significant.\n\n\n\n\n\nmean(bperm$res[1:999])\n\n[1] 0.9953715\n\nvar(bperm$res[1:999])\n\n[1] 0.00723939\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.6827  0.9404  0.9960  0.9954  1.0535  1.2888 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")\n\n\n\n\n\n\n\n\nQuestion: What statistical observation can you draw from the output above?\nAnswer:\n\nDistribution: The histogram shows the distribution of simulated Geary’s C values under the null hypothesis of spatial randomness. The distribution appears to be approximately normal and roughly symmetric around 1.\nCentral Tendency: The mean and median are close to 1, which is the expected value under spatial randomness.\nVariance: The range and variance indicate moderate variability in the simulated values.\nComparison to Observed Geary’s C: The observed Geary’s C is much lower than the mean of the simulated values. It falls at the extreme left tail of the distribution, indicating strong positive spatial autocorrelation.\nConclusion: The Monte Carlo simulation strongly supports the conclusion of significant positive spatial autocorrelation in the GDPPC across Hunan. The observed Geary’s C value is extremely unlkiely to occur under conditions of spatial randomness, reinforcing the earlier findings from both the analytical Geary’s C test and the Moran’s I test.\n\n\n\n\n\nA spatial correlogram is a graphical representation of spatial autocorrelation at different distance lags. It helps us understand how spatial autocorrelation changes with distance.\nAlthough correlograms are not as fundamental as variograms like in geostatistics, they provide valuable insights into spatial patterns.\nThe spdep package offers the sp.correlogram function to compute and visualize a spatial correlogram.\n\n\nCompute a 6-lag spatial correlogram of GDPPC. The parameter order specifies the number of distance lags to consider. If we were to use fewer lags, we might miss important patterns in the data. However, using too many lags can make the correlogram difficult to interpret.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nQuestion: What statistical observation can you draw from the plot above?\nAnswer:\nThe spatial correlogram demonstrates strong evidence of spatial clustering of GDPPC in Hunan. The spatial dependence is strongest among immediate neighbors and remains significant up to third-order neighbors.\nThe Moran’s I values decrease as the distance lag increases, suggesting that spatial autocorrelation decreases with distance. However, the values remain positive, indicating that regions with similar GDPPC values tend to be clustered together at various distances.\n\n\n\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nQuestion: What statistical observation can you draw from the plot above?\nAnswer:\nThe spatial correlogram shows the Geary’s C values at different distance lags. The Geary’s C values are negative across all distance lags, indicating positive spatial autocorrelation in the GDPPC across Hunan.\nThe Geary’s C values increase as the distance lag increases, suggesting that spatial autocorrelation decreases with distance. However, the values remain negative, indicating that regions with similar GDPPC values tend to be clustered together at various distances.\n\n\n\n\n\n\nMI_corr vs GC_corr\n\n\n\nWhy does MI_corr trend upward while GC_corr trends downward?\nAnswer:\n\nMoran’s I (MI) measures positive spatial autocorrelation, so higher values indicate stronger clustering of similar values.\nGeary’s C (GC) can be interpreted as inverse to Moran’s I, so lower values indicate positive spatial autocorrelation.\nThe upward trend in Moran’s I correlogram indicates that regions with similar GDPPC values are more clustered at shorter distances.\nThe downward trend in Geary’s C correlogram indicates that regions with similar GDPPC values are more clustered at shorter distances.\n\n\n\n\n\n\n\nMI_corr_df &lt;- data.frame(lag = as.numeric(rownames(MI_corr$res)),\n                         moran_i = MI_corr$res[, 1])\nGC_corr_df &lt;- data.frame(lag = as.numeric(rownames(GC_corr$res)),\n                         geary_c = GC_corr$res[, 1])\nggplot() +\n  geom_line(data = MI_corr_df, aes(x = lag, y = moran_i, color = \"Moran's I\")) +\n  geom_point(data = MI_corr_df, aes(x = lag, y = moran_i, color = \"Moran's I\")) +\n  geom_line(data = GC_corr_df, aes(x = lag, y = geary_c, color = \"Geary's C\")) +\n  geom_point(data = GC_corr_df, aes(x = lag, y = geary_c, color = \"Geary's C\")) +\n  scale_color_manual(values = c(\"Moran's I\" = \"blue\", \"Geary's C\" = \"red\")) +\n  labs(title = \"Spatial Correlograms\",\n       x = \"Distance Lag\",\n       y = \"Correlation\",\n       color = \"Measure\") +\n  theme_minimal()"
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#getting-started",
    "href": "HandsOnEx/Ex06/Ex06.html#getting-started",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#import-geospatial-data",
    "href": "HandsOnEx/Ex06/Ex06.html#import-geospatial-data",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "hunan &lt;- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\n\n\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\",\n            main.title.size = 0.85,\n            legend.title.size = 0.75,\n            legend.text.size = 0.5,)\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\",\n            main.title.size = 0.85,\n            legend.title.size = 0.75,\n            legend.text.size = 0.5,)\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChloropleth Map Observations\n\n\n\n\n\nIn the two maps above, we visualize the GDPPC in Hunan province using two different classification methods: equal interval and quantile. In the left map, we use equal interval classification to divide the data into 5 classes. In the right map, we use quantile classification to divide the data into 5 classes.\nNotice that the two maps show different patterns of regional development. The equal interval classification map shows that the highest GDPPC values are concentrated in the central and eastern parts of the province, while the quantile classification map shows that the highest GDPPC values are concentrated in the central and southern parts of the province."
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#global-measures-of-spatial-autocorrelation",
    "href": "HandsOnEx/Ex06/Ex06.html#global-measures-of-spatial-autocorrelation",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "Before computing GSA, we need to construct a spatial weights of the study area. As we learnt in last week’s exercise, we can use the poly2nb function to create a spatial weights matrix based on polygon contiguity.\nWe can use the Queen contiguity criterion to define neighbors. This criterion considers two polygons as neighbors if they share a common boundary or a vertex.\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\n\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\n\n\n\nSpatial Weights Matrix Observations\n\n\n\nThe distribution of connections gives us an idea of Hunan’s spatial structure. The variation in the number of links suggests a diverse spatial pattern, with some isolated areas and some highly connected central regions.\nWhen creating our row-standardized weights matrix, this step is crucial for spatial analysis. Style “W” assigns equal weights to neighbors, summing to 1 for each region. Setting zero.policy = TRUE handles regions with no neighbors, preventing errors in subsequent analyses."
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#gmsa-morans-i",
    "href": "HandsOnEx/Ex06/Ex06.html#gmsa-morans-i",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "Moran’s I statistics can be performed using the moran.test function in the spdep package. This function computes the Moran’s I statistic and its associated p-value.\n\n\n\n\n\n\nMoran’s I Interpretation\n\n\n\nDeveloped by Patrick Alfred Pierce Moran, Moran’s I is a measure of spatial autocorrelation that ranges from -1 to 1. A value close to 1 indicates positive spatial autocorrelation, meaning similar values are clustered together. A value close to -1 indicates negative spatial autocorrelation, meaning dissimilar values are clustered together. A value close to 0 indicates no spatial autocorrelation.\nWhy is it useful? Moran’s I helps us understand the spatial distribution of a variable and identify spatial patterns that may be hidden in the data.\n\n\n\n\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nQuestion: What statistical conclusion can you draw from the output above?\nAnswer:\n\nThe Moran I statistic is approximately 0.3007, indicating a positive spatial autocorrelation in the GDPPC across Hunan\nThe p-value is much less than the usual significance levels of 0.05 or 0.01, which might suggest that the spatial autocorrelation is statistically significant.\nHypothesis Test:\n\nNull Hypothesis (\\(H_0\\)): There is no spatial autocorrelation (spatial randomness)\nAlternative Hypothesis (\\(H_1\\)): There is positive spatial autocorrelation (greater than spatial randomness)\n\nConclusion: Given the very small p-value we reject the null hypothesis and conclude that there is positive spatial autocorrelation in the GDPPC across Hunan.\n\n\n\n\nWe can perform a permutation test for Moran’s I statistic using the moran.mc function. This function generates a Monte Carlo simulation to estimate the p-value of the Moran’s I statistic.\n\nset.seed(42)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nQuestion: What statistical conclusion can you draw from the output above?\nAnswer:\n\nThe observed Moran’s I statistic is 0.3007, which is within the range of simulated values.\nThe p-value is 0.001, which is less than common significance values of 0.01 or 0.05\nConclusion: Given that we’ve run 1000 Monte Carlo Simulations and the p-value still remains very low, we can conclude that the spatial autocorrelation in GDPPC across Hunan is statistically significant.\n\n\n\n\nThe Monte Carlo simulation can be visualized by plotting the distribution of simulated Moran’s I values and highlighting the observed Moran’s I value.\nWe can use hist() and abline() functions for data visualization.\n\nmean(bperm$res[1:999])\n\n[1] -0.007182342\n\nvar(bperm$res[1:999])\n\n[1] 0.004295062\n\n\n\nsummary(bperm$res[1:999])\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.200131 -0.052501 -0.013190 -0.007182  0.034529  0.228826 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\n\nQuestion: What statistical observation can you draw from the output above?\nAnswer:\n\nDistribution: The histogram shows the distribution of simulated Moran’s I values under the null hypothesis of spatial randomness. The distribution appears to be approximately normal, slightly left-skewed.\nCentral Tendency: The mean and median are close to zero but slightly negative, which is within expectations for spatial randomness.\nVariance: The range and variance indicate moderate variability in the simulated values.\nComparison to Observed Moran’s I: The red vertical line at 0 represents the expected value under complete spatial randomness. Around 88.79% of the simulated values fall within the range of -0.1 to 0.1, with very few extreme values.\n\n\nsimulated_values &lt;- bperm$res[1:999]\ncount_in_range &lt;- sum(simulated_values &gt;= -0.1 & simulated_values &lt;= 0.1)\npercentage_in_range &lt;- (count_in_range / length(simulated_values)) * 100\nprint(paste0(\"Percentage of values between -0.1 and 0.1: \", \n             round(percentage_in_range, 2), \"%\"))\n\n[1] \"Percentage of values between -0.1 and 0.1: 88.79%\"\n\n\n\nConclusion: TThe simulated distribution shows most values clustered between -0.1 and 0.1. Any observed Moran’s I value substantially outside this range would be considered statistically significant, indicating positive spatial autocorrelation in the GDPPC across Hunan.\n\n\n\n\n\npacman::p_load(ggplot2)\n\ndf &lt;- data.frame(moran_i = bperm$res[1:999])\n\nggplot(df, aes(x = moran_i)) +\n  geom_histogram(bins = 20, fill = \"lightgrey\", color = \"black\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"solid\", linewidth = 1) +\n  labs(title = \"Histogram of Simulated Moran's I\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#gmsa-gearys-c",
    "href": "HandsOnEx/Ex06/Ex06.html#gmsa-gearys-c",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "Geary’s C Interpretation\n\n\n\nGeary’s C, developed by Robert J. Geary, is another measure of spatial autocorrelation that ranges from 0 to 2. A value close to 0 indicates positive spatial autocorrelation, while a value close to 2 indicates negative spatial autocorrelation. A value of 1 indicates spatial randomness.\nMoran and Geary statistics are similar but have different interpretations. Geary’s C is less sensitive to extreme values and is often used as an alternative to Moran’s I.\n\n\n\n\nThe spdep package provides the geary.test function to compute Geary’s C statistic and its associated p-value.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\nQuestion: What statistical conclusion can you draw from the output above?\nAnswer:\n\nTest Statistic: The Geary C statistic is approximately 0.6907, indicating positive spatial autocorrelation in the GDPPC across Hunan.\n\nStrength of Autocorrelation: The value of 0.6907 is closer to 1 than 0, which could suggest a moderately positive spatial autocorrelation.\n\np-value: The p-value is 0.0001526 which is significantly smaller than the common significance values of 0.05 or 0.01\nHypothesis Test:\n\nNull Hypothesis (\\(H_0\\)): There is no spatial autocorrelation (spatial randomness)\nAlternative Hypothesis (\\(H_1\\)): The expectation is greater than the statistic, indicating positive spatial autocorrelation\n\nConclusion: Given the very small p-value, we reject the null hypothesis of spatial randomness. We conclude that there is significant positive spatial autocorrelation in the GDPPC across Hunan. This means regions with similar GDPPC values tend to be located near each other more often than would be expected by chance\n\n\n\n\nNow that we have computed both Moran’s I and Geary’s C statistics, let’s compare the results.\nThe results from Geary C’s test is consistent with Moran’s I test, indicating positive spatial autocorrelation in the GDPPC across Hunan.\nIt is interesting to note that unlike Moran’s I, a lower Geary’s C value indicates stronger positive autocorrelation. The value of 0.6907223 (less than 1) confirms positive autocorrelation.\n\n\n\nLikewise, we can run a Monte Carlo simulation to estimate the p-value of Geary’s C statistic using the geary.mc function.\n\nset.seed(42)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 2, p-value = 0.002\nalternative hypothesis: greater\n\n\nQuestion: What statistical conclusion can you draw from the output above?\nAnswer:\n\nThe observed Geary’s C statistic is 0.6907, which falls within the range of simulated values.\nThe p-value is 0.002, which is less than common significance values of 0.01 or 0.05\nConclusion: Given that we’ve run 1000 Monte Carlo Simulations and the p-value still remains very low, we can conclude that the spatial autocorrelation in GDPPC across Hunan is statistically significant.\n\n\n\n\n\nmean(bperm$res[1:999])\n\n[1] 0.9953715\n\nvar(bperm$res[1:999])\n\n[1] 0.00723939\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.6827  0.9404  0.9960  0.9954  1.0535  1.2888 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")\n\n\n\n\n\n\n\n\nQuestion: What statistical observation can you draw from the output above?\nAnswer:\n\nDistribution: The histogram shows the distribution of simulated Geary’s C values under the null hypothesis of spatial randomness. The distribution appears to be approximately normal and roughly symmetric around 1.\nCentral Tendency: The mean and median are close to 1, which is the expected value under spatial randomness.\nVariance: The range and variance indicate moderate variability in the simulated values.\nComparison to Observed Geary’s C: The observed Geary’s C is much lower than the mean of the simulated values. It falls at the extreme left tail of the distribution, indicating strong positive spatial autocorrelation.\nConclusion: The Monte Carlo simulation strongly supports the conclusion of significant positive spatial autocorrelation in the GDPPC across Hunan. The observed Geary’s C value is extremely unlkiely to occur under conditions of spatial randomness, reinforcing the earlier findings from both the analytical Geary’s C test and the Moran’s I test."
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#spatial-correlogram",
    "href": "HandsOnEx/Ex06/Ex06.html#spatial-correlogram",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "A spatial correlogram is a graphical representation of spatial autocorrelation at different distance lags. It helps us understand how spatial autocorrelation changes with distance.\nAlthough correlograms are not as fundamental as variograms like in geostatistics, they provide valuable insights into spatial patterns.\nThe spdep package offers the sp.correlogram function to compute and visualize a spatial correlogram.\n\n\nCompute a 6-lag spatial correlogram of GDPPC. The parameter order specifies the number of distance lags to consider. If we were to use fewer lags, we might miss important patterns in the data. However, using too many lags can make the correlogram difficult to interpret.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nQuestion: What statistical observation can you draw from the plot above?\nAnswer:\nThe spatial correlogram demonstrates strong evidence of spatial clustering of GDPPC in Hunan. The spatial dependence is strongest among immediate neighbors and remains significant up to third-order neighbors.\nThe Moran’s I values decrease as the distance lag increases, suggesting that spatial autocorrelation decreases with distance. However, the values remain positive, indicating that regions with similar GDPPC values tend to be clustered together at various distances.\n\n\n\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nQuestion: What statistical observation can you draw from the plot above?\nAnswer:\nThe spatial correlogram shows the Geary’s C values at different distance lags. The Geary’s C values are negative across all distance lags, indicating positive spatial autocorrelation in the GDPPC across Hunan.\nThe Geary’s C values increase as the distance lag increases, suggesting that spatial autocorrelation decreases with distance. However, the values remain negative, indicating that regions with similar GDPPC values tend to be clustered together at various distances.\n\n\n\n\n\n\nMI_corr vs GC_corr\n\n\n\nWhy does MI_corr trend upward while GC_corr trends downward?\nAnswer:\n\nMoran’s I (MI) measures positive spatial autocorrelation, so higher values indicate stronger clustering of similar values.\nGeary’s C (GC) can be interpreted as inverse to Moran’s I, so lower values indicate positive spatial autocorrelation.\nThe upward trend in Moran’s I correlogram indicates that regions with similar GDPPC values are more clustered at shorter distances.\nThe downward trend in Geary’s C correlogram indicates that regions with similar GDPPC values are more clustered at shorter distances.\n\n\n\n\n\n\n\nMI_corr_df &lt;- data.frame(lag = as.numeric(rownames(MI_corr$res)),\n                         moran_i = MI_corr$res[, 1])\nGC_corr_df &lt;- data.frame(lag = as.numeric(rownames(GC_corr$res)),\n                         geary_c = GC_corr$res[, 1])\nggplot() +\n  geom_line(data = MI_corr_df, aes(x = lag, y = moran_i, color = \"Moran's I\")) +\n  geom_point(data = MI_corr_df, aes(x = lag, y = moran_i, color = \"Moran's I\")) +\n  geom_line(data = GC_corr_df, aes(x = lag, y = geary_c, color = \"Geary's C\")) +\n  geom_point(data = GC_corr_df, aes(x = lag, y = geary_c, color = \"Geary's C\")) +\n  scale_color_manual(values = c(\"Moran's I\" = \"blue\", \"Geary's C\" = \"red\")) +\n  labs(title = \"Spatial Correlograms\",\n       x = \"Distance Lag\",\n       y = \"Correlation\",\n       color = \"Measure\") +\n  theme_minimal()"
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#research-question",
    "href": "HandsOnEx/Ex06/Ex06.html#research-question",
    "title": "Hands-on Exercise 6",
    "section": "Research Question",
    "text": "Research Question\nOur aim is to apply appropraite spatial statistical methods to discover if development is evenly distributed geographically. From the previous section we determined that there are signs of spatial clustering.\nOur next steps are answering these question:\n\nWhere are these clusters located?\nAre there specific regions with high or low GDPPC values that are surrounded by similar regions?\n\nWe will revisit these questions at the end of the exercise."
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#local-indicators-of-spatial-association-lisa",
    "href": "HandsOnEx/Ex06/Ex06.html#local-indicators-of-spatial-association-lisa",
    "title": "Hands-on Exercise 6",
    "section": "Local Indicators of Spatial Association (LISA)",
    "text": "Local Indicators of Spatial Association (LISA)\nLISA statistics evaluate the spatial autocorrelation of each observation in relation to its\n\nComputing Local Moran’s I\n\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n\nVisualizing Local Moran’s I\n\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#creating-lisa-cluster-map",
    "href": "HandsOnEx/Ex06/Ex06.html#creating-lisa-cluster-map",
    "title": "Hands-on Exercise 6",
    "section": "Creating LISA Cluster Map",
    "text": "Creating LISA Cluster Map\n\nPlotting Moran Scatterplot\n\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n\n\n\n\n\nPlotting Moran Scatterplot with Standardized Variable\n\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector \n\n\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n\n\n\n\nPreparing LISA Map Classes\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \nsignif &lt;- 0.05\n\n\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n\nPlotting LISA Map\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\n\n\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap,\n             asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\nQuestion: What spatial patterns do you observe in the LISA cluster map?\nAnswer: From the LISA cluster map, we can observe the following spatial patterns:\n\nHigh-High Clusters: Regions with high GDPPC values surrounded by other high GDPPC regions are represented by the red areas. These high-high clusters indicate spatial autocorrelation of high GDPPC values.\nLow-Low Clusters: Regions with low GDPPC values surrounded by other low GDPPC regions are represented by the blue areas. These low-low clusters indicate spatial autocorrelation of low GDPPC values.\nAnalysis: The LISA cluster map reveals the spatial clusters of high and low GDPPC values in Hunan province. The clusters are concentrated in specific regions, indicating spatial autocorrelation of GDPPC values."
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#hot-spot-and-cold-spot-area-analysis",
    "href": "HandsOnEx/Ex06/Ex06.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-on Exercise 6",
    "section": "Hot Spot and Cold Spot Area Analysis",
    "text": "Hot Spot and Cold Spot Area Analysis\n\nGetis and Ord’s G-Statistics\n\n\nDeriving distance-based weight matrix\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\n\n\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\nComputing Adaptive Distance Weight Matrix\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#computing-gi-statistics",
    "href": "HandsOnEx/Ex06/Ex06.html#computing-gi-statistics",
    "title": "Hands-on Exercise 6",
    "section": "Computing Gi Statistics",
    "text": "Computing Gi Statistics\n\nGi Statistics using Fixed Distance\n\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\n\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\n\nMapping Gi Values with Fixed Distance Weights\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\nQuestion: What spatial patterns do you observe in the Gi statistics map using fixed distance weights?\nAnswer:\nThere seems to be a clear spatial pattern in the Gi statistics map using fixed distance weights. The map highlights regions with high and low GDPPC values based on the Gi statistics. The red areas represent hotspots of high GDPPC values, while the blue areas represent cold spots of low GDPPC values. The map shows spatial clustering of similar GDPPC values, indicating the presence of hotspots and cold spots in Hunan province.\n\n\nGi Statistics using Adaptive Distance\n\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\nMapping Gi Values with Adaptive Distance Weights\n\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\nQuestion: What spatial patterns do you observe in the Gi statistics map using adaptive distance weights?"
  },
  {
    "objectID": "HandsOnEx/Ex06/Ex06.html#closing-thoughts",
    "href": "HandsOnEx/Ex06/Ex06.html#closing-thoughts",
    "title": "Hands-on Exercise 6",
    "section": "Closing Thoughts",
    "text": "Closing Thoughts\nEarlier, we posed 2 questions on the spatial distribution of GDPPC in Hunan province:\n\nWhere are these clusters located?\nAre there specific regions with high or low GDPPC values that are surrounded by similar regions?\n\nNow, we can answer these questions based on the results of the LISA cluster map and the Gi statistics maps.\n\nSpatial Clusters of GDPPC\n\nClusters Location: The LISA cluster map shows the spatial clusters of GDPPC values in Hunan province. The map identifies regions with high-high and low-low GDPPC values, indicating spatial clustering of similar values. The high-high clusters are concentrated in the central and eastern parts of the province, while the low-low clusters are located in the northern and western regions.\nSpecific Regions: The LISA cluster map highlights specific regions with high or low GDPPC values that are surrounded by similar regions. The high-high clusters represent regions with high GDPPC values surrounded by other high GDPPC regions, while the low-low clusters represent regions with low GDPPC values surrounded by other low GDPPC regions."
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html",
    "href": "HandsOnEx/Ex03/Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Spatial Point Pattern Analysis is the study of spatial distribution of points in a given region. The point can be a location of:\n\nEvents like earthquakes, accidents, crimes, etc.\nServices and facilities like hospitals, schools, etc.\n\nIn this exercise, we will be using the spatstat package to analyze spatial point patterns of childcare centres in Singapore.\nThe aim is to answer specific questions like:\n\nAre childcare centres in Singapore randomly distributed throughout the country?\nIf no, then which locations have a higher concentration of childcare centres?\n\n\n\n\n\n\n\nPre-Exercise Thoughts\n\n\n\n\n\nInitial hypotheses: 1. Childcare centres are randomly distributed throughout Singapore because they have to cater to the population. 2. But, consider that childcare centres may be more concentrated in areas with higher population density.\nI am not sure if they are correct. But we will be revisiting these hypotheses after the analysis.\n\n\n\n\n\nWe are already familiar with sf, tmap, tidyverse which we have covered. Aside from these, we will also be loading: * spatstat - for 1st and 2nd order spatial point pattern analysis and KDE * raster - manipulation of gridded spatial data * maptools - manipulating geographic data, converting Spatial objects into ppp objects\n\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\nInstalling package into 'C:/Users/Home/AppData/Local/R/win-library/4.4'\n(as 'lib' is unspecified)\n\n\npackage 'maptools' successfully unpacked and MD5 sums checked\n\n\nWarning: cannot remove prior installation of package 'maptools'\n\n\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\Users\\Home\\AppData\\Local\\R\\win-library\\4.4\\00LOCK\\maptools\\libs\\x64\\maptools.dll\nto\nC:\\Users\\Home\\AppData\\Local\\R\\win-library\\4.4\\maptools\\libs\\x64\\maptools.dll:\nPermission denied\n\n\nWarning: restored 'maptools'\n\n\n\nThe downloaded binary packages are in\n    C:\\Users\\Home\\AppData\\Local\\Temp\\RtmpO0GbEl\\downloaded_packages\n\n\n\npacman::p_load(sf, tmap, spatstat, raster, tidyverse, maptools)\n\n\n\n\n\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") |&gt;\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex03\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf &lt;- st_read(dsn = \"data\", layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nDIY: Project these data in the same projection system using the st_transform() function.\n\nsg_sf &lt;- st_transform(sg_sf, crs = 3414)\nmpsz_sf &lt;- st_transform(mpsz_sf, crs = 3414)\n\nNote that childcare_sf is already in the same projection system, thus no need to transform it.\n\n\n\nDIY: To visualize spatial patterns, we will use tmap to plot the data.\n\ntm_shape(sg_sf) +\n  tm_polygons() +\n  tm_shape(mpsz_sf) +\n  tm_polygons() +\n  tm_shape(childcare_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\nWe can also prepare a pin map as shown below:\n\n# tmap_mode('view')\n# tm_shape(childcare_sf) +\n#   tm_dots()\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\n\n\n\n\n\nchildcare &lt;- as(childcare_sf, \"Spatial\")\nmpsz &lt;- as(mpsz_sf, \"Spatial\")\nsg &lt;- as(sg_sf, \"Spatial\")\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;08F73931F4A691F4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;RAFFLES KIDZ @ PUNGGOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;379D017BF244B0FA&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\n\nclass(childcare)\n\n[1] \"SpatialPointsDataFrame\"\nattr(,\"package\")\n[1] \"sp\"\n\nclass(mpsz)\n\n[1] \"SpatialPolygonsDataFrame\"\nattr(,\"package\")\n[1] \"sp\"\n\nclass(sg)\n\n[1] \"SpatialPolygonsDataFrame\"\nattr(,\"package\")\n[1] \"sp\"\n\n\n\n\n\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\nChallenge: Spatial* Classes: * Specific classes for different types of spatial data (e.g. SpatialPoints, SpatialLines, SpatialPolygons etc.) * Each class is optimized for a particular type of spatial data. * They have specific methods and functions tailored to their data type.\nGeneric sp Objects: * More general-purpose spatial objects that can represent various types of spatial data. * More flexible but may be less efficient compared to Spatial* classes.\n\n\n\nWe will call the as.ppp() function in the spatstat package to convert the SpatialPoints object into a ppp object.\n\nchildcare_ppp &lt;- as.ppp(st_coordinates(childcare_sf), st_bbox(childcare_sf))\n\nWarning: data contain duplicated points\n\nchildcare_ppp\n\nMarked planar point pattern: 1545 points\nmarks are numeric, of storage type  'double'\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\n\nsummary(childcare_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0       0       0       0 \n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\nWe are notified that there are duplicate points, which is a significant issue for spatial point patterns analysis. The statistical methodology used is largely based on the assumption that points are independent of each other.\n\n\n\n\nWe can check if there are duplicate points in a ppp object using the duplicated() function.\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nTo count the number of coincident points, we can use the multiplicity() function.\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\nIf we want to know how many locations have more than one point event, the code chunk below will help us.\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 128\n\n\nWe can plot childcare to see the location of duplicate points.\n\n# tmap_mode('view')\n# tm_shape(childcare) +\n#  tm_dots(alpha = 0.4, \n#          size = 0.05)\n# tmap_mode('plot')\n\nNote: For faster rendering purposes, we will not be showing multiple tmap_mode() calls in this exercise.\nChallenge: To spot the duplicate points from the map above, we can use: 1. Darker or more intense colors to represent higher point density. 2. Use different sizes for points that share the same location. 3. Spatial statistics such as KDE can also be used to visualize point density.\nThe first way of overcoming duplication is to delete the duplicates, but this may not be the best approach. Instead, we can use the jitter() function to add a small amount of noise to the duplicated points.\nThe third solution is to make each point unique and attaching the duplicates of the points to the patterns as marks\n\nchildcare_ppp &lt;- rjitter(childcare_ppp, retry = TRUE, nsim = 1, drop = TRUE)\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\n\n\nWhen analyzing spatial point patterns, we can confine the analysis with a window. The owin object is used to define the window in which the point pattern is observed.\n\nsg_owin &lt;- as.owin(sg_sf)\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\n\n\nLastly, we extract childcare events within Singapore.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nsummary(childcareSG_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 2.129929e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0       0       0       0 \n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\nplot(childcareSG_ppp)\n\n\n\n\n\n\n\n\n\n\n\n\nWe will perform first-order spatial point patterns analysis with the spatstat package.\n\n\nWe can compute kernel density using: * bw.diggle() - Diggle’s method for bandwidth selection * Gaussian smoothing kernel. Other methods include Epanechnikov, etc. * Intensity estimate corrected for edge effects bias. Default is False.\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp, \n                              sigma = bw.diggle, \n                              edge = TRUE, \n                              kernel = \"gaussian\")\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nWe can also retrieve the bandwidth used to compute the kde layer using the bw function.\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n373.0118 \n\n\nUse rescale.ppp() to convert unit of measurement from meter to kilometer.\n\nchildcareSG_ppp_km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\nkde_childcareSG_bw &lt;- density(childcareSG_ppp_km, \n                              sigma = bw.diggle, \n                              edge = TRUE, \n                              kernel = \"gaussian\")\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\n\nMethod: Cronie and van Lieshout’s\n\nbw.CvL(childcareSG_ppp_km)\n\n   sigma \n5.089639 \n\n\n\nkde_childcareSG_bw_CvL &lt;- density(childcareSG_ppp_km, sigma =  bw.CvL, edge = TRUE, kernel = \"gaussian\")\n\nMethod: Scott’s Rule\n\nbw.scott(childcareSG_ppp_km)\n\n sigma.x  sigma.y \n2.224776 1.450748 \n\n\n\nkde_childcareSG_bw_scott &lt;- density(childcareSG_ppp_km, sigma =  bw.scott, edge = TRUE, kernel = \"gaussian\")\n\nMethod: Likelihood Cross Validation\n\nbw.ppl(childcareSG_ppp_km)\n\n    sigma \n0.2854961 \n\n\n\nkde_childcareSG_bw_ppl &lt;- density(childcareSG_ppp_km, sigma =  bw.ppl, edge = TRUE, kernel = \"gaussian\")\n\n\nbw.diggle(childcareSG_ppp_km)\n\n    sigma \n0.3730118 \n\n\n\nkde_childcareSG_bw_ppl &lt;- density(childcareSG_ppp_km, \n                                  sigma =  bw.ppl, \n                                  edge = TRUE, \n                                  kernel = \"gaussian\")\npar(mfrow=c(2,2))\npar(mar = c(3,2,2,1))\nplot(kde_childcareSG_bw, main = \"bw.diggle\")\nplot(kde_childcareSG_bw_CvL, main = \"bw.CvL\")\nplot(kde_childcareSG_bw_scott, main = \"bw.scott\")\nplot(kde_childcareSG_bw_ppl, main = \"bw.ppl\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(mfrow = c(2,2))\npar(mar = c(3,2,2,1))\nplot(density(childcareSG_ppp_km, \n             sigma = bw.ppl, \n             edge = TRUE, \n             kernel = \"gaussian\"), \n     main = \"Gaussian\")\nplot(density(childcareSG_ppp_km, \n             sigma = bw.ppl, \n             edge = TRUE, \n             kernel = \"epanechnikov\"),\n     main = \"Epanechnikov\")\n\nWarning in density.ppp(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nplot(density(childcareSG_ppp_km, \n             sigma = bw.ppl, \n             edge = TRUE, \n             kernel = \"quartic\"), \n     main = \"Quartic\")\n\nWarning in density.ppp(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nplot(density(childcareSG_ppp_km, \n             sigma = bw.ppl, \n             edge = TRUE, \n             kernel = \"disc\"), \n     main = \"Disc\")\n\nWarning in density.ppp(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe define a bandwidth of 600 metres. The sigma value is 0.6 because the unit of measurement is in kilometer.\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp_km, sigma = 0.6, edge = TRUE, kernel = \"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n\n\nFixed bandwidth is sensitive to skewed data. Adaptive bandwidth adjusts the bandwidth based on the local density of points.\nWe can use the adaptive.density() function in the spatstat package to compute adaptive KDE.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp_km, method = \"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\nComparison between fixed and adaptive KDE:\n\npar(mfrow = c(1,2))\npar(mar = c(3,2,2,2))\nplot(kde_childcareSG_600, main = \"Fixed KDE\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive KDE\")\n\n\n\n\n\n\n\n\n\n\n\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG_bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nNext, we convert the gridded kernel density objects into RasterLayer using raster() function.\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -1.081139e-14, 23.50562  (min, max)\n\n\nInclude CRS information with the projection() function.\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.081139e-14, 23.50562  (min, max)\n\n\n\n\n\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\", palette=\"cividis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n\n\nCompare the KDE of childcare at Punggol, Tampines, Choa Chu Kang, Jurong West.\n\npg &lt;- mpsz_sf |&gt;\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf |&gt;\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf |&gt;\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf |&gt;\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\nPlot the target plan areas.\n\npar(mfrow = c(2,2))\nplot(pg, main = \"Punggol\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\nWarning: plotting the first 10 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\nConvert these sf objects into owin objects\n\npg_owin &lt;- as.owin(pg)\ntm_owin &lt;- as.owin(tm)\nck_owin &lt;- as.owin(ck)\njw_owin &lt;- as.owin(jw)\n\nCombine childcare points and study area using owin object.\n\nchildcare_pg_ppp &lt;- childcare_ppp[pg_owin]\nchildcare_tm_ppp &lt;- childcare_ppp[tm_owin]\nchildcare_ck_ppp &lt;- childcare_ppp[ck_owin]\nchildcare_jw_ppp &lt;- childcare_ppp[jw_owin]\n\nApply rescaling to transform the unit of measurement to kilometer.\n\nchildcare_pg_ppp.km &lt;- rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km &lt;- rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km &lt;- rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km &lt;- rescale(childcare_jw_ppp, 1000, \"km\")\n\nPlot out the four areas and location of childcare centers.\n\npar(mfrow=c(2,2))\npar(mar = c(3,2,2,1))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\nCompute the KDE of these four planning areas.\n\npar(mfrow = c(2,2))\npar(mar = c(3,2,2,1))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\nCompute fixed bandwidth KDE using 250m as bandwidth.\n\npar(mfrow=c(2,2))\npar(mar = c(3,2,2,1))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the Clark-Evans test of aggression, we can determine if the point pattern is significantly different from a random pattern.\nTest Hypotheses: * Null Hypothesis H_o: The distribution of childcare centres in Singapore is random. * Alternative Hypothesis H_a: The distribution of childcare centres in Singapore is not random.\nWe will use a 95% confidence level to test the hypothesis.\n\nclarkevans.test(childcareSG_ppp, \n                correction = \"none\", \n                clipregion = \"sg_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.56343, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: We notice the p-value is less than 0.05, which means we reject the null hypothesis. The distribution of childcare centres is not random.\n\n\n\n\n\n\nClosing Thoughts\n\n\n\n\n\nAt the start of the exercise, we hypothesized that childcare centres are randomly distributed throughout Singapore. However, the analysis shows that the distribution is not random. This could be due to the fact that childcare centres are more concentrated in areas with higher population density.\n\n\n\nSimilarly, we can conduct the same test for the four planning areas.\n\nclarkevans.test(childcare_pg_ppp, \n                correction = \"none\", \n                clipregion = \"ck_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_pg_ppp\nR = 0.89975, p-value = 0.06709\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: The p-value is 0.0713 (&gt; 0.05), which means we fail to reject the null hypothesis. The distribution of childcare centres in Punggol is random.\n\nclarkevans.test(childcare_tm_ppp, \n                correction = \"none\", \n                clipregion = \"tm_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.78919, p-value = 7.099e-05\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: The p-value is &lt; 0.05, which means we reject the null hypothesis. The distribution of childcare centres in Tampines is not random.\n\nclarkevans.test(childcare_ck_ppp, \n                correction = \"none\", \n                clipregion = \"ck_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.95364, p-value = 0.2442\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: The p-value is &lt; 0.05, which means we reject the null hypothesis. The distribution of childcare centres in Choa Chu Kang is not random.\n\nclarkevans.test(childcare_jw_ppp, \n                correction = \"none\", \n                clipregion = \"jw_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_jw_ppp\nR = 0.91404, p-value = 0.06145\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: The p-value is &lt; 0.05, which means we reject the null hypothesis. The distribution of childcare centres in Jurong West is not random.\nWhile the distributions across planning zones may vary due to different population densities, the overall distribution of childcare centres in Singapore is not random."
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#loading-required-libraries",
    "href": "HandsOnEx/Ex03/Ex03.html#loading-required-libraries",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "We are already familiar with sf, tmap, tidyverse which we have covered. Aside from these, we will also be loading: * spatstat - for 1st and 2nd order spatial point pattern analysis and KDE * raster - manipulation of gridded spatial data * maptools - manipulating geographic data, converting Spatial objects into ppp objects\n\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\nInstalling package into 'C:/Users/Home/AppData/Local/R/win-library/4.4'\n(as 'lib' is unspecified)\n\n\npackage 'maptools' successfully unpacked and MD5 sums checked\n\n\nWarning: cannot remove prior installation of package 'maptools'\n\n\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\Users\\Home\\AppData\\Local\\R\\win-library\\4.4\\00LOCK\\maptools\\libs\\x64\\maptools.dll\nto\nC:\\Users\\Home\\AppData\\Local\\R\\win-library\\4.4\\maptools\\libs\\x64\\maptools.dll:\nPermission denied\n\n\nWarning: restored 'maptools'\n\n\n\nThe downloaded binary packages are in\n    C:\\Users\\Home\\AppData\\Local\\Temp\\RtmpO0GbEl\\downloaded_packages\n\n\n\npacman::p_load(sf, tmap, spatstat, raster, tidyverse, maptools)"
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#loading-spatial-data",
    "href": "HandsOnEx/Ex03/Ex03.html#loading-spatial-data",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "childcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") |&gt;\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex03\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf &lt;- st_read(dsn = \"data\", layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nDIY: Project these data in the same projection system using the st_transform() function.\n\nsg_sf &lt;- st_transform(sg_sf, crs = 3414)\nmpsz_sf &lt;- st_transform(mpsz_sf, crs = 3414)\n\nNote that childcare_sf is already in the same projection system, thus no need to transform it."
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#mapping-geospatial-datasets",
    "href": "HandsOnEx/Ex03/Ex03.html#mapping-geospatial-datasets",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "DIY: To visualize spatial patterns, we will use tmap to plot the data.\n\ntm_shape(sg_sf) +\n  tm_polygons() +\n  tm_shape(mpsz_sf) +\n  tm_polygons() +\n  tm_shape(childcare_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\nWe can also prepare a pin map as shown below:\n\n# tmap_mode('view')\n# tm_shape(childcare_sf) +\n#   tm_dots()\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting"
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#geospatial-data-wrangling",
    "href": "HandsOnEx/Ex03/Ex03.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "childcare &lt;- as(childcare_sf, \"Spatial\")\nmpsz &lt;- as(mpsz_sf, \"Spatial\")\nsg &lt;- as(sg_sf, \"Spatial\")\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;08F73931F4A691F4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;RAFFLES KIDZ @ PUNGGOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;379D017BF244B0FA&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\n\nclass(childcare)\n\n[1] \"SpatialPointsDataFrame\"\nattr(,\"package\")\n[1] \"sp\"\n\nclass(mpsz)\n\n[1] \"SpatialPolygonsDataFrame\"\nattr(,\"package\")\n[1] \"sp\"\n\nclass(sg)\n\n[1] \"SpatialPolygonsDataFrame\"\nattr(,\"package\")\n[1] \"sp\"\n\n\n\n\n\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\nChallenge: Spatial* Classes: * Specific classes for different types of spatial data (e.g. SpatialPoints, SpatialLines, SpatialPolygons etc.) * Each class is optimized for a particular type of spatial data. * They have specific methods and functions tailored to their data type.\nGeneric sp Objects: * More general-purpose spatial objects that can represent various types of spatial data. * More flexible but may be less efficient compared to Spatial* classes.\n\n\n\nWe will call the as.ppp() function in the spatstat package to convert the SpatialPoints object into a ppp object.\n\nchildcare_ppp &lt;- as.ppp(st_coordinates(childcare_sf), st_bbox(childcare_sf))\n\nWarning: data contain duplicated points\n\nchildcare_ppp\n\nMarked planar point pattern: 1545 points\nmarks are numeric, of storage type  'double'\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\n\nsummary(childcare_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0       0       0       0 \n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\nWe are notified that there are duplicate points, which is a significant issue for spatial point patterns analysis. The statistical methodology used is largely based on the assumption that points are independent of each other."
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#handling-duplicate-points",
    "href": "HandsOnEx/Ex03/Ex03.html#handling-duplicate-points",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "We can check if there are duplicate points in a ppp object using the duplicated() function.\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nTo count the number of coincident points, we can use the multiplicity() function.\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\nIf we want to know how many locations have more than one point event, the code chunk below will help us.\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 128\n\n\nWe can plot childcare to see the location of duplicate points.\n\n# tmap_mode('view')\n# tm_shape(childcare) +\n#  tm_dots(alpha = 0.4, \n#          size = 0.05)\n# tmap_mode('plot')\n\nNote: For faster rendering purposes, we will not be showing multiple tmap_mode() calls in this exercise.\nChallenge: To spot the duplicate points from the map above, we can use: 1. Darker or more intense colors to represent higher point density. 2. Use different sizes for points that share the same location. 3. Spatial statistics such as KDE can also be used to visualize point density.\nThe first way of overcoming duplication is to delete the duplicates, but this may not be the best approach. Instead, we can use the jitter() function to add a small amount of noise to the duplicated points.\nThe third solution is to make each point unique and attaching the duplicates of the points to the patterns as marks\n\nchildcare_ppp &lt;- rjitter(childcare_ppp, retry = TRUE, nsim = 1, drop = TRUE)\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\n\n\nWhen analyzing spatial point patterns, we can confine the analysis with a window. The owin object is used to define the window in which the point pattern is observed.\n\nsg_owin &lt;- as.owin(sg_sf)\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\n\n\nLastly, we extract childcare events within Singapore.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nsummary(childcareSG_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 2.129929e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0       0       0       0 \n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#first-order-analysis",
    "href": "HandsOnEx/Ex03/Ex03.html#first-order-analysis",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "We will perform first-order spatial point patterns analysis with the spatstat package.\n\n\nWe can compute kernel density using: * bw.diggle() - Diggle’s method for bandwidth selection * Gaussian smoothing kernel. Other methods include Epanechnikov, etc. * Intensity estimate corrected for edge effects bias. Default is False.\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp, \n                              sigma = bw.diggle, \n                              edge = TRUE, \n                              kernel = \"gaussian\")\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nWe can also retrieve the bandwidth used to compute the kde layer using the bw function.\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n373.0118 \n\n\nUse rescale.ppp() to convert unit of measurement from meter to kilometer.\n\nchildcareSG_ppp_km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\nkde_childcareSG_bw &lt;- density(childcareSG_ppp_km, \n                              sigma = bw.diggle, \n                              edge = TRUE, \n                              kernel = \"gaussian\")\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\n\nMethod: Cronie and van Lieshout’s\n\nbw.CvL(childcareSG_ppp_km)\n\n   sigma \n5.089639 \n\n\n\nkde_childcareSG_bw_CvL &lt;- density(childcareSG_ppp_km, sigma =  bw.CvL, edge = TRUE, kernel = \"gaussian\")\n\nMethod: Scott’s Rule\n\nbw.scott(childcareSG_ppp_km)\n\n sigma.x  sigma.y \n2.224776 1.450748 \n\n\n\nkde_childcareSG_bw_scott &lt;- density(childcareSG_ppp_km, sigma =  bw.scott, edge = TRUE, kernel = \"gaussian\")\n\nMethod: Likelihood Cross Validation\n\nbw.ppl(childcareSG_ppp_km)\n\n    sigma \n0.2854961 \n\n\n\nkde_childcareSG_bw_ppl &lt;- density(childcareSG_ppp_km, sigma =  bw.ppl, edge = TRUE, kernel = \"gaussian\")\n\n\nbw.diggle(childcareSG_ppp_km)\n\n    sigma \n0.3730118 \n\n\n\nkde_childcareSG_bw_ppl &lt;- density(childcareSG_ppp_km, \n                                  sigma =  bw.ppl, \n                                  edge = TRUE, \n                                  kernel = \"gaussian\")\npar(mfrow=c(2,2))\npar(mar = c(3,2,2,1))\nplot(kde_childcareSG_bw, main = \"bw.diggle\")\nplot(kde_childcareSG_bw_CvL, main = \"bw.CvL\")\nplot(kde_childcareSG_bw_scott, main = \"bw.scott\")\nplot(kde_childcareSG_bw_ppl, main = \"bw.ppl\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(mfrow = c(2,2))\npar(mar = c(3,2,2,1))\nplot(density(childcareSG_ppp_km, \n             sigma = bw.ppl, \n             edge = TRUE, \n             kernel = \"gaussian\"), \n     main = \"Gaussian\")\nplot(density(childcareSG_ppp_km, \n             sigma = bw.ppl, \n             edge = TRUE, \n             kernel = \"epanechnikov\"),\n     main = \"Epanechnikov\")\n\nWarning in density.ppp(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nplot(density(childcareSG_ppp_km, \n             sigma = bw.ppl, \n             edge = TRUE, \n             kernel = \"quartic\"), \n     main = \"Quartic\")\n\nWarning in density.ppp(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nplot(density(childcareSG_ppp_km, \n             sigma = bw.ppl, \n             edge = TRUE, \n             kernel = \"disc\"), \n     main = \"Disc\")\n\nWarning in density.ppp(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel"
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#fixed-and-adaptive-kde",
    "href": "HandsOnEx/Ex03/Ex03.html#fixed-and-adaptive-kde",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "We define a bandwidth of 600 metres. The sigma value is 0.6 because the unit of measurement is in kilometer.\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp_km, sigma = 0.6, edge = TRUE, kernel = \"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n\n\nFixed bandwidth is sensitive to skewed data. Adaptive bandwidth adjusts the bandwidth based on the local density of points.\nWe can use the adaptive.density() function in the spatstat package to compute adaptive KDE.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp_km, method = \"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\nComparison between fixed and adaptive KDE:\n\npar(mfrow = c(1,2))\npar(mar = c(3,2,2,2))\nplot(kde_childcareSG_600, main = \"Fixed KDE\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive KDE\")\n\n\n\n\n\n\n\n\n\n\n\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG_bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nNext, we convert the gridded kernel density objects into RasterLayer using raster() function.\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -1.081139e-14, 23.50562  (min, max)\n\n\nInclude CRS information with the projection() function.\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.081139e-14, 23.50562  (min, max)\n\n\n\n\n\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\", palette=\"cividis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n\n\nCompare the KDE of childcare at Punggol, Tampines, Choa Chu Kang, Jurong West.\n\npg &lt;- mpsz_sf |&gt;\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf |&gt;\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf |&gt;\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf |&gt;\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\nPlot the target plan areas.\n\npar(mfrow = c(2,2))\nplot(pg, main = \"Punggol\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\nWarning: plotting the first 10 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\nConvert these sf objects into owin objects\n\npg_owin &lt;- as.owin(pg)\ntm_owin &lt;- as.owin(tm)\nck_owin &lt;- as.owin(ck)\njw_owin &lt;- as.owin(jw)\n\nCombine childcare points and study area using owin object.\n\nchildcare_pg_ppp &lt;- childcare_ppp[pg_owin]\nchildcare_tm_ppp &lt;- childcare_ppp[tm_owin]\nchildcare_ck_ppp &lt;- childcare_ppp[ck_owin]\nchildcare_jw_ppp &lt;- childcare_ppp[jw_owin]\n\nApply rescaling to transform the unit of measurement to kilometer.\n\nchildcare_pg_ppp.km &lt;- rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km &lt;- rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km &lt;- rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km &lt;- rescale(childcare_jw_ppp, 1000, \"km\")\n\nPlot out the four areas and location of childcare centers.\n\npar(mfrow=c(2,2))\npar(mar = c(3,2,2,1))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\nCompute the KDE of these four planning areas.\n\npar(mfrow = c(2,2))\npar(mar = c(3,2,2,1))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\nCompute fixed bandwidth KDE using 250m as bandwidth.\n\npar(mfrow=c(2,2))\npar(mar = c(3,2,2,1))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#nearest-neighbour-analysis",
    "href": "HandsOnEx/Ex03/Ex03.html#nearest-neighbour-analysis",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Using the Clark-Evans test of aggression, we can determine if the point pattern is significantly different from a random pattern.\nTest Hypotheses: * Null Hypothesis H_o: The distribution of childcare centres in Singapore is random. * Alternative Hypothesis H_a: The distribution of childcare centres in Singapore is not random.\nWe will use a 95% confidence level to test the hypothesis.\n\nclarkevans.test(childcareSG_ppp, \n                correction = \"none\", \n                clipregion = \"sg_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.56343, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: We notice the p-value is less than 0.05, which means we reject the null hypothesis. The distribution of childcare centres is not random.\n\n\n\n\n\n\nClosing Thoughts\n\n\n\n\n\nAt the start of the exercise, we hypothesized that childcare centres are randomly distributed throughout Singapore. However, the analysis shows that the distribution is not random. This could be due to the fact that childcare centres are more concentrated in areas with higher population density.\n\n\n\nSimilarly, we can conduct the same test for the four planning areas.\n\nclarkevans.test(childcare_pg_ppp, \n                correction = \"none\", \n                clipregion = \"ck_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_pg_ppp\nR = 0.89975, p-value = 0.06709\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: The p-value is 0.0713 (&gt; 0.05), which means we fail to reject the null hypothesis. The distribution of childcare centres in Punggol is random.\n\nclarkevans.test(childcare_tm_ppp, \n                correction = \"none\", \n                clipregion = \"tm_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.78919, p-value = 7.099e-05\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: The p-value is &lt; 0.05, which means we reject the null hypothesis. The distribution of childcare centres in Tampines is not random.\n\nclarkevans.test(childcare_ck_ppp, \n                correction = \"none\", \n                clipregion = \"ck_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.95364, p-value = 0.2442\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: The p-value is &lt; 0.05, which means we reject the null hypothesis. The distribution of childcare centres in Choa Chu Kang is not random.\n\nclarkevans.test(childcare_jw_ppp, \n                correction = \"none\", \n                clipregion = \"jw_owin\", \n                alternative = c(\"clustered\"), \n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_jw_ppp\nR = 0.91404, p-value = 0.06145\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: The p-value is &lt; 0.05, which means we reject the null hypothesis. The distribution of childcare centres in Jurong West is not random.\nWhile the distributions across planning zones may vary due to different population densities, the overall distribution of childcare centres in Singapore is not random."
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#analysis-using-g-function",
    "href": "HandsOnEx/Ex03/Ex03.html#analysis-using-g-function",
    "title": "Hands-on Exercise 3",
    "section": "Analysis Using G-Function",
    "text": "Analysis Using G-Function\nThe G-function measures the deviation of the observed point pattern from a completely random point pattern. It is defined as the ratio of the observed density of points to the expected density of points. We will use the Gest() function in the spatstat package to compute the G-function.\n\nChoa Chu Kang:\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n\n\nPerform Complete Spatial Randomness Test using the envelope() function.\nThe hypotheses and test are as follows:\n\nNull Hypothesis H_o: The distribution of childcare centres in Choa Chu Kang is random.\nAlternative Hypothesis H_a: The distribution of childcare centres in Choa Chu Kang is not random.\n\nReject the null hypothesis if the p-value is smaller than alpha value of 0.001.\nMonte Carlo test with G-function\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, \n                     Gest, \n                     nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nPlot the G-function with the Monte Carlo test.\n\nplot(G_CK.csr, main = \"G-function for Choa Chu Kang\")\n\n\n\n\n\n\n\n\nConclusion: The p-value is less than 0.001, which means we reject the null hypothesis. The distribution of childcare centres in Choa Chu Kang is not random.\n\n\nTampines\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\n\n\n\nPerform a similar hypothesis test for Tampines.\n\nG_tm.csr &lt;- envelope(childcare_tm_ppp, \n                     Gest, \n                     nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nConclusion: The p-value is less than 0.001, which means we reject the null hypothesis. The distribution of childcare centres in Tampines is not random.\n\nplot(G_tm.csr, main = \"G-function for Tampines\")"
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#analysis-using-f-function",
    "href": "HandsOnEx/Ex03/Ex03.html#analysis-using-f-function",
    "title": "Hands-on Exercise 3",
    "section": "Analysis using F-Function",
    "text": "Analysis using F-Function\nThe F function estimates the hazard rate of a point pattern. It is defined as the ratio of the observed density of points to the expected density of points. We will use the Fest() function in the spatstat package to compute the F-function.\n\nChoa Chu Kang\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\n\nPerform Complete Spatial Randomness Test using the envelope() function.\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, \n                     Fest, \n                     nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(F_CK.csr, main = \"F-function for Choa Chu Kang\")\n\n\n\n\n\n\n\n\nConclusion: The p-value is less than 0.001, which means we reject the null hypothesis. The distribution of childcare centres in Choa Chu Kang is not random.\n\n\nTampines\n\nF_tm = Fest(childcare_tm_ppp, correction=\"best\")\nplot(F_tm)\n\n\n\n\n\n\n\n\nPerform a similar hypothesis test for Tampines.\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(F_tm.csr, main = \"F-function for Tampines\")\n\n\n\n\n\n\n\n\nConclusion: The p-value is less than 0.001, which means we reject the null hypothesis. The distribution of childcare centres in Tampines is not random."
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#analysis-using-k-function",
    "href": "HandsOnEx/Ex03/Ex03.html#analysis-using-k-function",
    "title": "Hands-on Exercise 3",
    "section": "Analysis using K-Function",
    "text": "Analysis using K-Function\nThe K-function measures the deviation of the observed point pattern from a completely random point pattern. It is defined as the ratio of the observed density of points to the expected density of points. We will use the Kest() function in the spatstat package to compute the K-function.\n\nChoa Chu Kang\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\n\nK_ck.csr &lt;- envelope(childcare_ck_ppp, \n                     Kest, \n                     nsim = 99,\n                     rank = 1,\n                     glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(K_ck.csr, main = \"K-function for Choa Chu Kang\", . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\nConclusion: The p-value is less than 0.001, which means we reject the null hypothesis. The distribution of childcare centres in Choa Chu Kang is not random.\n\n\nTampines\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\nPerform Hypothesis Testing.\n\nK_tm.csr &lt;- envelope(childcare_tm_ppp, \n                     Kest, \n                     nsim = 99,\n                     rank = 1,\n                     glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(K_tm.csr, main = \"K-function for Tampines\", . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\nConclusion: The p-value is less than 0.001, which means we reject the null hypothesis. The distribution of childcare centres in Tampines is not random."
  },
  {
    "objectID": "HandsOnEx/Ex03/Ex03.html#analysis-using-l-function",
    "href": "HandsOnEx/Ex03/Ex03.html#analysis-using-l-function",
    "title": "Hands-on Exercise 3",
    "section": "Analysis using L-Function",
    "text": "Analysis using L-Function\nThe L-function measures the deviation of the observed point pattern from a completely random point pattern. It is defined as the ratio of the observed density of points to the expected density of points. We will use the Lest() function in the spatstat package to compute the L-function.\n\nChoa Chu Kang\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\n\nL_ck.csr &lt;- envelope(childcare_ck_ppp, \n                     Lest, \n                     nsim = 99,\n                     rank = 1,\n                     glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_ck.csr, main = \"L-function for Choa Chu Kang\", . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\nConclusion: The p-value is less than 0.001, which means we reject the null hypothesis. The distribution of childcare centres in Choa Chu Kang is not random.\n\n\nTampines\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\n\nL_tm.csr &lt;- envelope(childcare_tm_ppp, \n                     Lest, \n                     nsim = 99,\n                     rank = 1,\n                     glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))\n\n\n\n\n\n\n\n\nConclusion: The p-value is less than 0.001, which means we reject the null hypothesis. The distribution of childcare centres in Tampines is not random.\nThe analysis of 2nd order spatial point patterns using G, F, K, and L functions shows that the distribution of childcare centres in Choa Chu Kang and Tampines is not random. This could be due to the fact that childcare centres are more concentrated in areas with higher population density."
  },
  {
    "objectID": "HandsOnEx/Ex01/Ex01.html",
    "href": "HandsOnEx/Ex01/Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "HandsOnEx/Ex01/Ex01.html#getting-started",
    "href": "HandsOnEx/Ex01/Ex01.html#getting-started",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "HandsOnEx/Ex01/Ex01.html#import-geospatial-data",
    "href": "HandsOnEx/Ex01/Ex01.html#import-geospatial-data",
    "title": "Hands-on Exercise 1",
    "section": "Import Geospatial Data",
    "text": "Import Geospatial Data\nUse st_read for loading and parsing.\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n\ncyclingpath &lt;- st_read(dsn = \"data/geospatial\", \n                       layer = \"CyclingPathGazette\")\n\nProvide entire filepath for KML file.\n\npreschool &lt;- st_read(\"data/geospatial/PreSchoolsLocation.kml\")"
  },
  {
    "objectID": "HandsOnEx/Ex01/Ex01.html#checking-content-of-simple-data-frame",
    "href": "HandsOnEx/Ex01/Ex01.html#checking-content-of-simple-data-frame",
    "title": "Hands-on Exercise 1",
    "section": "Checking Content of Simple Data Frame",
    "text": "Checking Content of Simple Data Frame\nst_geometry prints basic information of the feature class\n\nst_geometry(mpsz)\n\nglimpse provides info on the data type of each fields\n\nglimpse(mpsz)\n\nhead shows the complete info of a feature object\n\nhead(mpsz, n=5)"
  },
  {
    "objectID": "HandsOnEx/Ex01/Ex01.html#plotting-geospatial-data",
    "href": "HandsOnEx/Ex01/Ex01.html#plotting-geospatial-data",
    "title": "Hands-on Exercise 1",
    "section": "Plotting Geospatial Data",
    "text": "Plotting Geospatial Data\nplot all attributes of mpsz\n\nplot(mpsz)\n\nplot only one attribute\n\nplot(mpsz[\"PLN_AREA_N\"])\n\nplot only geometry\n\nplot(st_geometry(mpsz))"
  },
  {
    "objectID": "HandsOnEx/Ex01/Ex01.html#coordinate-systems",
    "href": "HandsOnEx/Ex01/Ex01.html#coordinate-systems",
    "title": "Hands-on Exercise 1",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\n\nst_crs(mpsz)\n\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\nst_crs(mpsz3414)\n\n\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)"
  },
  {
    "objectID": "HandsOnEx/Ex01/Ex01.html#working-with-aspatial-data",
    "href": "HandsOnEx/Ex01/Ex01.html#working-with-aspatial-data",
    "title": "Hands-on Exercise 1",
    "section": "Working with Aspatial Data",
    "text": "Working with Aspatial Data\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\n\nlist(listings)\n\n\nlistings_sf &lt;- st_as_sf(listings, \n                        coords = c(\"longitude\", \"latitude\"),\n                        crs=4326) |&gt;\n  st_transform(crs = 3414)\nglimpse(listings_sf)"
  },
  {
    "objectID": "HandsOnEx/Ex01/Ex01.html#geoprocessing-with-sf",
    "href": "HandsOnEx/Ex01/Ex01.html#geoprocessing-with-sf",
    "title": "Hands-on Exercise 1",
    "section": "Geoprocessing with sf",
    "text": "Geoprocessing with sf\n\nBuffering\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, \n                            dist=5, nQuadSegs = 30)\n\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\nsum(buffer_cycling$AREA)\n\n\n\nPoint-in-polygon count\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\nsummary(mpsz3414$`PreSch Count`)\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\n\nmpsz3414$Area &lt;- mpsz3414 |&gt;\n  st_area()\nmpsz3414 &lt;- mpsz3414 |&gt;\n  mutate(`PreSch Density` = `PreSch Count` / Area * 1000000)"
  },
  {
    "objectID": "HandsOnEx/Ex01/Ex01.html#data-visualizations",
    "href": "HandsOnEx/Ex01/Ex01.html#data-visualizations",
    "title": "Hands-on Exercise 1",
    "section": "Data Visualizations",
    "text": "Data Visualizations\n\nhist(mpsz3414$`PreSch Density`)\n\n\nggplot(data=mpsz3414, \n       aes(x = as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle = \"There are many planning sub-zones with a single pre-school, on the other hand,   \\nthere are two planning sub-zones with at least 20 pre-schools\",\n       x = \"Pre-school density (per km sq)\",\n       y = \"Frequency\")\n\n\nggplot(data=mpsz3414, \n       aes(y =`PreSch Count`, \n           x = as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\",\n             na.rm=TRUE) +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n       x = \"Pre-school density (per km sq)\",\n       y = \"Pre-school count\")"
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html",
    "href": "HandsOnEx/Ex02/Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, tmap)"
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html#loading-packages",
    "href": "HandsOnEx/Ex02/Ex02.html#loading-packages",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, tmap)"
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html#import-geospatial-data",
    "href": "HandsOnEx/Ex02/Ex02.html#import-geospatial-data",
    "title": "Hands-on Exercise 2",
    "section": "Import Geospatial Data",
    "text": "Import Geospatial Data\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",\n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\n\n\n\nOutput Behaviour\n\n\n\nWhen we call mpsz, only the first 10 records are shown because the object is too large to be displayed in its entirety. By default, R only displays the first 10 records."
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html#import-attribute-data",
    "href": "HandsOnEx/Ex02/Ex02.html#import-attribute-data",
    "title": "Hands-on Exercise 2",
    "section": "Import Attribute Data",
    "text": "Import Attribute Data\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCalling spec on a dataframe displays its structure, including the data types of each column.\n\nspec(popdata)\n\ncols(\n  PA = col_character(),\n  SZ = col_character(),\n  AG = col_character(),\n  Sex = col_character(),\n  TOD = col_character(),\n  Pop = col_double(),\n  Time = col_double()\n)"
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html#data-preparation",
    "href": "HandsOnEx/Ex02/Ex02.html#data-preparation",
    "title": "Hands-on Exercise 2",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nData Wrangling\nAs part of data preparation, we will use: * pivot_wider to convert the data from long to wide format * mutate, filter, group_by and select to clean and filter the data\nWe do not need to import tidyr or dplyr because they are already loaded as part of the tidyverse package.\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from = AG, values_from = POP) %&gt;%\n  mutate(`YOUNG` = rowSums(.[3:6]) + rowSums(.[14])) %&gt;%\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+rowSums(.[15])) %&gt;%\n  mutate(`AGED` = rowSums(.[16:21])) %&gt;%\n  mutate(`TOTAL` = rowSums(.[3:21])) %&gt;%\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\nCode Analysis\n\n\n\n\n\nThe above code looks daunting, so let’s try to break down what it’s doing.\n\nFilter data for only year 2020 from the dataset\nGroup data by PA (Planning Area), SZ (Subzone), AG (Age Group). We use group_by to prepare data for summarization\nCalculate total population for each unique combination of PA, SZ, AG\nCall pivot_wider to transform data from long to wide. Resultingly, each unique value in AG becomes a new column, with POP values filling the cells. This creates a table where each row represents a unique PA-SZ combination, with columns for each age group\nCalculate new demographic variables (YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY)\nFinally, select columns for the output dataset; keeping only key demographic summary variables and identifiers\n\n\n\n\n\n\nMerging Geospatial and Attribute Data\nUsing mutate_at, we convert the PA and SZ columns to uppercase. This is to ensure consistency in the data before merging with the geospatial data. The .vars argument refers to the columns to be modified, while the .funs argument specifies the function applied.\n\npopdata2020 &lt;- popdata2020 |&gt;\n  mutate_at(.vars = vars(PA, SZ),\n            .funs = list(toupper)) |&gt;\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nNext, call left_join to join the geospatial data and attribute data on planning subzone name.\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nThe write_rds command saves the merged dataset as an RDS file for future loading.\n\nwrite_rds(mpsz_pop2020, \"data/mpsz_pop2020.rds\")"
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html#plotting-choropleth-maps",
    "href": "HandsOnEx/Ex02/Ex02.html#plotting-choropleth-maps",
    "title": "Hands-on Exercise 2",
    "section": "Plotting Choropleth Maps",
    "text": "Plotting Choropleth Maps\n\nHacky method of plotting choropleth maps\nThe first approach we can utilize is using qtm from the tmap package.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\nUsing tmap elements\nInstead of using qtm, we can use tm_shape and tm_fill to create a choropleth map. One advantage of this approach is the ability to customize the map layout and elements.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\nDrawing base map\ntm_polygons() can be used to show the base map without any fill. This may be useful when we want to show only the boundaries of the planning subzones.\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\nDrawing chloropleth map using tm_polygons()\nHere, we use tm_polygons() to draw a choropleth map based on the DEPENDENCY variable. The darker highlighted regions represent planning subzones with higher dependency ratios.\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\nDrawing chloropleth map using tm_fill()\nInstead of using tm_polygons(), we can use tm_fill() to draw the choropleth map. This function allows us to specify the fill color based on the DEPENDENCY variable. We might want to use fill over polygons when the boundaries are not the main focus of the map.\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\nDrawing chloropleth map with tm_borders()\nBy adding borders to the chloropleth map, we can better distinguish between planning subzones. The tm_borders() function allows us to customize the border line width and transparency.\nAside from line width and transparency, we can also specify the border color using the col argument.\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1, col = \"darkgreen\")"
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html#data-classifications",
    "href": "HandsOnEx/Ex02/Ex02.html#data-classifications",
    "title": "Hands-on Exercise 2",
    "section": "Data Classifications",
    "text": "Data Classifications\n\nUsing built-in methods\nWithout specifying the number of classes, tm_fill() will use the default classification method. In this case, it uses the quantile method to classify the data.\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\",\n          palette = \"plasma\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nDIY: Comparison of classification methods\nUsing what you had learned, prepare choropleth maps by using different classification methods supported by tmap and compare their differences. Prepare a grid showing the maps side by side of different tmap styles.\n\n# Create maps with different classification methods\nmap_fixed &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", style = \"fixed\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"Fixed\")\n\nmap_sd &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", style = \"sd\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"Standard Deviation\")\n\nmap_equal &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"Equal Interval\")\n\nmap_pretty &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", style = \"pretty\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"Pretty (Default)\")\n\nmap_quantile &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"Quantile\")\n\nmap_kmeans &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", style = \"kmeans\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"K-means\")\n\nmap_hclust &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", style = \"hclust\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"Hierarchical Clustering\")\n\nmap_bclust &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", style = \"bclust\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"Bagged Clustering\")\n\nmap_fisher &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", style = \"fisher\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"Fisher-Jenks\")\n\nmap_jenks &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", style = \"jenks\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"Jenks (Natural Breaks)\")\n\n\ntmap_arrange(map_hclust, map_bclust, map_fisher, map_jenks, ncol=2)\n\n\n\n\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\nWe can see from above that the different classification methods result in different choropleth maps. The choice of classification method can affect how the data is represented and interpreted.\nHere we are concerned with the distribution of dependency ratios. In my opinion, using the jenks classification method provides a clearer representation of the data distribution since it groups the data into classes based on natural breaks.\n\n\nDIY: Comparison of different numbered classes\nUsing the same dataset, prepare choropleth maps with different numbers of classes and compare their differences. Prepare a grid showing the maps side by side with different numbers of classes.\n\n# Create maps with different number of classes\nmap_2c &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", n = 3, style = \"pretty\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"2 Classes\")\n\nmap_6c &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", n = 4, style = \"pretty\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"6 Classes\")\n\nmap_10c &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", n = 5, style = \"pretty\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"10 Classes\")\n\nmap_20c &lt;- tm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", n = 10, style = \"pretty\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(title = \"20 Classes\")\n\n\ntmap_arrange(map_2c, map_6c, map_10c, map_20c, ncol=2)\n\n\n\n\n\n\n\n\nWhen we add more classes, the map becomes more detailed, but it may also become harder to interpret. The map with 2 classes is too simplistic, while the map with 20 classes is too detailed to tell the finer differences between the colors on the map.\n\n\nUsing custom breaks\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break"
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html#color-schemes",
    "href": "HandsOnEx/Ex02/Ex02.html#color-schemes",
    "title": "Hands-on Exercise 2",
    "section": "Color Schemes",
    "text": "Color Schemes\n\nExploring Color Palettes\nRunning the code chunk below opens an interactive Shiny app that allows you to explore different color palettes offered by default in RColorBrewer.\nKnowing what color palettes are available can help you choose the most appropriate one for your data visualization. For example, some of the best color palettes to use to when presenting data to colorblind individuals are viridis, cividis, and colorblind.\n\n# pacman::p_load(shiny, shinyjs)\n# \n# tmaptools::palette_explorer()\n\n\n\nColorBrewer Palette\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nReverse ColorBrewer Palette\nAdding the reverse argument to the palette parameter will reverse the color scheme. This can be useful to highlight the highest values with a lighter color.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nViridis Palette\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"viridis\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html#map-layouts",
    "href": "HandsOnEx/Ex02/Ex02.html#map-layouts",
    "title": "Hands-on Exercise 2",
    "section": "Map Layouts",
    "text": "Map Layouts\n\nAdding Map Legend\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nMap Style\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"natural\")\n\ntmap style set to \"natural\"\n\n\nother available styles are: \"white\", \"gray\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\n\n\n\n\n\n\nAdding Scale Bar\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tm_scale_bar(width = 0.15)\n\n\n\n\n\n\n\n\n\n\nCartographic Elements\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html#plotting-multiple-chloropleth-maps",
    "href": "HandsOnEx/Ex02/Ex02.html#plotting-multiple-chloropleth-maps",
    "title": "Hands-on Exercise 2",
    "section": "Plotting Multiple Chloropleth Maps",
    "text": "Plotting Multiple Chloropleth Maps\nHere, we are plotting 2 maps side by side to represent the distribution of young and aged populations in planning subzones.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\n\n\n\n\n\nDefining group_by variable in tm_facets()\nHere, we use the tm_facets() function to create maps for each region in Singapore.\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\n\n\n\n\n\n\nUsing tm_arrange()\nInstead of using tm_facets(), we can use tm_arrange() to create multiple maps side by side. This function allows us to arrange maps in a grid layout.\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "HandsOnEx/Ex02/Ex02.html#mapping-spatial-object-based-on-selection-criterion",
    "href": "HandsOnEx/Ex02/Ex02.html#mapping-spatial-object-based-on-selection-criterion",
    "title": "Hands-on Exercise 2",
    "section": "Mapping Spatial Object based on Selection Criterion",
    "text": "Mapping Spatial Object based on Selection Criterion\nWhat we are trying to do here is to plot a choropleth map of the Central Region based on the dependency ratio. The legend is a histogram that shows the distribution of dependency ratios in the region.\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N == \"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend"
  },
  {
    "objectID": "HandsOnEx/Ex05/Ex05.html",
    "href": "HandsOnEx/Ex05/Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "Spatial weights are used to represent the spatial relationships between observations in a study area. In this exercise, we explore:"
  },
  {
    "objectID": "HandsOnEx/Ex05/Ex05.html#getting-started",
    "href": "HandsOnEx/Ex05/Ex05.html#getting-started",
    "title": "Hands-on Exercise 5",
    "section": "Getting Started",
    "text": "Getting Started\nWe’ve worked with sf, tmap, tidyverse and knitr. Introduced in this exercise, we will be using the spdep package to compute spatial weights.\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "HandsOnEx/Ex05/Ex05.html#import-geospatial-data",
    "href": "HandsOnEx/Ex05/Ex05.html#import-geospatial-data",
    "title": "Hands-on Exercise 5",
    "section": "Import Geospatial Data",
    "text": "Import Geospatial Data\n\nhunan &lt;- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nhunan &lt;- left_join(hunan, hunan2012) |&gt;\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\n\n\n\n\n\n\nAbout Relational Join\n\n\n\n\n\nThe left_join function is used to merge the hunan and hunan2012 datasets. It is implied that the “County” column is the key column used to merge the datasets.\nAll rows from the hunan dataset are kept, and matching rows from the hunan2012 dataset are added to the merged dataset.\nThe result is a spatial dataset that includes additional attribute data from hunan2012. The output retains geometry from the original hunan dataset but adds socio-economic data from hunan2012.\n\n\n\n\nhunan\n\nSimple feature collection with 88 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734..."
  },
  {
    "objectID": "HandsOnEx/Ex05/Ex05.html#visualizing-regional-development-indicator",
    "href": "HandsOnEx/Ex05/Ex05.html#visualizing-regional-development-indicator",
    "title": "Hands-on Exercise 5",
    "section": "Visualizing Regional Development Indicator",
    "text": "Visualizing Regional Development Indicator\nStart by preparing a basemap and a chropleth map that shows the distribution of GDPPC 2012 using qtm() of the tmap package.\nOn the left, we have divided the map into polygons which represent the counties in Hunan. The right map shows the distribution of GDPPC 2012 across the counties in Hunan. We choose the YlOrRd palette that consists of only Yellow, Orange and Red colors; with darker shades representing higher GDPPC values.\nFor better visualization, we add breaks of 0 to 100k in intervals of 20k.\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.25)\n\ngdppc &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\", \n          breaks = c(0, 20000, 40000, 60000, 80000, 100000),\n          palette = \"YlOrRd\",\n          title = \"GDPPC\") +\n  tm_borders(alpha = 0.5) + \n  tm_layout(legend.text.size = 0.4,\n            legend.title.size = 0.6)\n\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "HandsOnEx/Ex05/Ex05.html#computing-contiguity-spatial-weights",
    "href": "HandsOnEx/Ex05/Ex05.html#computing-contiguity-spatial-weights",
    "title": "Hands-on Exercise 5",
    "section": "Computing Contiguity Spatial Weights",
    "text": "Computing Contiguity Spatial Weights\nThis section focuses on using poly2nb to compute contiguity spatial weights for a study area. This function is used to create a spatial weights matrix based on polygon contiguity. The queen option is used to specify that the spatial weights matrix should be based on queen contiguity.\n\nComputing (QUEEN) Contiguity Based Neighbors\n\nwm_q &lt;- poly2nb(hunan, queen = TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary shows that there are 88 area units in Hunan, with the most connected area unit having 11 neighbors. The average number of links of 5.0909 seems to suggest that the average area unit in Hunan has 5 neighbors.\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\nPolygon 1 has 5 neighbors. The numbers represent the polygon IDs stored in hunan SpatialPolygonsDataFrame class.\nWe can use the $ operator for indexing the County column of Polygon 1.\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\n\nhunan$NAME_3[c(2, 3, 4, 57, 85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nThe output above shows the GDPPC of five nearest neighbors based on Queen’s method for the first polygon.\nThe complete weight matrix can be displayed using str(). It shows how many neighbors each polygon has.\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\n\nCreating (ROOK) Contiguity Based Neighbors\nThe difference between the Queen and Rook method is that the Rook method only considers polygons that share an edge.\n\nwm_r &lt;- poly2nb(hunan, queen = FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\n\n\nVisualizing Contiguity Weights\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\n\n\n\n\n\nAbout Coordinates\n\n\n\nThe code uses st_centroid() to calculate the centroid of polygons. This is a crucial operation as it allows us to represent complex shapes with a single point.\nThe cbind() function combines longitude and latitude into a single coordinate matrix. This matrix is used to plot the spatial weights matrix on the map.\n\n\n\n\nPlotting Queen Contiguity Weights\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\n\n\n\n\nPlotting Rook Contiguity Weights\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\n\n\nPlotting Queen and Rook Contiguity Weights\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\nThe maps we have plotted above are a visual representation of the spatial weights matrix. The red dots represent the neighbors of each polygon in the study area. The Queen contiguity spatial weights matrix is based on the number of shared edges between polygons, while the Rook contiguity spatial weights matrix is based on the number of shared vertices between polygons."
  },
  {
    "objectID": "HandsOnEx/Ex05/Ex05.html#computing-distance-based-neighbors",
    "href": "HandsOnEx/Ex05/Ex05.html#computing-distance-based-neighbors",
    "title": "Hands-on Exercise 5",
    "section": "Computing Distance Based Neighbors",
    "text": "Computing Distance Based Neighbors\nIn order to determine the upper limit for distance band:\n\nReturn a matrix with indices of points belonging to the set of k nearest neighbors using knearneigh() from the spdep package.\nConvert the matrix to a neighbor list object using knn2nb().\nReturn length of neighbor relationship edges using nbdists() from the spdep package.\nRemove list structure using unlist() and summarize the results.\n\n\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\nComputing Fixed Distance Weight Matrix\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nQuiz: On average, each point in the dataset is connected to approximately 3.68 other points within the specified distance band of 0 to 62 units.\nWe calculate this number by dividing the total number of links (324) by the number of regions (88). 324 / 88 ≈ 3.681818\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nAlternatively, combine table() and card() to count the number of neighbors for each polygon.\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\nWe use the n.comp.nb() function to determine the number of connected components in the spatial weights matrix.\n\nn_comp &lt;- n.comp.nb(wm_d62)\nn_comp$nc\n\n[1] 1\n\n\nOur result of 1 connected component means all regions in our study area are interconnected within the specified distance band. There are no isolated regions or subgroups.\nThis suggests a continuous spatial structure where it’s possible to traverse from any region to any other region through the defined neighbor relationships.\n\ntable(n_comp$comp.id)\n\n\n 1 \n88 \n\n\n\n\nPlotting Fixed Distance Weight Matrix\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\n\n\n\n\nPlot the 1st nearest neighbors and the distance link on the same map.\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(hunan$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)\n\n\n\n\n\n\n\n\n\n\nComputing Adaptive Distance Weight Matrix\nThe fixed distance weight matrix indicates densely settled areas tend to have more neighbors than less densely settled areas. We can control the number of neighbors directly using k-nearest neighbors, either accepting asymmetric neighbors or imposing symmetry.\n\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\nNotice that knn6 is a non-symmetric neighbors list, which means the neighbors of each polygon are not the same.\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\nBecause of our specifications above, each county has exactly 6 neighbors.\n\n\nPlotting Distance Based Neighbors\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "HandsOnEx/Ex05/Ex05.html#weights-based-on-idw",
    "href": "HandsOnEx/Ex05/Ex05.html#weights-based-on-idw",
    "title": "Hands-on Exercise 5",
    "section": "Weights based on IDW",
    "text": "Weights based on IDW\nThe spatial weight matrix can also be derived from the inverse of the distance between points. This is known as the Inverse Distance Weighting (IDW) method.\n\ndist &lt;- nbdists(wm_q, coords, longlat = TRUE)\nids &lt;- lapply(dist, function(x) 1/(x))\nids\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n[[2]]\n[1] 0.01535405 0.01764308 0.01925924 0.02323898 0.01719350\n\n[[3]]\n[1] 0.03916350 0.02822040 0.03695795 0.01395765\n\n[[4]]\n[1] 0.01820896 0.02822040 0.03414741 0.01539065\n\n[[5]]\n[1] 0.03695795 0.03414741 0.01524598 0.01618354\n\n[[6]]\n[1] 0.015390649 0.015245977 0.021748129 0.011883901 0.009810297\n\n[[7]]\n[1] 0.01708612 0.01473997 0.01150924 0.01872915\n\n[[8]]\n[1] 0.02022144 0.03453056 0.02529256 0.01036340 0.02284457 0.01500600 0.01515314\n\n[[9]]\n[1] 0.02022144 0.01574888 0.02109502 0.01508028 0.02902705 0.01502980\n\n[[10]]\n[1] 0.02281552 0.01387777 0.01538326 0.01346650 0.02100510 0.02631658 0.01874863\n[8] 0.01500046\n\n[[11]]\n[1] 0.01882869 0.02243492 0.02247473\n\n[[12]]\n[1] 0.02779227 0.02419652 0.02333385 0.02986130 0.02335429\n\n[[13]]\n[1] 0.02779227 0.02650020 0.02670323 0.01714243\n\n[[14]]\n[1] 0.01882869 0.01233868 0.02098555\n\n[[15]]\n[1] 0.02650020 0.01233868 0.01096284 0.01562226\n\n[[16]]\n[1] 0.02281552 0.02466962 0.02765018 0.01476814 0.01671430\n\n[[17]]\n[1] 0.01387777 0.02243492 0.02098555 0.01096284 0.02466962 0.01593341 0.01437996\n\n[[18]]\n[1] 0.02039779 0.02032767 0.01481665 0.01473691 0.01459380\n\n[[19]]\n[1] 0.01538326 0.01926323 0.02668415 0.02140253 0.01613589 0.01412874\n\n[[20]]\n[1] 0.01346650 0.02039779 0.01926323 0.01723025 0.02153130 0.01469240 0.02327034\n\n[[21]]\n[1] 0.02668415 0.01723025 0.01766299 0.02644986 0.02163800\n\n[[22]]\n[1] 0.02100510 0.02765018 0.02032767 0.02153130 0.01489296\n\n[[23]]\n[1] 0.01481665 0.01469240 0.01401432 0.02246233 0.01880425 0.01530458 0.01849605\n\n[[24]]\n[1] 0.02354598 0.01837201 0.02607264 0.01220154 0.02514180\n\n[[25]]\n[1] 0.02354598 0.02188032 0.01577283 0.01949232 0.02947957\n\n[[26]]\n[1] 0.02155798 0.01745522 0.02212108 0.02220532\n\n[[27]]\n[1] 0.02155798 0.02490625 0.01562326\n\n[[28]]\n[1] 0.01837201 0.02188032 0.02229549 0.03076171 0.02039506\n\n[[29]]\n[1] 0.02490625 0.01686587 0.01395022\n\n[[30]]\n[1] 0.02090587\n\n[[31]]\n[1] 0.02607264 0.01577283 0.01219005 0.01724850 0.01229012 0.01609781 0.01139438\n[8] 0.01150130\n\n[[32]]\n[1] 0.01220154 0.01219005 0.01712515 0.01340413 0.01280928 0.01198216 0.01053374\n[8] 0.01065655\n\n[[33]]\n[1] 0.01949232 0.01745522 0.02229549 0.02090587 0.01979045\n\n[[34]]\n[1] 0.03113041 0.03589551 0.02882915\n\n[[35]]\n[1] 0.01766299 0.02185795 0.02616766 0.02111721 0.02108253 0.01509020\n\n[[36]]\n[1] 0.01724850 0.03113041 0.01571707 0.01860991 0.02073549 0.01680129\n\n[[37]]\n[1] 0.01686587 0.02234793 0.01510990 0.01550676\n\n[[38]]\n[1] 0.01401432 0.02407426 0.02276151 0.01719415\n\n[[39]]\n[1] 0.01229012 0.02172543 0.01711924 0.02629732 0.01896385\n\n[[40]]\n[1] 0.01609781 0.01571707 0.02172543 0.01506473 0.01987922 0.01894207\n\n[[41]]\n[1] 0.02246233 0.02185795 0.02205991 0.01912542 0.01601083 0.01742892\n\n[[42]]\n[1] 0.02212108 0.01562326 0.01395022 0.02234793 0.01711924 0.01836831 0.01683518\n\n[[43]]\n[1] 0.01510990 0.02629732 0.01506473 0.01836831 0.03112027 0.01530782\n\n[[44]]\n[1] 0.01550676 0.02407426 0.03112027 0.01486508\n\n[[45]]\n[1] 0.03589551 0.01860991 0.01987922 0.02205991 0.02107101 0.01982700\n\n[[46]]\n[1] 0.03453056 0.04033752 0.02689769\n\n[[47]]\n[1] 0.02529256 0.02616766 0.04033752 0.01949145 0.02181458\n\n[[48]]\n[1] 0.02313819 0.03370576 0.02289485 0.01630057 0.01818085\n\n[[49]]\n[1] 0.03076171 0.02138091 0.02394529 0.01990000\n\n[[50]]\n[1] 0.01712515 0.02313819 0.02551427 0.02051530 0.02187179\n\n[[51]]\n[1] 0.03370576 0.02138091 0.02873854\n\n[[52]]\n[1] 0.02289485 0.02394529 0.02551427 0.02873854 0.03516672\n\n[[53]]\n[1] 0.01630057 0.01979945 0.01253977\n\n[[54]]\n[1] 0.02514180 0.02039506 0.01340413 0.01990000 0.02051530 0.03516672\n\n[[55]]\n[1] 0.01280928 0.01818085 0.02187179 0.01979945 0.01882298\n\n[[56]]\n[1] 0.01036340 0.01139438 0.01198216 0.02073549 0.01214479 0.01362855 0.01341697\n\n[[57]]\n[1] 0.028079221 0.017643082 0.031423501 0.029114131 0.013520292 0.009903702\n\n[[58]]\n[1] 0.01925924 0.03142350 0.02722997 0.01434859 0.01567192\n\n[[59]]\n[1] 0.01696711 0.01265572 0.01667105 0.01785036\n\n[[60]]\n[1] 0.02419652 0.02670323 0.01696711 0.02343040\n\n[[61]]\n[1] 0.02333385 0.01265572 0.02343040 0.02514093 0.02790764 0.01219751 0.02362452\n\n[[62]]\n[1] 0.02514093 0.02002219 0.02110260\n\n[[63]]\n[1] 0.02986130 0.02790764 0.01407043 0.01805987\n\n[[64]]\n[1] 0.02911413 0.01689892\n\n[[65]]\n[1] 0.02471705\n\n[[66]]\n[1] 0.01574888 0.01726461 0.03068853 0.01954805 0.01810569\n\n[[67]]\n[1] 0.01708612 0.01726461 0.01349843 0.01361172\n\n[[68]]\n[1] 0.02109502 0.02722997 0.03068853 0.01406357 0.01546511\n\n[[69]]\n[1] 0.02174813 0.01645838 0.01419926\n\n[[70]]\n[1] 0.02631658 0.01963168 0.02278487\n\n[[71]]\n[1] 0.01473997 0.01838483 0.03197403\n\n[[72]]\n[1] 0.01874863 0.02247473 0.01476814 0.01593341 0.01963168\n\n[[73]]\n[1] 0.01500046 0.02140253 0.02278487 0.01838483 0.01652709\n\n[[74]]\n[1] 0.01150924 0.01613589 0.03197403 0.01652709 0.01342099 0.02864567\n\n[[75]]\n[1] 0.011883901 0.010533736 0.012539774 0.018822977 0.016458383 0.008217581\n\n[[76]]\n[1] 0.01352029 0.01434859 0.01689892 0.02471705 0.01954805 0.01349843 0.01406357\n\n[[77]]\n[1] 0.014736909 0.018804247 0.022761507 0.012197506 0.020022195 0.014070428\n[7] 0.008440896\n\n[[78]]\n[1] 0.02323898 0.02284457 0.01508028 0.01214479 0.01567192 0.01546511 0.01140779\n\n[[79]]\n[1] 0.01530458 0.01719415 0.01894207 0.01912542 0.01530782 0.01486508 0.02107101\n\n[[80]]\n[1] 0.01500600 0.02882915 0.02111721 0.01680129 0.01601083 0.01982700 0.01949145\n[8] 0.01362855\n\n[[81]]\n[1] 0.02947957 0.02220532 0.01150130 0.01979045 0.01896385 0.01683518\n\n[[82]]\n[1] 0.02327034 0.02644986 0.01849605 0.02108253 0.01742892\n\n[[83]]\n[1] 0.023354289 0.017142433 0.015622258 0.016714303 0.014379961 0.014593799\n[7] 0.014892965 0.018059871 0.008440896\n\n[[84]]\n[1] 0.01872915 0.02902705 0.01810569 0.01361172 0.01342099 0.01297994\n\n[[85]]\n [1] 0.011451133 0.017193502 0.013957649 0.016183544 0.009810297 0.010656545\n [7] 0.013416965 0.009903702 0.014199260 0.008217581 0.011407794\n\n[[86]]\n[1] 0.01515314 0.01502980 0.01412874 0.02163800 0.01509020 0.02689769 0.02181458\n[8] 0.02864567 0.01297994\n\n[[87]]\n[1] 0.01667105 0.02362452 0.02110260 0.02058034\n\n[[88]]\n[1] 0.01785036 0.02058034\n\n\n\n\n\n\n\n\nTobler’s First Law of Geography\n\n\n\n\n\nThe IDW is based on the principle that the influence of one area on another decreases as the distance between them increases. This is a fundamental concept in geography often referred to as Tobler’s First Law of Geography: “Everything is related to everything else, but near things are more related than distant things.”\n\n\n\n\n\n\n\n\n\nChoosing the Right Weighting Method\n\n\n\n\n\nWe’ve learnt about Queen/Rook contiguity, as well as IDW. But how do we choose what to use?\nQueen/Rook contiguity\n\nNature of Spatial Relationships: Best for immediate neighbor interactions, suitable for distinct boundaries or administrative units.\nData Type: Works with polygon data, requires shared boundaries.\nScale of Analysis: More suited for local analyses, may be limiting for larger areas.\nComputational Considerations: Simpler and faster to compute, results in sparse matrices.\nInterpretability: Easy to interpret and explain, clearly defined “neighbor” relationships.\nResearch Questions: Useful for immediate neighborhood effects, good for spatial autocorrelation in discrete units\n\nInverse Distance Weighting\n\nNature of Spatial Relationships: Appropraite for gradually decreasing influence with distance, better for continuous phenomena or long-range interactions.\nData Type: Can be used with point and polygon data, no need for shared boundaries.\nScale of Analysis: Multi-scale analysis, better for capturing regional trends\nComputational Considerations: Intensive for large datasets, results in dense matrices\nInterpretability: More complex to interpet, allows varying degrees of influence\nResearch Questions: Better for gradual spatial processes, suitable for interpolation and smooth surface analyses"
  },
  {
    "objectID": "HandsOnEx/Ex05/Ex05.html#row-standardized-spatial-weights-matrix",
    "href": "HandsOnEx/Ex05/Ex05.html#row-standardized-spatial-weights-matrix",
    "title": "Hands-on Exercise 5",
    "section": "Row-standardized Spatial Weights Matrix",
    "text": "Row-standardized Spatial Weights Matrix\nTo create a row-standardized spatial weights matrix, we use the nb2listw() function with the style argument set to “W”. This ensures that the sum of the weights for each row is equal to 1.\n\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nView the weight of the first polygon’s eight neighbor types:\n\nrswm_q$weights[10]\n\n[[1]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n\nEach neighbor is assigned an equal proportion of 0.125. This means that each neighbor’s income will be multipled by 0.125 before being tallied.\n\nrswm_ids &lt;- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\nrswm_ids\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn       S0        S1     S2\nB 88 7744 8.786867 0.3776535 3.8137\n\n\n\nrswm_ids$weights[1]\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n\n\nsummary(unlist(rswm_ids$weights))\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.008218 0.015088 0.018739 0.019614 0.022823 0.040338 \n\n\n\nSpatial Lag with Row-standardized Weights\nSpatial lagged variables can be created:\n\nRow-standardized weights\nSum of neighboring values\nSpatial window average\nSpatial window sum\n\n\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nQuestion: Can you see the meaning of the Spatial lag? Spatial lag is the weighted average of the neighboring values. It is calculated by multiplying the value of each neighbor by the corresponding weight and summing the results.\n\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan,lag.res)\n\nJoining with `by = join_by(NAME_3)`\n\n\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\n\ngdppc &lt;- qtm(hunan, \"GDPPC\") +\n  tm_layout(legend.text.size = 0.6,\n            legend.title.size = 0.6)\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\") +\n  tm_layout(legend.text.size = 0.6,\n            legend.title.size = 0.6)\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\nSpatial Lag as sum of neighboring values\nWe calculate spatial lag as a sum by assigning binary weights. This requires us to create a list of binary weights for each neighbor.\nStart by using lapply that assigns a weight of 1 to each neighbor.\n\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\n\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\n\n\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\nQuestion: Can you understand the meaning of lag as a sum of neighboring values now? After assigning binary weights to each neighbor, the spatial lag is calculated as the sum of neighboring values. This is done by adding the values of each neighbor together.\n\nhunan &lt;- left_join(hunan, lag.res)\n\nJoining with `by = join_by(NAME_3)`\n\n\n\ngdppc &lt;- qtm(hunan, \"GDPPC\") +\n  tm_layout(legend.text.size = 0.6,\n            legend.title.size = 0.6)\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\") +\n  tm_layout(legend.text.size = 0.6,\n            legend.title.size = 0.6)\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\nSpatial Window Average\n\nwm_qs &lt;- include.self(wm_q)\n\n\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\n\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\n\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\n\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\n\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\nJoining with `by = join_by(NAME_3)`\n\n\n\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nWe can plot the lag_GDPPC and w_avg_gdppc side by side for comparison.\n\nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\") +\n  tm_layout(legend.text.size = 0.6,\n            legend.title.size = 0.6)\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\nSpatial Window Sum\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\n\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\n\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\n\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\n\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\n\n\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\nJoining with `by = join_by(NAME_3)`\n\n\n\nhunan %&gt;%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\") +\n  tm_layout(legend.text.size = 0.6,\n            legend.title.size = 0.6)\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "HandsOnEx/Ex05/Ex05.html#final-reflections",
    "href": "HandsOnEx/Ex05/Ex05.html#final-reflections",
    "title": "Hands-on Exercise 5",
    "section": "Final Reflections",
    "text": "Final Reflections\nIn this exercise, we learned how to compute spatial weights using the spdep package. We explored different methods to calculate spatial weights, including contiguity-based neighbors, distance-based neighbors, and inverse distance weighting. We also learned how to create spatially lagged variables using row-standardized spatial weights matrices. These spatially lagged variables can be used to analyze spatial autocorrelation and spatial patterns in geospatial data."
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html",
    "href": "HandsOnEx/Ex08/Ex08.html",
    "title": "Hands-on Exercise 8",
    "section": "",
    "text": "pacman::p_load(BiocManager, rgdal, spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\nInstalling package into 'C:/Users/yeoba/AppData/Local/R/win-library/4.4'\n(as 'lib' is unspecified)\n\n\nWarning: package 'rgdal' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'rgdal'\n\n\nWarning in pacman::p_load(BiocManager, rgdal, spdep, tmap, sf, ClustGeo, : Failed to install/load:\nrgdal\n\n\n\nshan_sf &lt;- st_read(dsn = \"data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\Users\\yeoba\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\n\nshan_sf\n\nSimple feature collection with 55 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 96.15107 ymin: 19.29932 xmax: 101.1699 ymax: 24.15907\nGeodetic CRS:  WGS 84\nFirst 10 features:\n             ST ST_PCODE       DT   DT_PCODE        TS  TS_PCODE\n1  Shan (North)   MMR015  Mongmit MMR015D008   Mongmit MMR015017\n2  Shan (South)   MMR014 Taunggyi MMR014D001   Pindaya MMR014006\n3  Shan (South)   MMR014 Taunggyi MMR014D001   Ywangan MMR014007\n4  Shan (South)   MMR014 Taunggyi MMR014D001  Pinlaung MMR014009\n5  Shan (North)   MMR015  Mongmit MMR015D008    Mabein MMR015018\n6  Shan (South)   MMR014 Taunggyi MMR014D001     Kalaw MMR014005\n7  Shan (South)   MMR014 Taunggyi MMR014D001     Pekon MMR014010\n8  Shan (South)   MMR014 Taunggyi MMR014D001  Lawksawk MMR014008\n9  Shan (North)   MMR015  Kyaukme MMR015D003 Nawnghkio MMR015013\n10 Shan (North)   MMR015  Kyaukme MMR015D003   Kyaukme MMR015012\n                         geometry\n1  MULTIPOLYGON (((96.96001 23...\n2  MULTIPOLYGON (((96.7731 21....\n3  MULTIPOLYGON (((96.78483 21...\n4  MULTIPOLYGON (((96.49518 20...\n5  MULTIPOLYGON (((96.66306 24...\n6  MULTIPOLYGON (((96.49518 20...\n7  MULTIPOLYGON (((97.14738 19...\n8  MULTIPOLYGON (((96.94981 22...\n9  MULTIPOLYGON (((96.75648 22...\n10 MULTIPOLYGON (((96.95498 22...\n\n\n\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\nRows: 55 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): District Pcode, District Name, Township Pcode, Township Name\ndbl (7): Total households, Radio, Television, Land line phone, Mobile phone,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsummary(ict)\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#loading-packages",
    "href": "HandsOnEx/Ex08/Ex08.html#loading-packages",
    "title": "Hands-on Exercise 8",
    "section": "",
    "text": "pacman::p_load(BiocManager, rgdal, spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\nInstalling package into 'C:/Users/yeoba/AppData/Local/R/win-library/4.4'\n(as 'lib' is unspecified)\n\n\nWarning: package 'rgdal' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'rgdal'\n\n\nWarning in pacman::p_load(BiocManager, rgdal, spdep, tmap, sf, ClustGeo, : Failed to install/load:\nrgdal\n\n\n\nshan_sf &lt;- st_read(dsn = \"data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\Users\\yeoba\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\n\nshan_sf\n\nSimple feature collection with 55 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 96.15107 ymin: 19.29932 xmax: 101.1699 ymax: 24.15907\nGeodetic CRS:  WGS 84\nFirst 10 features:\n             ST ST_PCODE       DT   DT_PCODE        TS  TS_PCODE\n1  Shan (North)   MMR015  Mongmit MMR015D008   Mongmit MMR015017\n2  Shan (South)   MMR014 Taunggyi MMR014D001   Pindaya MMR014006\n3  Shan (South)   MMR014 Taunggyi MMR014D001   Ywangan MMR014007\n4  Shan (South)   MMR014 Taunggyi MMR014D001  Pinlaung MMR014009\n5  Shan (North)   MMR015  Mongmit MMR015D008    Mabein MMR015018\n6  Shan (South)   MMR014 Taunggyi MMR014D001     Kalaw MMR014005\n7  Shan (South)   MMR014 Taunggyi MMR014D001     Pekon MMR014010\n8  Shan (South)   MMR014 Taunggyi MMR014D001  Lawksawk MMR014008\n9  Shan (North)   MMR015  Kyaukme MMR015D003 Nawnghkio MMR015013\n10 Shan (North)   MMR015  Kyaukme MMR015D003   Kyaukme MMR015012\n                         geometry\n1  MULTIPOLYGON (((96.96001 23...\n2  MULTIPOLYGON (((96.7731 21....\n3  MULTIPOLYGON (((96.78483 21...\n4  MULTIPOLYGON (((96.49518 20...\n5  MULTIPOLYGON (((96.66306 24...\n6  MULTIPOLYGON (((96.49518 20...\n7  MULTIPOLYGON (((97.14738 19...\n8  MULTIPOLYGON (((96.94981 22...\n9  MULTIPOLYGON (((96.75648 22...\n10 MULTIPOLYGON (((96.95498 22...\n\n\n\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\nRows: 55 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): District Pcode, District Name, Township Pcode, Township Name\ndbl (7): Total households, Radio, Television, Land line phone, Mobile phone,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsummary(ict)\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#penetration-rate",
    "href": "HandsOnEx/Ex08/Ex08.html#penetration-rate",
    "title": "Hands-on Exercise 8",
    "section": "Penetration Rate",
    "text": "Penetration Rate\n\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\nsummary(ict_derived)\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#exploratory-data-analysis",
    "href": "HandsOnEx/Ex08/Ex08.html#exploratory-data-analysis",
    "title": "Hands-on Exercise 8",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\n\n\n\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\n\n\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\n\n\n\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\n\n\n\nradio &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\nprint(radio)\n\n\n\n\n\n\n\n\n\ntv &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\nprint(tv)\n\n\n\n\n\n\n\n\n\nllphone &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\nprint(llphone)\n\n\n\n\n\n\n\n\n\nmphone &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\nprint(mphone)\n\n\n\n\n\n\n\n\n\ncomputer &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\nprint(computer)\n\n\n\n\n\n\n\n\n\ninternet &lt;- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\nprint(internet)"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#choropleth-maps",
    "href": "HandsOnEx/Ex08/Ex08.html#choropleth-maps",
    "title": "Hands-on Exercise 8",
    "section": "Choropleth Maps",
    "text": "Choropleth Maps\nCombining both data.\n\nshan_sf &lt;- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n  \nwrite_rds(shan_sf, \"data/rds/shan_sf.rds\")\n\n\nshan_sf &lt;- read_rds(\"data/rds/shan_sf.rds\")\n\n\nqtm(shan_sf, \"RADIO_PR\")\n\n\n\n\n\n\n\n\n\nTT_HOUSEHOLDS.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Number Radio \") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n\n\n\n\n\n\n\n\n\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#correlation-analysis",
    "href": "HandsOnEx/Ex08/Ex08.html#correlation-analysis",
    "title": "Hands-on Exercise 8",
    "section": "Correlation Analysis",
    "text": "Correlation Analysis\n\ncluster_vars.cor = cor(ict_derived[,12:17])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#hierarchy-cluster-analysis",
    "href": "HandsOnEx/Ex08/Ex08.html#hierarchy-cluster-analysis",
    "title": "Hands-on Exercise 8",
    "section": "Hierarchy Cluster Analysis",
    "text": "Hierarchy Cluster Analysis\n\ncluster_vars &lt;- shan_sf %&gt;%\n  st_set_geometry(NULL) %&gt;%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\nhead(cluster_vars,10)\n\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\n2    Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\n3    Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\n4   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\n5     Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\n6      Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\n7      Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\n8   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\n9  Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\n10   Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\nNotice that the final clustering variables list does not include variable INTERNET_PR because it is highly correlated with variable COMPUTER_PR.\n\nrow.names(cluster_vars) &lt;- cluster_vars$\"TS.x\"\nhead(cluster_vars,10)\n\n               TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit     Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya     Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan     Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\nMabein       Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw         Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\nPekon         Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme     Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\nrow.names(cluster_vars) &lt;- cluster_vars$\"TS.x\"\nhead(cluster_vars,10)\n\n               TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit     Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya     Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan     Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\nMabein       Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw         Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\nPekon         Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme     Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\nshan_ict &lt;- select(cluster_vars, c(2:6))\nhead(shan_ict, 10)\n\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya   417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan   484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung  231.6499 541.7189   28.54454  249.4903    13.76255\nMabein    449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw     280.7624 611.6204   42.06478  408.7951    29.63160\nPekon     318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk  387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme   210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\nshan_ict.std &lt;- normalize(shan_ict)\nsummary(shan_ict.std)\n\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#min-max-standardization",
    "href": "HandsOnEx/Ex08/Ex08.html#min-max-standardization",
    "title": "Hands-on Exercise 8",
    "section": "Min-max standardization",
    "text": "Min-max standardization\n\nshan_ict.std &lt;- normalize(shan_ict)\nsummary(shan_ict.std)\n\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#z-score-standardization",
    "href": "HandsOnEx/Ex08/Ex08.html#z-score-standardization",
    "title": "Hands-on Exercise 8",
    "section": "Z-score standardization",
    "text": "Z-score standardization\n\nshan_ict.z &lt;- scale(shan_ict)\ndescribe(shan_ict.z)\n\n            vars  n mean sd median trimmed  mad   min  max range  skew kurtosis\nRADIO_PR       1 55    0  1  -0.04   -0.06 0.94 -1.85 2.55  4.40  0.48    -0.27\nTV_PR          2 55    0  1   0.05    0.04 0.78 -2.47 2.09  4.56 -0.38    -0.23\nLLPHONE_PR     3 55    0  1  -0.33   -0.15 0.68 -1.19 3.20  4.39  1.37     1.49\nMPHONE_PR      4 55    0  1  -0.05   -0.06 1.01 -1.58 2.40  3.98  0.48    -0.34\nCOMPUTER_PR    5 55    0  1  -0.26   -0.18 0.64 -1.03 3.31  4.34  1.80     2.96\n              se\nRADIO_PR    0.13\nTV_PR       0.13\nLLPHONE_PR  0.13\nMPHONE_PR   0.13\nCOMPUTER_PR 0.13"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#visualization-of-standardized-clustering-variables",
    "href": "HandsOnEx/Ex08/Ex08.html#visualization-of-standardized-clustering-variables",
    "title": "Hands-on Exercise 8",
    "section": "Visualization of Standardized Clustering Variables",
    "text": "Visualization of Standardized Clustering Variables\n\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\n\n\n\n\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\n\n\n\n\nproxmat &lt;- dist(shan_ict, method = 'euclidean')\n\n\nproxmat\n\n             Mongmit   Pindaya   Ywangan  Pinlaung    Mabein     Kalaw\nPindaya    171.86828                                                  \nYwangan    381.88259 257.31610                                        \nPinlaung    57.46286 208.63519 400.05492                              \nMabein     263.37099 313.45776 529.14689 312.66966                    \nKalaw      160.05997 302.51785 499.53297 181.96406 198.14085          \nPekon       59.61977 117.91580 336.50410  94.61225 282.26877 211.91531\nLawksawk   140.11550 204.32952 432.16535 192.57320 130.36525 140.01101\nNawnghkio   89.07103 180.64047 377.87702 139.27495 204.63154 127.74787\nKyaukme    144.02475 311.01487 505.89191 139.67966 264.88283  79.42225\nMuse       563.01629 704.11252 899.44137 571.58335 453.27410 412.46033\nLaihka     141.87227 298.61288 491.83321 101.10150 345.00222 197.34633\nMongnai    115.86190 258.49346 422.71934  64.52387 358.86053 200.34668\nMawkmai    434.92968 437.99577 397.03752 398.11227 693.24602 562.59200\nKutkai      97.61092 212.81775 360.11861  78.07733 340.55064 204.93018\nMongton    192.67961 283.35574 361.23257 163.42143 425.16902 267.87522\nMongyai    256.72744 287.41816 333.12853 220.56339 516.40426 386.74701\nMongkaing  503.61965 481.71125 364.98429 476.29056 747.17454 625.24500\nLashio     251.29457 398.98167 602.17475 262.51735 231.28227 106.69059\nMongpan    193.32063 335.72896 483.68125 192.78316 301.52942 114.69105\nMatman     401.25041 354.39039 255.22031 382.40610 637.53975 537.63884\nTachileik  529.63213 635.51774 807.44220 555.01039 365.32538 373.64459\nNarphan    406.15714 474.50209 452.95769 371.26895 630.34312 463.53759\nMongkhet   349.45980 391.74783 408.97731 305.86058 610.30557 465.52013\nHsipaw     118.18050 245.98884 388.63147  76.55260 366.42787 212.36711\nMonghsat   214.20854 314.71506 432.98028 160.44703 470.48135 317.96188\nMongmao    242.54541 402.21719 542.85957 217.58854 384.91867 195.18913\nNansang    104.91839 275.44246 472.77637  85.49572 287.92364 124.30500\nLaukkaing  568.27732 726.85355 908.82520 563.81750 520.67373 427.77791\nPangsang   272.67383 428.24958 556.82263 244.47146 418.54016 224.03998\nNamtu      179.62251 225.40822 444.66868 170.04533 366.16094 307.27427\nMonghpyak  177.76325 221.30579 367.44835 222.20020 212.69450 167.08436\nKonkyan    403.39082 500.86933 528.12533 365.44693 613.51206 444.75859\nMongping   265.12574 310.64850 337.94020 229.75261 518.16310 375.64739\nHopong     136.93111 223.06050 352.85844  98.14855 398.00917 264.16294\nNyaungshwe  99.38590 216.52463 407.11649 138.12050 210.21337  95.66782\nHsihseng   131.49728 172.00796 342.91035 111.61846 381.20187 287.11074\nMongla     384.30076 549.42389 728.16301 372.59678 406.09124 260.26411\nHseni      189.37188 337.98982 534.44679 204.47572 213.61240  38.52842\nKunlong    224.12169 355.47066 531.63089 194.76257 396.61508 273.01375\nHopang     281.05362 443.26362 596.19312 265.96924 368.55167 185.14704\nNamhkan    386.02794 543.81859 714.43173 382.78835 379.56035 246.39577\nKengtung   246.45691 385.68322 573.23173 263.48638 219.47071  88.29335\nLangkho    164.26299 323.28133 507.78892 168.44228 253.84371  67.19580\nMonghsu    109.15790 198.35391 340.42789  80.86834 367.19820 237.34578\nTaunggyi   399.84278 503.75471 697.98323 429.54386 226.24011 252.26066\nPangwaun   381.51246 512.13162 580.13146 356.37963 523.44632 338.35194\nKyethi     202.92551 175.54012 287.29358 189.47065 442.07679 360.17247\nLoilen     145.48666 293.61143 469.51621  91.56527 375.06406 217.19877\nManton     430.64070 402.42888 306.16379 405.83081 674.01120 560.16577\nMongyang   309.51302 475.93982 630.71590 286.03834 411.88352 233.56349\nKunhing    173.50424 318.23811 449.67218 141.58836 375.82140 197.63683\nMongyawng  214.21738 332.92193 570.56521 235.55497 193.49994 173.43078\nTangyan    195.92520 208.43740 324.77002 169.50567 448.59948 348.06617\nNamhsan    237.78494 228.41073 286.16305 214.33352 488.33873 385.88676\n               Pekon  Lawksawk Nawnghkio   Kyaukme      Muse    Laihka\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk   157.51129                                                  \nNawnghkio  113.15370  90.82891                                        \nKyaukme    202.12206 186.29066 157.04230                              \nMuse       614.56144 510.13288 533.68806 434.75768                    \nLaihka     182.23667 246.74469 211.88187 128.24979 526.65211          \nMongnai    151.60031 241.71260 182.21245 142.45669 571.97975 100.53457\nMawkmai    416.00669 567.52693 495.15047 512.02846 926.93007 429.96554\nKutkai     114.98048 224.64646 147.44053 170.93318 592.90743 144.67198\nMongton    208.14888 311.07742 225.81118 229.28509 634.71074 212.07320\nMongyai    242.52301 391.26989 319.57938 339.27780 763.91399 264.13364\nMongkaing  480.23965 625.18712 546.69447 586.05094 995.66496 522.96309\nLashio     303.80011 220.75270 230.55346 129.95255 313.15288 238.64533\nMongpan    243.30037 228.54223 172.84425 110.37831 447.49969 210.76951\nMatman     368.25761 515.39711 444.05061 505.52285 929.11283 443.25453\nTachileik  573.39528 441.82621 470.45533 429.15493 221.19950 549.08985\nNarphan    416.84901 523.69580 435.59661 420.30003 770.40234 392.32592\nMongkhet   342.08722 487.41102 414.10280 409.03553 816.44931 324.97428\nHsipaw     145.37542 249.35081 176.09570 163.95741 591.03355 128.42987\nMonghsat   225.64279 352.31496 289.83220 253.25370 663.76026 158.93517\nMongmao    293.70625 314.64777 257.76465 146.09228 451.82530 185.99082\nNansang    160.37607 188.78869 151.13185  60.32773 489.35308  78.78999\nLaukkaing  624.82399 548.83928 552.65554 428.74978 149.26996 507.39700\nPangsang   321.81214 345.91486 287.10769 175.35273 460.24292 214.19291\nNamtu      165.02707 260.95300 257.52713 270.87277 659.16927 185.86794\nMonghpyak  190.93173 142.31691  93.03711 217.64419 539.43485 293.22640\nKonkyan    421.48797 520.31264 439.34272 393.79911 704.86973 351.75354\nMongping   259.68288 396.47081 316.14719 330.28984 744.44948 272.82761\nHopong     138.86577 274.91604 204.88286 218.84211 648.68011 157.48857\nNyaungshwe 139.31874 104.17830  43.26545 126.50414 505.88581 201.71653\nHsihseng   105.30573 257.11202 209.88026 250.27059 677.66886 175.89761\nMongla     441.20998 393.18472 381.40808 241.58966 256.80556 315.93218\nHseni      243.98001 171.50398 164.05304  81.20593 381.30567 204.49010\nKunlong    249.36301 318.30406 285.04608 215.63037 547.24297 122.68682\nHopang     336.38582 321.16462 279.84188 154.91633 377.44407 230.78652\nNamhkan    442.77120 379.41126 367.33575 247.81990 238.67060 342.43665\nKengtung   297.67761 209.38215 208.29647 136.23356 330.08211 258.23950\nLangkho    219.21623 190.30257 156.51662  51.67279 413.64173 160.94435\nMonghsu    113.84636 242.04063 170.09168 200.77712 633.21624 163.28926\nTaunggyi   440.66133 304.96838 344.79200 312.60547 250.81471 425.36916\nPangwaun   423.81347 453.02765 381.67478 308.31407 541.97887 351.78203\nKyethi     162.43575 317.74604 267.21607 328.14177 757.16745 255.83275\nLoilen     181.94596 265.29318 219.26405 146.92675 560.43400  59.69478\nManton     403.82131 551.13000 475.77296 522.86003 941.49778 458.30232\nMongyang   363.58788 363.37684 323.32123 188.59489 389.59919 229.71502\nKunhing    213.46379 278.68953 206.15773 145.00266 533.00162 142.03682\nMongyawng  248.43910 179.07229 220.61209 181.55295 422.37358 211.99976\nTangyan    167.79937 323.14701 269.07880 306.78359 736.93741 224.29176\nNamhsan    207.16559 362.84062 299.74967 347.85944 778.52971 273.79672\n             Mongnai   Mawkmai    Kutkai   Mongton   Mongyai Mongkaing\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai    374.50873                                                  \nKutkai      91.15307 364.95519                                        \nMongton    131.67061 313.35220 107.06341                              \nMongyai    203.23607 178.70499 188.94166 159.79790                    \nMongkaing  456.00842 133.29995 428.96133 365.50032 262.84016          \nLashio     270.86983 638.60773 289.82513 347.11584 466.36472 708.65819\nMongpan    178.09554 509.99632 185.18173 200.31803 346.39710 563.56780\nMatman     376.33870 147.83545 340.86349 303.04574 186.95158 135.51424\nTachileik  563.95232 919.38755 568.99109 608.76740 750.29555 967.14087\nNarphan    329.31700 273.75350 314.27683 215.97925 248.82845 285.65085\nMongkhet   275.76855 115.58388 273.91673 223.22828 104.98924 222.60577\nHsipaw      52.68195 351.34601  51.46282  90.69766 177.33790 423.77868\nMonghsat   125.25968 275.09705 154.32012 150.98053 127.35225 375.60376\nMongmao    188.29603 485.52853 204.69232 206.57001 335.61300 552.31959\nNansang     92.79567 462.41938 130.04549 199.58124 288.55962 542.16609\nLaukkaing  551.56800 882.51110 580.38112 604.66190 732.68347 954.11795\nPangsang   204.25746 484.14757 228.33583 210.77938 343.30638 548.40662\nNamtu      209.35473 427.95451 225.28268 308.71751 278.02761 525.04057\nMonghpyak  253.26470 536.71695 206.61627 258.04282 370.01575 568.21089\nKonkyan    328.82831 339.01411 310.60810 248.25265 287.87384 380.92091\nMongping   202.99615 194.31049 182.75266 119.86993  65.38727 257.18572\nHopong      91.53795 302.84362  73.45899 106.21031 124.62791 379.37916\nNyaungshwe 169.63695 502.99026 152.15482 219.72196 327.13541 557.32112\nHsihseng   142.36728 329.29477 128.21054 194.64317 162.27126 411.59788\nMongla     354.10985 686.88950 388.40984 411.06668 535.28615 761.48327\nHseni      216.81639 582.53670 229.37894 286.75945 408.23212 648.04408\nKunlong    202.92529 446.53763 204.54010 270.02165 299.36066 539.91284\nHopang     243.00945 561.24281 263.31986 273.50305 408.73288 626.17673\nNamhkan    370.05669 706.47792 392.48568 414.53594 550.62819 771.39688\nKengtung   272.28711 632.54638 279.19573 329.38387 460.39706 692.74693\nLangkho    174.67678 531.08019 180.51419 236.70878 358.95672 597.42714\nMonghsu     84.11238 332.07962  62.60859 107.04894 154.86049 400.71816\nTaunggyi   448.55282 810.74692 450.33382 508.40925 635.94105 866.21117\nPangwaun   312.13429 500.68857 321.80465 257.50434 394.07696 536.95736\nKyethi     210.50453 278.85535 184.23422 222.52947 137.79420 352.06533\nLoilen      58.41263 388.73386 131.56529 176.16001 224.79239 482.18190\nManton     391.54062 109.08779 361.82684 310.20581 195.59882  81.75337\nMongyang   260.39387 558.83162 285.33223 295.60023 414.31237 631.91325\nKunhing    110.55197 398.43973 108.84990 114.03609 238.99570 465.03971\nMongyawng  275.77546 620.04321 281.03383 375.22688 445.78964 700.98284\nTangyan    180.37471 262.66006 166.61820 198.88460 109.08506 348.56123\nNamhsan    218.10003 215.19289 191.32762 196.76188  77.35900 288.66231\n              Lashio   Mongpan    Matman Tachileik   Narphan  Mongkhet\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan    172.33279                                                  \nMatman     628.11049 494.81014                                        \nTachileik  311.95286 411.03849 890.12935                              \nNarphan    525.63854 371.13393 312.05193 760.29566                    \nMongkhet   534.44463 412.17123 203.02855 820.50164 217.28718          \nHsipaw     290.86435 179.52054 344.45451 576.18780 295.40170 253.80950\nMonghsat   377.86793 283.30992 313.59911 677.09508 278.21548 167.98445\nMongmao    214.23677 131.59966 501.59903 472.95568 331.42618 375.35820\nNansang    184.47950 144.77393 458.06573 486.77266 398.13308 360.99219\nLaukkaing  334.65738 435.58047 903.72094 325.06329 708.82887 769.06406\nPangsang   236.72516 140.23910 506.29940 481.31907 316.30314 375.58139\nNamtu      365.88437 352.91394 416.65397 659.56458 494.36143 355.99713\nMonghpyak  262.09281 187.85699 470.46845 444.04411 448.40651 462.63265\nKonkyan    485.51312 365.87588 392.40306 730.92980 158.82353 254.24424\nMongping   454.52548 318.47482 201.65224 727.08969 188.64567 113.80917\nHopong     345.31042 239.43845 291.84351 632.45718 294.40441 212.99485\nNyaungshwe 201.58191 137.29734 460.91883 445.81335 427.94086 417.08639\nHsihseng   369.00833 295.87811 304.02806 658.87060 377.52977 256.70338\nMongla     179.95877 253.20001 708.17595 347.33155 531.46949 574.40292\nHseni       79.41836 120.66550 564.64051 354.90063 474.12297 481.88406\nKunlong    295.23103 288.03320 468.27436 595.70536 413.07823 341.68641\nHopang     170.63913 135.62913 573.55355 403.82035 397.85908 451.51070\nNamhkan    173.27153 240.34131 715.42102 295.91660 536.85519 596.19944\nKengtung    59.85893 142.21554 613.01033 295.90429 505.40025 531.35998\nLangkho    115.18145  94.98486 518.86151 402.33622 420.65204 428.08061\nMonghsu    325.71557 216.25326 308.13805 605.02113 311.92379 247.73318\nTaunggyi   195.14541 319.81385 778.45810 150.84117 684.20905 712.80752\nPangwaun   362.45608 232.52209 523.43600 540.60474 264.64997 407.02947\nKyethi     447.10266 358.89620 233.83079 728.87329 374.90376 233.25039\nLoilen     268.92310 207.25000 406.56282 573.75476 354.79137 284.76895\nManton     646.66493 507.96808  59.52318 910.23039 280.26395 181.33894\nMongyang   209.33700 194.93467 585.61776 448.79027 401.39475 445.40621\nKunhing    255.10832 137.85278 403.66587 532.26397 281.62645 292.49814\nMongyawng  172.70139 275.15989 601.80824 432.10118 572.76394 522.91815\nTangyan    429.84475 340.39128 242.78233 719.84066 348.84991 201.49393\nNamhsan    472.04024 364.77086 180.09747 754.03913 316.54695 170.90848\n              Hsipaw  Monghsat   Mongmao   Nansang Laukkaing  Pangsang\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat   121.78922                                                  \nMongmao    185.99483 247.17708                                        \nNansang    120.24428 201.92690 164.99494                              \nLaukkaing  569.06099 626.44910 404.00848 480.60074                    \nPangsang   205.04337 256.37933  57.60801 193.36162 408.04016          \nNamtu      229.44658 231.78673 365.03882 217.61884 664.06286 392.97391\nMonghpyak  237.67919 356.84917 291.88846 227.52638 565.84279 315.11651\nKonkyan    296.74316 268.25060 281.87425 374.70456 635.92043 274.81900\nMongping   168.92101 140.95392 305.57166 287.36626 708.13447 308.33123\nHopong      62.86179 100.45714 244.16253 167.66291 628.48557 261.51075\nNyaungshwe 169.92664 286.37238 230.45003 131.18943 520.24345 257.77823\nHsihseng   136.54610 153.49551 311.98001 193.53779 670.74564 335.52974\nMongla     373.47509 429.00536 216.24705 289.45119 202.55831 217.88123\nHseni      231.48538 331.22632 184.67099 136.45492 391.74585 214.66375\nKunlong    205.10051 202.31862 224.43391 183.01388 521.88657 258.49342\nHopang     248.72536 317.64824  78.29342 196.47091 331.67199  92.57672\nNamhkan    382.79302 455.10875 223.32205 302.89487 196.46063 231.38484\nKengtung   284.08582 383.72138 207.58055 193.67980 351.48520 229.85484\nLangkho    183.05109 279.52329 134.50170  99.39859 410.41270 167.65920\nMonghsu     58.55724 137.24737 242.43599 153.59962 619.01766 260.52971\nTaunggyi   462.31183 562.88102 387.33906 365.04897 345.98041 405.59730\nPangwaun   298.12447 343.53898 187.40057 326.12960 470.63605 157.48757\nKyethi     195.17677 190.50609 377.89657 273.02385 749.99415 396.89963\nLoilen      98.04789 118.65144 190.26490  94.23028 535.57527 207.94433\nManton     359.60008 317.15603 503.79786 476.55544 907.38406 504.75214\nMongyang   267.10497 312.64797  91.06281 218.49285 326.19219 108.37735\nKunhing     90.77517 165.38834 103.91040 128.20940 500.41640 123.18870\nMongyawng  294.70967 364.40429 296.40789 191.11990 454.80044 336.16703\nTangyan    167.69794 144.59626 347.14183 249.70235 722.40954 364.76893\nNamhsan    194.47928 169.56962 371.71448 294.16284 760.45960 385.65526\n               Namtu Monghpyak   Konkyan  Mongping    Hopong Nyaungshwe\nPindaya                                                                \nYwangan                                                                \nPinlaung                                                               \nMabein                                                                 \nKalaw                                                                  \nPekon                                                                  \nLawksawk                                                               \nNawnghkio                                                              \nKyaukme                                                                \nMuse                                                                   \nLaihka                                                                 \nMongnai                                                                \nMawkmai                                                                \nKutkai                                                                 \nMongton                                                                \nMongyai                                                                \nMongkaing                                                              \nLashio                                                                 \nMongpan                                                                \nMatman                                                                 \nTachileik                                                              \nNarphan                                                                \nMongkhet                                                               \nHsipaw                                                                 \nMonghsat                                                               \nMongmao                                                                \nNansang                                                                \nLaukkaing                                                              \nPangsang                                                               \nNamtu                                                                  \nMonghpyak  346.57799                                                   \nKonkyan    478.37690 463.39594                                         \nMongping   321.66441 354.76537 242.02901                               \nHopong     206.82668 267.95563 304.49287 134.00139                     \nNyaungshwe 271.41464 103.97300 432.35040 319.32583 209.32532           \nHsihseng   131.89940 285.37627 383.49700 199.64389  91.65458  225.80242\nMongla     483.49434 408.03397 468.09747 512.61580 432.31105  347.60273\nHseni      327.41448 200.26876 448.84563 395.58453 286.41193  130.86310\nKunlong    233.60474 357.44661 329.11433 309.05385 219.06817  285.13095\nHopang     408.24516 304.26577 348.18522 379.27212 309.77356  247.19891\nNamhkan    506.32466 379.50202 481.59596 523.74815 444.13246  333.32428\nKengtung   385.33554 221.47613 474.82621 442.80821 340.47382  177.75714\nLangkho    305.03473 200.27496 386.95022 343.96455 239.63685  128.26577\nMonghsu    209.64684 232.17823 331.72187 158.90478  43.40665  173.82799\nTaunggyi   518.72748 334.17439 650.56905 621.53039 513.76415  325.09619\nPangwaun   517.03554 381.95144 263.97576 340.37881 346.00673  352.92324\nKyethi     186.90932 328.16234 400.10989 187.43974 136.49038  288.06872\nLoilen     194.24075 296.99681 334.19820 231.99959 124.74445  206.40432\nManton     448.58230 502.20840 366.66876 200.48082 310.58885  488.79874\nMongyang   413.26052 358.17599 329.39338 387.80686 323.35704  294.29500\nKunhing    296.43996 250.74435 253.74202 212.59619 145.15617  189.97131\nMongyawng  262.24331 285.56475 522.38580 455.59190 326.59925  218.12104\nTangyan    178.69483 335.26416 367.46064 161.67411 106.82328  284.14692\nNamhsan    240.95555 352.70492 352.20115 130.23777 132.70541  315.91750\n            Hsihseng    Mongla     Hseni   Kunlong    Hopang   Namhkan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla     478.66210                                                  \nHseni      312.74375 226.82048                                        \nKunlong    231.85967 346.46200 276.19175                              \nHopang     370.01334 147.02444 162.80878 271.34451                    \nNamhkan    492.09476  77.21355 212.11323 375.73885 146.18632          \nKengtung   370.72441 202.45004  66.12817 317.14187 164.29921 175.63015\nLangkho    276.27441 229.01675  66.66133 224.52741 134.24847 224.40029\nMonghsu     97.82470 424.51868 262.28462 239.89665 301.84458 431.32637\nTaunggyi   528.14240 297.09863 238.19389 471.29032 329.95252 257.29147\nPangwaun   433.06326 319.18643 330.70182 392.45403 206.98364 310.44067\nKyethi      84.04049 556.02500 388.33498 298.55859 440.48114 567.86202\nLoilen     158.84853 338.67408 227.10984 166.53599 242.89326 364.90647\nManton     334.87758 712.51416 584.63341 479.76855 577.52046 721.86149\nMongyang   382.59743 146.66661 210.19929 247.22785  69.25859 167.72448\nKunhing    220.15490 306.47566 206.47448 193.77551 172.96164 314.92119\nMongyawng  309.51462 315.57550 173.86004 240.39800 290.51360 321.21112\nTangyan     70.27241 526.80849 373.07575 268.07983 412.22167 542.64078\nNamhsan    125.74240 564.02740 411.96125 310.40560 440.51555 576.42717\n            Kengtung   Langkho   Monghsu  Taunggyi  Pangwaun    Kyethi\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho    107.16213                                                  \nMonghsu    316.91914 221.84918                                        \nTaunggyi   186.28225 288.27478 486.91951                              \nPangwaun   337.48335 295.38434 343.38498 497.61245                    \nKyethi     444.26274 350.91512 146.61572 599.57407 476.62610          \nLoilen     282.22935 184.10672 131.55208 455.91617 331.69981 232.32965\nManton     631.99123 535.95620 330.76503 803.08034 510.79265 272.03299\nMongyang   217.08047 175.35413 323.95988 374.58247 225.25026 453.86726\nKunhing    245.95083 146.38284 146.78891 429.98509 229.09986 278.95182\nMongyawng  203.87199 186.11584 312.85089 287.73864 475.33116 387.71518\nTangyan    429.95076 332.02048 127.42203 592.65262 447.05580  47.79331\nNamhsan    466.20497 368.20978 153.22576 631.49232 448.58030  68.67929\n              Loilen    Manton  Mongyang   Kunhing Mongyawng   Tangyan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho                                                               \nMonghsu                                                               \nTaunggyi                                                              \nPangwaun                                                              \nKyethi                                                                \nLoilen                                                                \nManton     419.06087                                                  \nMongyang   246.76592 585.70558                                        \nKunhing    130.39336 410.49230 188.89405                              \nMongyawng  261.75211 629.43339 304.21734 295.35984                    \nTangyan    196.60826 271.82672 421.06366 249.74161 377.52279          \nNamhsan    242.15271 210.48485 450.97869 270.79121 430.02019  63.67613"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#hierarchical-clustering",
    "href": "HandsOnEx/Ex08/Ex08.html#hierarchical-clustering",
    "title": "Hands-on Exercise 8",
    "section": "Hierarchical Clustering",
    "text": "Hierarchical Clustering\n\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\n\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\n\n\n\nWe now look to find the optimal clustering algorithm:\n\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#optimal-cluster",
    "href": "HandsOnEx/Ex08/Ex08.html#optimal-cluster",
    "title": "Hands-on Exercise 8",
    "section": "Optimal Cluster",
    "text": "Optimal Cluster\n\nset.seed(12345)\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\n\nfviz_gap_stat(gap_stat)"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#dendrogram-interpretation",
    "href": "HandsOnEx/Ex08/Ex08.html#dendrogram-interpretation",
    "title": "Hands-on Exercise 8",
    "section": "Dendrogram interpretation",
    "text": "Dendrogram interpretation\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\nshan_ict_mat &lt;- data.matrix(shan_ict)\n\n\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#cluster-mapping",
    "href": "HandsOnEx/Ex08/Ex08.html#cluster-mapping",
    "title": "Hands-on Exercise 8",
    "section": "Cluster Mapping",
    "text": "Cluster Mapping\n\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))\n\n(Retain the 6 as suggested earlier on by optimal cluster count where cluster count != 1)\n\nshan_sf_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\nqtm(shan_sf_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\n\n\nshan_sp &lt;- as_Spatial(shan_sf)\n\n\nshan.nb &lt;- poly2nb(shan_sp)\nsummary(shan.nb)\n\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\n\n\ncoords &lt;- st_coordinates(\n  st_centroid(st_geometry(shan_sf)))\n\n\nplot(st_geometry(shan_sf), \n     border=grey(.5))\nplot(shan.nb,\n     coords, \n     col=\"blue\", \n     add=TRUE)"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#minimum-spanning-tree",
    "href": "HandsOnEx/Ex08/Ex08.html#minimum-spanning-tree",
    "title": "Hands-on Exercise 8",
    "section": "Minimum Spanning Tree",
    "text": "Minimum Spanning Tree\n\nlcosts &lt;- nbcosts(shan.nb, shan_ict)\n\n\nshan.w &lt;- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n\n\n\nshan.mst &lt;- mstree(shan.w)\n\n\nclass(shan.mst)\n\n[1] \"mst\"    \"matrix\"\n\n\n\ndim(shan.mst)\n\n[1] 54  3\n\n\n\nhead(shan.mst)\n\n     [,1] [,2]      [,3]\n[1,]   54   48  47.79331\n[2,]   54   17 109.08506\n[3,]   54   45 127.42203\n[4,]   45   52 146.78891\n[5,]   52   13 110.55197\n[6,]   13   28  92.79567\n\n\n\nplot(st_geometry(shan_sf), \n                 border=gray(.5))\nplot.mst(shan.mst, \n         coords, \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n\n\n\n\n\n\n\n\n\nclust6 &lt;- spdep::skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\n\n\nstr(clust6)\n\nList of 8\n $ groups      : num [1:55] 3 3 6 3 3 3 3 3 3 3 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:22] 13 48 54 55 45 37 34 16 25 52 ...\n  .. ..$ edge: num [1:21, 1:3] 48 55 54 37 34 16 45 25 13 13 ...\n  .. ..$ ssw : num 3423\n  ..$ :List of 3\n  .. ..$ node: num [1:18] 47 27 53 38 42 15 41 51 43 32 ...\n  .. ..$ edge: num [1:17, 1:3] 53 15 42 38 41 51 15 27 15 43 ...\n  .. ..$ ssw : num 3759\n  ..$ :List of 3\n  .. ..$ node: num [1:11] 2 6 8 1 36 4 10 9 46 5 ...\n  .. ..$ edge: num [1:10, 1:3] 6 1 8 36 4 6 8 10 10 9 ...\n  .. ..$ ssw : num 1458\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 44 20\n  .. ..$ edge: num [1, 1:3] 44 20 95\n  .. ..$ ssw : num 95\n  ..$ :List of 3\n  .. ..$ node: num 23\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 3\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 12613\n $ ssw         : num [1:6] 12613 10977 9962 9540 9123 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\n\nccs6 &lt;- clust6$groups\nccs6\n\n [1] 3 3 6 3 3 3 3 3 3 3 2 1 1 1 2 1 1 1 2 4 1 2 5 1 1 1 2 1 2 2 1 2 2 1 1 3 1 2\n[39] 2 2 2 2 2 4 1 3 2 1 1 1 2 1 2 1 1\n\n\n\ntable(ccs6)\n\nccs6\n 1  2  3  4  5  6 \n22 18 11  2  1  1 \n\n\nPlot the pruned tree based off the MST\n\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot(clust6, \n     coords, \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#choropleth-clustering-visualization",
    "href": "HandsOnEx/Ex08/Ex08.html#choropleth-clustering-visualization",
    "title": "Hands-on Exercise 8",
    "section": "Choropleth Clustering Visualization",
    "text": "Choropleth Clustering Visualization\n\ngroups_mat &lt;- as.matrix(clust6$groups)\nshan_sf_spatialcluster &lt;- cbind(shan_sf_cluster, as.factor(groups_mat)) %&gt;%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"SP_CLUSTER\")\n\n\n\n\n\n\n\n\n\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#cluster-geo",
    "href": "HandsOnEx/Ex08/Ex08.html#cluster-geo",
    "title": "Hands-on Exercise 8",
    "section": "Cluster-Geo",
    "text": "Cluster-Geo\n\nnongeo_cluster &lt;- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\ngroups &lt;- as.factor(cutree(nongeo_cluster, k=6))\n\n\nshan_sf_ngeo_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(shan_sf_ngeo_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\n\n\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)\n\n\ncr &lt;- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclustG &lt;- hclustgeo(proxmat, distmat, alpha = 0.2)\n\n\ngroups &lt;- as.factor(cutree(clustG, k=6))\n\n\nshan_sf_Gcluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(shan_sf_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "HandsOnEx/Ex08/Ex08.html#clustering-variable-visualization",
    "href": "HandsOnEx/Ex08/Ex08.html#clustering-variable-visualization",
    "title": "Hands-on Exercise 8",
    "section": "Clustering Variable Visualization",
    "text": "Clustering Variable Visualization\n\nggplot(data = shan_sf_ngeo_cluster,\n       aes(x = CLUSTER, y = RADIO_PR)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nggparcoord(data = shan_sf_ngeo_cluster, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\n\n\nshan_sf_ngeo_cluster %&gt;% \n  st_set_geometry(NULL) %&gt;%\n  group_by(CLUSTER) %&gt;%\n  summarise(mean_RADIO_PR = mean(RADIO_PR),\n            mean_TV_PR = mean(TV_PR),\n            mean_LLPHONE_PR = mean(LLPHONE_PR),\n            mean_MPHONE_PR = mean(MPHONE_PR),\n            mean_COMPUTER_PR = mean(COMPUTER_PR))\n\n# A tibble: 6 × 6\n  CLUSTER mean_RADIO_PR mean_TV_PR mean_LLPHONE_PR mean_MPHONE_PR\n  &lt;chr&gt;           &lt;dbl&gt;      &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n1 1               221.        521.            44.2           246.\n2 2               237.        402.            23.9           134.\n3 3               300.        611.            52.2           392.\n4 4               196.        744.            99.0           651.\n5 5               124.        224.            38.0           132.\n6 6                98.6       499.            74.5           468.\n# ℹ 1 more variable: mean_COMPUTER_PR &lt;dbl&gt;"
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html",
    "href": "HandsOnEx/Ex12/Ex12.html",
    "title": "Hands-on Exercise 12",
    "section": "",
    "text": "In this exercise, we explore Geographically Weighted Predictive Models. Predictive modelling uses the relationships between variables to predict the value of a target variable. Geographically Weighted Predictive Models (GWPM) are a type of predictive model that accounts for spatial variation in the relationships between variables. There are geospatial factors such as distance, topography, and climate that can influence the relationships between variables. GWPMs allow us to model these spatially varying relationships."
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#overview",
    "href": "HandsOnEx/Ex12/Ex12.html#overview",
    "title": "Hands-on Exercise 12",
    "section": "",
    "text": "In this exercise, we explore Geographically Weighted Predictive Models. Predictive modelling uses the relationships between variables to predict the value of a target variable. Geographically Weighted Predictive Models (GWPM) are a type of predictive model that accounts for spatial variation in the relationships between variables. There are geospatial factors such as distance, topography, and climate that can influence the relationships between variables. GWPMs allow us to model these spatially varying relationships."
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#datasets",
    "href": "HandsOnEx/Ex12/Ex12.html#datasets",
    "title": "Hands-on Exercise 12",
    "section": "Datasets",
    "text": "Datasets\nThere are various datasets being used in the simple feature data frame. These include:\n\nAspatial\n\nHDB Resale Data: HDB resale transacted prices in Singapore from Jan 2017 onwards\n\nGeospatial\n\n2014 URA Master Plan Planning Subzone Boundary Data: Planning subzone boundaries in Singapore (ESRI Shapefile format)\n\nLocational Factors with Geographic Coordinates\n\nEldercare: List of eldercare services in Singapore\nHawker Centres: List of hawker centres in Singapore\nParks: List of parks in Singapore\nSupermarkets: List of supermarkets in Singapore\nCHAS Clinics: List of CHAS clinics in Singapore\nChildcare Services : List of childcare services in Singapore\nKindergartens: List of kindergartens in Singapore\nMRT Data: List of MRT and LRT stations in Singapore with the station names and codes\nBus Stops: List of bus stops in Singapore\n\nLocational Factors without Geographic Coordinates\n\nPrimary Schools: Primary School data extracted from General Information on Schools in Singapore\nCBD Coordinates: Obtained from Google\nShopping Malls: List of shopping malls in Singapore\nGood Primary Schools: Ranking of good primary schools according to SalarySG forum"
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#loading-packages",
    "href": "HandsOnEx/Ex12/Ex12.html#loading-packages",
    "title": "Hands-on Exercise 12",
    "section": "Loading Packages",
    "text": "Loading Packages\nA couple of packages here we haven’t tried before; namely SpatialML and rsample. SpatialML is a package that provides a suite of tools for spatial machine learning. rsample is a package that provides a suite of tools for splitting data into training and testing sets.\n\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse)"
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#data-preparation",
    "href": "HandsOnEx/Ex12/Ex12.html#data-preparation",
    "title": "Hands-on Exercise 12",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nReading Data File\n\nmdata &lt;- read_rds(\"data/rds/mdata.rds\")\n\n\n\nData Sampling\nThe data is split into train and test datasets with a split of 65-35. We can use the initial_split function from the rsample package to split the data.\n\nset.seed(1234)\nresale_split &lt;- initial_split(mdata, \n                              prop = 6.5/10,)\ntrain_data &lt;- training(resale_split)\ntest_data &lt;- testing(resale_split)\n\n\nwrite_rds(train_data, \"data/rds/train_data.rds\")\nwrite_rds(test_data, \"data/rds/test_data.rds\")"
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#computing-correlation-matrix",
    "href": "HandsOnEx/Ex12/Ex12.html#computing-correlation-matrix",
    "title": "Hands-on Exercise 12",
    "section": "Computing Correlation Matrix",
    "text": "Computing Correlation Matrix\nBefore loading the predictors into a predictive model, it is always a good practice to plot the correlation matrix to examine if there are signs of multicolinearity.\n\nmdata_nogeo &lt;- mdata %&gt;%\n  st_drop_geometry()\ncorrplot::corrplot(cor(mdata_nogeo[, 2:17]), \n                   diag = FALSE, \n                   order = \"AOE\",\n                   tl.pos = \"td\", \n                   tl.cex = 0.5, \n                   method = \"number\", \n                   type = \"upper\")\n\n\n\n\n\n\n\n\nFrom the correlation matrix, all the correlation values are below 0.8. Hence, there is no sign of multicolinearity."
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#retrieving-stored-data",
    "href": "HandsOnEx/Ex12/Ex12.html#retrieving-stored-data",
    "title": "Hands-on Exercise 12",
    "section": "Retrieving Stored Data",
    "text": "Retrieving Stored Data\n\ntrain_data &lt;- read_rds(\"data/rds/train_data.rds\")\ntest_data &lt;- read_rds(\"data/rds/test_data.rds\")"
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#building-non-spatial-multiple-linear-regression-model",
    "href": "HandsOnEx/Ex12/Ex12.html#building-non-spatial-multiple-linear-regression-model",
    "title": "Hands-on Exercise 12",
    "section": "Building Non-Spatial Multiple Linear Regression Model",
    "text": "Building Non-Spatial Multiple Linear Regression Model\n\nprice_mlr &lt;- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nsummary(price_mlr)\n\n\nCall:\nlm(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + \n    PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + \n    PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)              107601.073  10601.261  10.150  &lt; 2e-16 ***\nfloor_area_sqm             2780.698     90.579  30.699  &lt; 2e-16 ***\nstorey_order              14299.298    339.115  42.167  &lt; 2e-16 ***\nremaining_lease_mths        344.490      4.592  75.027  &lt; 2e-16 ***\nPROX_CBD                 -16930.196    201.254 -84.124  &lt; 2e-16 ***\nPROX_ELDERLYCARE         -14441.025    994.867 -14.516  &lt; 2e-16 ***\nPROX_HAWKER              -19265.648   1273.597 -15.127  &lt; 2e-16 ***\nPROX_MRT                 -32564.272   1744.232 -18.670  &lt; 2e-16 ***\nPROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\nPROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\nPROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\nWITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  &lt; 2e-16 ***\nWITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  &lt; 2e-16 ***\nWITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\nWITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 61650 on 10320 degrees of freedom\nMultiple R-squared:  0.7373,    Adjusted R-squared:  0.737 \nF-statistic:  2069 on 14 and 10320 DF,  p-value: &lt; 2.2e-16\n\n\n\nwrite_rds(price_mlr, \"data/rds/price_mlr.rds\" )"
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#gwr-predictive-model",
    "href": "HandsOnEx/Ex12/Ex12.html#gwr-predictive-model",
    "title": "Hands-on Exercise 12",
    "section": "gwr Predictive Model",
    "text": "gwr Predictive Model\nNext, we will calibrate a model to predict HDB resale prices using the GWModel package.\n\nConverting sf data frame to SpatialPointsDataFrame\n\ntrain_data_sp &lt;- as_Spatial(train_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 10335 \nextent      : 11597.31, 42623.63, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 6.20621206270077e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1186888,            133,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.27100643784442,    0.808332738794272,     1.57131703651196,                        7,                    20, ... \n\n\n\n\nComputing Adaptive Bandwidth\nThe code chunk below uses bw.gwr() from GWModel to determine the optimal bandwidth to be used.\n\nbw_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nAdaptive bandwidth: 40 CV score: 6.780447e+12\nFrom the result, using 40 neighbour points will be the optimal bandwidth if adaptive bandwidth is used for this data set.\n\nwrite_rds(bw_adaptive, \"data/rds/bw_adaptive.rds\")\n\n\n\nConstructing Adaptive Bandwidth GWR Model\n\nbw_adaptive &lt;- read_rds(\"data/rds/bw_adaptive.rds\")\n\nNow, we can go ahead to calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and Gaussian kernel as shown in the code chunk below.\n\ngwr_adaptive &lt;- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n\n\nwrite_rds(gwr_adaptive, \"data/rds/gwr_adaptive.rds\")\n\n\n\nRetrieve gwr output\n\ngwr_adaptive &lt;- read_rds(\"data/rds/gwr_adaptive.rds\")\ngwr_adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-29 01:12:57.968131 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data_sp, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 10335\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\n   Coefficients:\n                              Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)              107601.073  10601.261  10.150  &lt; 2e-16 ***\n   floor_area_sqm             2780.698     90.579  30.699  &lt; 2e-16 ***\n   storey_order              14299.298    339.115  42.167  &lt; 2e-16 ***\n   remaining_lease_mths        344.490      4.592  75.027  &lt; 2e-16 ***\n   PROX_CBD                 -16930.196    201.254 -84.124  &lt; 2e-16 ***\n   PROX_ELDERLYCARE         -14441.025    994.867 -14.516  &lt; 2e-16 ***\n   PROX_HAWKER              -19265.648   1273.597 -15.127  &lt; 2e-16 ***\n   PROX_MRT                 -32564.272   1744.232 -18.670  &lt; 2e-16 ***\n   PROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\n   PROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\n   PROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\n   WITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  &lt; 2e-16 ***\n   WITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  &lt; 2e-16 ***\n   WITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\n   WITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  &lt; 2e-16 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 61650 on 10320 degrees of freedom\n   Multiple R-squared: 0.7373\n   Adjusted R-squared: 0.737 \n   F-statistic:  2069 on 14 and 10320 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 3.922202e+13\n   Sigma(hat): 61610.08\n   AIC:  257320.2\n   AICc:  257320.3\n   BIC:  247249\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 40 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -3.2478e+08 -4.7727e+05 -8.3004e+03  5.5025e+05\n   floor_area_sqm           -2.8714e+04  1.4475e+03  2.3011e+03  3.3900e+03\n   storey_order              3.3186e+03  8.5899e+03  1.0826e+04  1.3397e+04\n   remaining_lease_mths     -1.4431e+03  2.6063e+02  3.9048e+02  5.2865e+02\n   PROX_CBD                 -1.0837e+07 -5.7697e+04 -1.3787e+04  2.6552e+04\n   PROX_ELDERLYCARE         -3.2195e+07 -4.0643e+04  1.0562e+04  6.1054e+04\n   PROX_HAWKER              -2.3985e+08 -5.1365e+04  3.0026e+03  6.4287e+04\n   PROX_MRT                 -1.1632e+07 -1.0488e+05 -4.9373e+04  5.1037e+03\n   PROX_PARK                -6.5961e+06 -4.8671e+04 -8.8128e+02  5.3498e+04\n   PROX_MALL                -1.8112e+07 -7.4238e+04 -1.3982e+04  4.9779e+04\n   PROX_SUPERMARKET         -4.5761e+06 -6.3461e+04 -1.7429e+04  3.5616e+04\n   WITHIN_350M_KINDERGARTEN -4.1823e+05 -6.0040e+03  9.0209e+01  4.7127e+03\n   WITHIN_350M_CHILDCARE    -1.0273e+05 -2.2375e+03  2.6668e+02  2.6388e+03\n   WITHIN_350M_BUS          -1.1757e+05 -1.4719e+03  1.1626e+02  1.7584e+03\n   WITHIN_1KM_PRISCH        -6.6465e+05 -5.5959e+03  2.6916e+02  5.7500e+03\n                                  Max.\n   Intercept                1.6493e+08\n   floor_area_sqm           5.0907e+04\n   storey_order             2.9537e+04\n   remaining_lease_mths     1.8119e+03\n   PROX_CBD                 2.2411e+07\n   PROX_ELDERLYCARE         8.2444e+07\n   PROX_HAWKER              5.9654e+06\n   PROX_MRT                 2.0189e+08\n   PROX_PARK                1.5188e+07\n   PROX_MALL                1.0443e+07\n   PROX_SUPERMARKET         3.8330e+06\n   WITHIN_350M_KINDERGARTEN 6.6799e+05\n   WITHIN_350M_CHILDCARE    1.0802e+05\n   WITHIN_350M_BUS          3.7313e+04\n   WITHIN_1KM_PRISCH        5.0231e+05\n   ************************Diagnostic information*************************\n   Number of data points: 10335 \n   Effective number of parameters (2trace(S) - trace(S'S)): 1730.101 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 8604.899 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 238871.9 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 237036.9 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 238209.1 \n   Residual sum of squares: 4.829191e+12 \n   R-square value:  0.967657 \n   Adjusted R-square value:  0.9611534 \n\n   ***********************************************************************\n   Program stops at: 2024-10-29 01:15:28.794354 \n\n\n\n\nConverting Test Data to SpatialPointsDataFrame\n\ntest_data_sp &lt;- as_Spatial(test_data)\ntest_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 5566 \nextent      : 11597.31, 42623.63, 28287.8, 48669.59  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,         PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       230888,             74,            1,                  546, 1.00583660772922, 3.34897933104965e-07, 0.0474019664161957, 0.0414043955932523, 0.0502664084494264, 0.0907500295577619,                0, 4.55547870890763e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1050000,            138,           14,                 1151,  19.632402730488,     3.30163731686804,   2.83106651960209,   2.13060636038504,   2.41313695915468,   10.6169590126272, 2.26056404492346,     0.79249074802552,     1.53786629004208,                        7,                    16, ... \n\n\n\n\nComputing Adaptive Bandwidth for Test Data\n\ngwr_bw_test_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nAdaptive bandwidth: 25 CV score: 4.04299e+12\n\n\nComputing Predictive Values of Test Data\n\n\n\n\n\n\nImportant\n\n\n\nThe code chunk below doesn’t execute correctly. Will debug later.\n\n\n\ngwr_pred &lt;- gwr.predict(formula = resale_price ~\n                          floor_area_sqm + storey_order +\n                          remaining_lease_mths + PROX_CBD + \n                          PROX_ELDERLYCARE + PROX_HAWKER + \n                          PROX_MRT + PROX_PARK + PROX_MALL + \n                          PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                          WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n                          WITHIN_1KM_PRISCH, \n                        data=train_data_sp, \n                        predictdata = test_data_sp, \n                        bw=40,\n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)"
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#preparing-coordinates-data",
    "href": "HandsOnEx/Ex12/Ex12.html#preparing-coordinates-data",
    "title": "Hands-on Exercise 12",
    "section": "Preparing Coordinates Data",
    "text": "Preparing Coordinates Data\n\nExtracting Coordinates Data\n\ncoords &lt;- st_coordinates(mdata)\ncoords_train &lt;- st_coordinates(train_data)\ncoords_test &lt;- st_coordinates(test_data)\n\n\ncoords_train &lt;- write_rds(coords_train, \"data/rds/coords_train.rds\" )\ncoords_test &lt;- write_rds(coords_test, \"data/rds/coords_test.rds\" )\n\n\n\nDropping Geometry Field\n\ntrain_data &lt;- train_data %&gt;% \n  st_drop_geometry()"
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#calibrating-random-forest-model",
    "href": "HandsOnEx/Ex12/Ex12.html#calibrating-random-forest-model",
    "title": "Hands-on Exercise 12",
    "section": "Calibrating Random Forest Model",
    "text": "Calibrating Random Forest Model\n\nrf &lt;- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data)\n\n\nrf\n\nfunction (n, df1, df2, ncp) \n{\n    if (missing(ncp)) \n        .Call(C_rf, n, df1, df2)\n    else (rchisq(n, df1, ncp = ncp)/df1)/(rchisq(n, df2)/df2)\n}\n&lt;bytecode: 0x00000217acc10a90&gt;\n&lt;environment: namespace:stats&gt;\n\n\n\nwrite_rds(rf, \"data/rds/rf.rds\")\n\n\nrf &lt;- read_rds(\"data/rds/rf.rds\")\nrf\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       732448584 \nR squared (OOB):                  0.9493066"
  },
  {
    "objectID": "HandsOnEx/Ex12/Ex12.html#calibrating-geographical-random-forest-model",
    "href": "HandsOnEx/Ex12/Ex12.html#calibrating-geographical-random-forest-model",
    "title": "Hands-on Exercise 12",
    "section": "Calibrating Geographical Random Forest Model",
    "text": "Calibrating Geographical Random Forest Model\nWe will now calibrate a model to predict HDB resale prices using grf() of the SpatialML package.\n\nCalibrating using Train Data\n\ngwRF_adaptive &lt;- grf(formula = resale_price ~ floor_area_sqm + storey_order +\n                       remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +\n                       PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +\n                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                       WITHIN_1KM_PRISCH,\n                     dframe=train_data, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\n\n————— Local Model Summary —————\nResiduals OOB:\n Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-262260.7 -12903.0 447.9 564.7 15004.1 326045.2\nResiduals Predicted (Not OOB):\n Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-78659.78 -3523.05 56.10 58.95 3907.08 87026.10\nLocal Variable Importance:\nMean squared error (OOB): 928216564.586 R-squared (OOB) %: 93.575 AIC (OOB): 213435.096 AICc (OOB): 213435.143 Mean squared error Predicted (Not OOB): 73814830.258 R-squared Predicted (Not OOB) %: 99.489 AIC Predicted (Not OOB): 187269.921 AICc Predicted (Not OOB): 187269.967\nCalculation time (in seconds): 20.3795\n\nwrite_rds(gwRF_adaptive, \"data/rds/gwRF_adaptive.rds\")\n\n\ngwRF_adaptive &lt;- read_rds(\"data/rds/gwRF_adaptive.rds\")\n\n\n\nPredicting using Test Data\nFirst, we need to prepare the test data.\n\ntest_data &lt;- cbind(test_data, coords_test) %&gt;%\n  st_drop_geometry()\n\nNext, we call the predict.grf() function to predict the HDB resale prices using the test data.\n\ngwRF_pred &lt;- predict.grf(gwRF_adaptive, \n                           test_data, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\n\n\nGRF_pred &lt;- write_rds(gwRF_pred, \"data/rds/GRF_pred.rds\")\n\n\n\nConverting Predicted Output to Data Frame\n\nGRF_pred &lt;- read_rds(\"data/rds/GRF_pred.rds\")\nGRF_pred_df &lt;- as.data.frame(GRF_pred)\n\n\ntest_data_p &lt;- cbind(test_data, GRF_pred_df)\n\n\nwrite_rds(test_data_p, \"data/rds/test_data_p.rds\")\n\n\n\nCalculating Root Mean Squared Error (RMSE)\nThe root mean squared error refers to the square root of the average of the squared differences between the predicted and actual values. It is a measure of the accuracy of the model.\n\nrmse(test_data_p$resale_price, \n     test_data_p$GRF_pred)\n\n[1] 27286.41\n\n\n\n\nVisualizing Predicted Values\nWe can use a scatterplot to visualize the predicted values against the actual resale prices.\n\nggplot(data = test_data_p,\n       aes(x = GRF_pred,\n           y = resale_price)) +\n  geom_point()\n\n\n\n\n\n\n\n\nFrom the plot above, we observe that the predicted values are close to the diagonal lines, which indicates that the model is accurate. The scatter plot can also be used to detect the presence of outliers in the model."
  },
  {
    "objectID": "InClassEx/ICE02/ICE02.html",
    "href": "InClassEx/ICE02/ICE02.html",
    "title": "In Class Exercise 2",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, tmap)"
  },
  {
    "objectID": "InClassEx/ICE02/ICE02.html#loading-packages",
    "href": "InClassEx/ICE02/ICE02.html#loading-packages",
    "title": "In Class Exercise 2",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, tmap)"
  },
  {
    "objectID": "InClassEx/ICE02/ICE02.html#load-geospatial-data",
    "href": "InClassEx/ICE02/ICE02.html#load-geospatial-data",
    "title": "In Class Exercise 2",
    "section": "Load Geospatial Data",
    "text": "Load Geospatial Data\n\nmpsz2014_shp &lt;- st_read(dsn = \"data/geospatial\",\n                    layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nst_write(mpsz2014_shp, \"data/geospatial/MP14_SUBZONE_WEB_PL.kml\",delete_dsn = TRUE)\n\n\nmpsz2014_kml = st_read('data/geospatial/MP14_SUBZONE_WEB_PL.kml')\n\n\nmpsz2019_kml = st_read('data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml')\n\n\nmpsz2019_shp = st_read(dsn = \"./data/geospatial\", layer = \"MPSZ-2019\") |&gt;\n    st_transform(crs = 3414)\n\n\npreschool = st_read('data/geospatial/PreSchoolsLocation.kml')\n\n\nst_crs(mpsz2019_shp)"
  },
  {
    "objectID": "InClassEx/ICE02/ICE02.html#loading-population-data",
    "href": "InClassEx/ICE02/ICE02.html#loading-population-data",
    "title": "In Class Exercise 2",
    "section": "Loading Population Data",
    "text": "Loading Population Data\n\npopdata &lt;- read.csv(\"data/aspatial/respopagesextod2023.csv\")\n\n\npopdata2023 &lt;- popdata %&gt;% \n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;% \n  ungroup() %&gt;%\n  pivot_wider(names_from = AG, values_from = POP)\n\ncolnames(popdata2023)\n\n\npopdata2023 &lt;- popdata %&gt;% \n  group_by(PA,SZ,AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from = AG,\n              values_from = POP)%&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[14])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+\nrowSums(.[15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\npopdata2023 &lt;- popdata2023 %&gt;%\n  mutate_at(.vars = vars(PA, SZ),\n            .funs = list(toupper))\n\n\nhead(popdata2023)\n\n\npop2023_mpsz &lt;- left_join(popdata2023, mpsz2019_shp,\n                          by = c(\"SZ\" = \"SUBZONE_N\"))\n\n\nhead(pop2023_mpsz, n=10)\n\n\nmpsz_pop2023 &lt;- left_join(mpsz2019_shp, popdata2023, \n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nhead(mpsz_pop2023, n=10)"
  },
  {
    "objectID": "InClassEx/ICE04/ICE04.html",
    "href": "InClassEx/ICE04/ICE04.html",
    "title": "In Class Exercise 4",
    "section": "",
    "text": "pacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse)"
  },
  {
    "objectID": "InClassEx/ICE04/ICE04.html#loading-packages",
    "href": "InClassEx/ICE04/ICE04.html#loading-packages",
    "title": "In Class Exercise 4",
    "section": "",
    "text": "pacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse)"
  },
  {
    "objectID": "InClassEx/ICE04/ICE04.html#import-and-prepare-study-area",
    "href": "InClassEx/ICE04/ICE04.html#import-and-prepare-study-area",
    "title": "In Class Exercise 4",
    "section": "Import and Prepare Study Area",
    "text": "Import and Prepare Study Area\n\nkbb_sf &lt;- st_read(dsn=\"data/rawdata\",\n               layer=\"Kepulauan_Bangka_Belitung\") |&gt;\n  st_union() |&gt;\n  st_zm(drop=TRUE, what=\"ZM\") |&gt;\n  st_transform(crs=32748)\n\n\nkbb_owin &lt;- as.owin(kbb_sf)\nkbb_owin\n\n\nclass(kbb_owin)\n\n\nfire_sf &lt;- read.csv(\"data/rawdata/forestfires.csv\") %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;%\n  st_transform(crs = 32748)\nfire_sf\n\n\nfire_sf &lt;- fire_sf |&gt;\n  mutate(DayOfYear = yday(acq_date)) |&gt;\n  mutate(Month_num = month(acq_date)) |&gt;\n  mutate(Month_fac = month(acq_date,\n                           label = TRUE,\n                           abbr = FALSE))\n\n\ntm_shape(kbb_sf) +\n  tm_polygons() +\n  tm_shape(fire_sf) +\n  tm_dots()\n\n\ntm_shape(kbb_sf) +\n  tm_polygons() +\n  tm_shape(fire_sf) +\n  tm_dots(size=0.1) +\n  tm_facets(by=\"Month_fac\",\n            free.coords=FALSE,\n            drop.units=TRUE)\n\n\nfire_month &lt;- fire_sf |&gt;\n  select(Month_num)\nfire_month\n\n\nfire_month_ppp &lt;- as.ppp(fire_month)\nfire_month_ppp\n\n\nsummary(fire_month_ppp)\n\n\nfire_month_owin &lt;- fire_month_ppp[kbb_owin]\nsummary(fire_month_owin)\n\n\nplot(fire_month_owin)\n\n\nst_kde &lt;- spattemp.density(fire_month_owin)\nsummary(st_kde)\n\n\ntims &lt;- c(7,8,9,10,11,12)\npar(mfcol=c(2,3))\nfor(i in tims) {\n  plot(st_kde, i,\n       override.par=FALSE,\n       fix.range=TRUE,\n       main=paste(\"KDE at month\", i))\n}\n\n\nfire_yday_ppp &lt;- fire_sf |&gt;\n  select(DayOfYear) |&gt;\n  as.ppp()\n\n\nfire_yday_owin &lt;- fire_yday_ppp[kbb_owin]\nsummary(fire_yday_owin)\n\n\nkde_yday &lt;- spattemp.density(fire_yday_owin)\nsummary(kde_yday)\n\nLimit plot kde_yday to specific days e.g. 30, 60, 90, 120, 150, 180\n\ntims &lt;- c(30,60,90,120,150,180,210,240,270,300,330,352)\npar(mfcol=c(2,3))\nfor(i in tims) {\n  plot(kde_yday, i,\n       override.par=FALSE,\n       fix.range=TRUE,\n       main=paste(\"KDE at day\", i))\n}\n\n\nset.seed(42)\nBOOT.spattemp(fire_yday_owin)\n\n\ntims &lt;- c(30,60,90,120,150,180,210,240,270,300,307,352)\npar(mfcol=c(2,3))\nfor(i in tims) {\n  plot(kde_yday, i,\n       override.par=FALSE,\n       fix.range=TRUE,\n       main=paste(\"KDE at day\", i))\n}\n\n\n# | echo: false\n# | eval: false\nlibrary(animation)\nlibrary(spatstat)\n\ndata(fmd)\nfmd_case &lt;- fmd$cases\nfmd_cont &lt;- fmd$controls\n\n# Estimate bandwidths and create density/risk maps\nhlam &lt;- LIK.spattemp(fmd_case)\nf.breve &lt;- spattemp.density(fmd_case, h=hlam[1], lambda=hlam[2], tlim=c(10, 352))\ng.tilde &lt;- bivariate.density(fmd_cont, h0=hlam[1])\nrho.breve &lt;- spattemp.risk(f=f.breve, g=g.tilde, tolerate=TRUE)"
  },
  {
    "objectID": "InClassEx/ICE06/ICE06.html",
    "href": "InClassEx/ICE06/ICE06.html",
    "title": "In Class Exercise 6",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, tidyverse)"
  },
  {
    "objectID": "InClassEx/ICE06/ICE06.html#getting-started",
    "href": "InClassEx/ICE06/ICE06.html#getting-started",
    "title": "In Class Exercise 6",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, tidyverse)"
  },
  {
    "objectID": "InClassEx/ICE06/ICE06.html#import-geospatial-data",
    "href": "InClassEx/ICE06/ICE06.html#import-geospatial-data",
    "title": "In Class Exercise 6",
    "section": "Import Geospatial Data",
    "text": "Import Geospatial Data\n\nhunan &lt;- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\InClassEx\\ICE06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nhunan_GDPPC &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by county, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 0.8,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)"
  },
  {
    "objectID": "InClassEx/ICE06/ICE06.html#global-measures-of-spatial-association",
    "href": "InClassEx/ICE06/ICE06.html#global-measures-of-spatial-association",
    "title": "In Class Exercise 6",
    "section": "Global Measures of Spatial Association",
    "text": "Global Measures of Spatial Association\n\nDeriving Queen’s Contiguity Weights\n\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\n\nwm_q\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\n\n\nGlobal Moran’s I\n\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\n\n\nPerforming Global Moran’s I Test\n\nglobal_moran_test(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\nPerofrming Global Moran’s I Permutation Test\n\nset.seed(42)\nglobal_moran_perm(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "InClassEx/ICE06/ICE06.html#local-measures-of-spatial-association",
    "href": "InClassEx/ICE06/ICE06.html#local-measures-of-spatial-association",
    "title": "In Class Exercise 6",
    "section": "Local Measures of Spatial Association",
    "text": "Local Measures of Spatial Association\n\nLocal Moran’s I\n\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(\n    GDPPC, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\nVisualizing Local Moran’s I\n\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\nVisualizing p-value of Local Moran’s I\n\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\n\n\n\n\n\n\n\n\n\nVisualizing Local Moran’s I and p-value\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\nVisualizing LISA Map\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii &lt; 0.05)\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "InClassEx/ICE06/ICE06.html#hotspot-analysis",
    "href": "InClassEx/ICE06/ICE06.html#hotspot-analysis",
    "title": "In Class Exercise 6",
    "section": "Hotspot Analysis",
    "text": "Hotspot Analysis\n\nComputing Local Gi* Statistics\n\nwm_idw &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1)`.\nCaused by warning in `st_point_on_surface.sfc()`:\n! st_point_on_surface may not give correct results for longitude/latitude data\n\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 88 features and 18 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 19\n   gi_star cluster   e_gi     var_gi std_dev p_value p_sim p_folded_sim skewness\n     &lt;dbl&gt; &lt;fct&gt;    &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.0416 Low     0.0112 0.00000671  0.0972 9.23e-1  0.66         0.33    1.18 \n 2 -0.333  Low     0.0115 0.00000836 -0.358  7.20e-1  0.88         0.44    0.742\n 3  0.281  High    0.0125 0.00000952 -0.0940 9.25e-1  0.88         0.44    0.858\n 4  0.411  High    0.0118 0.00000880  0.278  7.81e-1  0.76         0.38    0.785\n 5  0.387  High    0.0118 0.00000971  0.241  8.10e-1  0.62         0.31    1.33 \n 6 -0.368  High    0.0114 0.00000540 -0.432  6.66e-1  0.84         0.42    0.414\n 7  3.56   High    0.0157 0.00000999  2.06   3.94e-2  0.06         0.03    0.809\n 8  2.52   High    0.0135 0.00000444  1.78   7.46e-2  0.12         0.06    0.593\n 9  4.56   High    0.0141 0.00000433  4.25   2.10e-5  0.02         0.01    0.534\n10  1.16   Low     0.0110 0.00000438  1.41   1.59e-1  0.2          0.1     0.683\n# ℹ 78 more rows\n# ℹ 10 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, NAME_2 &lt;chr&gt;,\n#   ID_3 &lt;int&gt;, NAME_3 &lt;chr&gt;, ENGTYPE_3 &lt;chr&gt;, County &lt;chr&gt;, GDPPC &lt;dbl&gt;,\n#   geometry &lt;POLYGON [°]&gt;\n\n\n\n\nVisualizing Gi*\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_legend(legend.text.size = 0.8)\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\nVisualising p-value of HCSA\n\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nVisuaising Local HCSA\n\nmap1 &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\nVisualising HCSA Areas\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html",
    "href": "InClassEx/ICE10/ICE10.html",
    "title": "In Class Exercise 10",
    "section": "",
    "text": "pacman::p_load(olsrr, ggstatsplot, sf, \n               tmap, tidyverse, gtsummary,\n               performance, see, sfdep)"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#loading-packages",
    "href": "InClassEx/ICE10/ICE10.html#loading-packages",
    "title": "In Class Exercise 10",
    "section": "",
    "text": "pacman::p_load(olsrr, ggstatsplot, sf, \n               tmap, tidyverse, gtsummary,\n               performance, see, sfdep)"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#importing-data",
    "href": "InClassEx/ICE10/ICE10.html#importing-data",
    "title": "In Class Exercise 10",
    "section": "Importing Data",
    "text": "Importing Data\n\ncondo_resale &lt;- read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\nRows: 1436 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (23): LATITUDE, LONGITUDE, POSTCODE, SELLING_PRICE, AREA_SQM, AGE, PROX_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmpsz &lt;- read_rds(\"data/rds/mpsz.rds\")\n\ncondo_resale_sf &lt;- read_rds(\n  \"data/rds/condo_resale_sf.rds\")"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#correlation-analysis-ggstatsplot",
    "href": "InClassEx/ICE10/ICE10.html#correlation-analysis-ggstatsplot",
    "title": "In Class Exercise 10",
    "section": "Correlation Analysis: ggstatsplot",
    "text": "Correlation Analysis: ggstatsplot\n\nggcorrmat(condo_resale[, 5:23])"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#building-hedonic-price-model-using-multiple-linear-regression",
    "href": "InClassEx/ICE10/ICE10.html#building-hedonic-price-model-using-multiple-linear-regression",
    "title": "In Class Exercise 10",
    "section": "Building Hedonic Price Model using Multiple Linear Regression",
    "text": "Building Hedonic Price Model using Multiple Linear Regression\n\ncondo_mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + \n                  AGE   + PROX_CBD + PROX_CHILDCARE + \n                  PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n                  PROX_HAWKER_MARKET    + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + \n                  PROX_SUPERMARKET + PROX_BUS_STOP + \n                  NO_Of_UNITS + FAMILY_FRIENDLY + \n                  FREEHOLD + LEASEHOLD_99YR, \n                data=condo_resale_sf)\nsummary(condo_mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD + \n    LEASEHOLD_99YR, data = condo_resale_sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3471036  -286903   -22426   239412 12254549 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           543071.4   136210.9   3.987 7.03e-05 ***\nAREA_SQM               12688.7      370.1  34.283  &lt; 2e-16 ***\nAGE                   -24566.0     2766.0  -8.881  &lt; 2e-16 ***\nPROX_CBD              -78122.0     6791.4 -11.503  &lt; 2e-16 ***\nPROX_CHILDCARE       -333219.0   111020.3  -3.001 0.002734 ** \nPROX_ELDERLYCARE      170950.0    42110.8   4.060 5.19e-05 ***\nPROX_URA_GROWTH_AREA   38507.6    12523.7   3.075 0.002147 ** \nPROX_HAWKER_MARKET     23801.2    29299.9   0.812 0.416739    \nPROX_KINDERGARTEN     144098.0    82738.7   1.742 0.081795 .  \nPROX_MRT             -322775.9    58528.1  -5.515 4.14e-08 ***\nPROX_PARK             564487.9    66563.0   8.481  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      186170.5    65515.2   2.842 0.004553 ** \nPROX_TOP_PRIMARY_SCH    -477.1    20598.0  -0.023 0.981525    \nPROX_SHOPPING_MALL   -207721.5    42855.5  -4.847 1.39e-06 ***\nPROX_SUPERMARKET      -48074.7    77145.3  -0.623 0.533273    \nPROX_BUS_STOP         675755.0   138552.0   4.877 1.20e-06 ***\nNO_Of_UNITS             -216.2       90.3  -2.394 0.016797 *  \nFAMILY_FRIENDLY       142128.3    47055.1   3.020 0.002569 ** \nFREEHOLD              300646.5    77296.5   3.890 0.000105 ***\nLEASEHOLD_99YR        -77137.4    77570.9  -0.994 0.320192    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1416 degrees of freedom\nMultiple R-squared:  0.652, Adjusted R-squared:  0.6474 \nF-statistic: 139.6 on 19 and 1416 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#generating-tidy-linear-regression-report",
    "href": "InClassEx/ICE10/ICE10.html#generating-tidy-linear-regression-report",
    "title": "In Class Exercise 10",
    "section": "Generating tidy linear regression report",
    "text": "Generating tidy linear regression report\n\nols_regress(condo_mlr)\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     750537.537 \nR-Squared                    0.652       MSE                571262902261.223 \nAdj. R-Squared               0.647       Coef. Var                    43.160 \nPred R-Squared               0.637       AIC                       42971.173 \nMAE                     412117.987       SBC                       43081.835 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.515738e+15          19        7.977571e+13    139.648    0.0000 \nResidual      8.089083e+14        1416    571262902261.223                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     543071.420    136210.918                   3.987    0.000     275874.535     810268.305 \n            AREA_SQM      12688.669       370.119        0.579     34.283    0.000      11962.627      13414.710 \n                 AGE     -24566.001      2766.041       -0.166     -8.881    0.000     -29991.980     -19140.022 \n            PROX_CBD     -78121.985      6791.377       -0.267    -11.503    0.000     -91444.227     -64799.744 \n      PROX_CHILDCARE    -333219.036    111020.303       -0.087     -3.001    0.003    -551000.984    -115437.089 \n    PROX_ELDERLYCARE     170949.961     42110.748        0.083      4.060    0.000      88343.803     253556.120 \nPROX_URA_GROWTH_AREA      38507.622     12523.661        0.059      3.075    0.002      13940.700      63074.545 \n  PROX_HAWKER_MARKET      23801.197     29299.923        0.019      0.812    0.417     -33674.725      81277.120 \n   PROX_KINDERGARTEN     144097.972     82738.669        0.030      1.742    0.082     -18205.570     306401.514 \n            PROX_MRT    -322775.874     58528.079       -0.123     -5.515    0.000    -437586.937    -207964.811 \n           PROX_PARK     564487.876     66563.011        0.148      8.481    0.000     433915.162     695060.590 \n    PROX_PRIMARY_SCH     186170.524     65515.193        0.072      2.842    0.005      57653.253     314687.795 \nPROX_TOP_PRIMARY_SCH       -477.073     20597.972       -0.001     -0.023    0.982     -40882.894      39928.747 \n  PROX_SHOPPING_MALL    -207721.520     42855.500       -0.109     -4.847    0.000    -291788.613    -123654.427 \n    PROX_SUPERMARKET     -48074.679     77145.257       -0.012     -0.623    0.533    -199405.956     103256.599 \n       PROX_BUS_STOP     675755.044    138551.991        0.133      4.877    0.000     403965.817     947544.272 \n         NO_Of_UNITS       -216.180        90.302       -0.046     -2.394    0.017       -393.320        -39.040 \n     FAMILY_FRIENDLY     142128.272     47055.082        0.056      3.020    0.003      49823.107     234433.438 \n            FREEHOLD     300646.543     77296.529        0.117      3.890    0.000     149018.525     452274.561 \n      LEASEHOLD_99YR     -77137.375     77570.869       -0.030     -0.994    0.320    -229303.551      75028.801 \n-----------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#variable-selection",
    "href": "InClassEx/ICE10/ICE10.html#variable-selection",
    "title": "In Class Exercise 10",
    "section": "Variable Selection",
    "text": "Variable Selection\n\ncondo_fw_mlr &lt;- ols_step_forward_p(\n  condo_mlr,\n  p_val = 0.05,\n  details = FALSE)\ncondo_fw_mlr\n\n\n                                     Stepwise Summary                                      \n-----------------------------------------------------------------------------------------\nStep    Variable                   AIC          SBC         SBIC         R2       Adj. R2 \n-----------------------------------------------------------------------------------------\n 0      Base Model              44449.068    44459.608    40371.745    0.00000    0.00000 \n 1      AREA_SQM                43587.753    43603.562    39510.883    0.45184    0.45146 \n 2      PROX_CBD                43243.523    43264.602    39167.182    0.56928    0.56868 \n 3      PROX_PARK               43177.691    43204.039    39101.331    0.58915    0.58829 \n 4      FREEHOLD                43125.474    43157.092    39049.179    0.60438    0.60327 \n 5      AGE                     43069.222    43106.109    38993.167    0.62010    0.61878 \n 6      PROX_ELDERLYCARE        43046.515    43088.672    38970.548    0.62659    0.62502 \n 7      PROX_SHOPPING_MALL      43020.990    43068.417    38945.209    0.63367    0.63188 \n 8      PROX_URA_GROWTH_AREA    43009.092    43061.788    38933.407    0.63720    0.63517 \n 9      PROX_MRT                42999.058    43057.024    38923.483    0.64023    0.63796 \n 10     PROX_BUS_STOP           42984.951    43048.186    38909.582    0.64424    0.64175 \n 11     FAMILY_FRIENDLY         42981.085    43049.590    38905.797    0.64569    0.64296 \n 12     NO_Of_UNITS             42975.246    43049.021    38900.092    0.64762    0.64465 \n 13     PROX_CHILDCARE          42971.858    43050.902    38896.812    0.64894    0.64573 \n 14     PROX_PRIMARY_SCH        42966.758    43051.072    38891.872    0.65067    0.64723 \n-----------------------------------------------------------------------------------------\n\nFinal Model Output \n------------------\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.591 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\nplot(condo_fw_mlr)"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#backward-stepwise-multiple-linear-regression",
    "href": "InClassEx/ICE10/ICE10.html#backward-stepwise-multiple-linear-regression",
    "title": "In Class Exercise 10",
    "section": "Backward stepwise multiple linear regression",
    "text": "Backward stepwise multiple linear regression\n\ncondo_bw_mlr &lt;- ols_step_backward_p(\n  condo_mlr,\n  p_val = 0.05,\n  details = FALSE)\ncondo_bw_mlr\n\n\n                                     Stepwise Summary                                      \n-----------------------------------------------------------------------------------------\nStep    Variable                   AIC          SBC         SBIC         R2       Adj. R2 \n-----------------------------------------------------------------------------------------\n 0      Full Model              42971.173    43081.835    38896.546    0.65203    0.64736 \n 1      PROX_TOP_PRIMARY_SCH    42969.173    43074.565    38894.518    0.65203    0.64761 \n 2      PROX_SUPERMARKET        42967.567    43067.689    38892.873    0.65193    0.64776 \n 3      PROX_HAWKER_MARKET      42966.461    43061.315    38891.719    0.65172    0.64779 \n 4      LEASEHOLD_99YR          42965.558    43055.141    38890.764    0.65145    0.64777 \n 5      PROX_KINDERGARTEN       42966.758    43051.072    38891.872    0.65067    0.64723 \n-----------------------------------------------------------------------------------------\n\nFinal Model Output \n------------------\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.591 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#stepwise-multiple-linear-regression",
    "href": "InClassEx/ICE10/ICE10.html#stepwise-multiple-linear-regression",
    "title": "In Class Exercise 10",
    "section": "Stepwise multiple linear regression",
    "text": "Stepwise multiple linear regression\n\ncondo_sb_mlr &lt;- ols_step_both_p(\n  condo_mlr,\n  p_val = 0.05,\n  details = FALSE)\ncondo_sb_mlr\n\n\n                                       Stepwise Summary                                        \n---------------------------------------------------------------------------------------------\nStep    Variable                       AIC          SBC         SBIC         R2       Adj. R2 \n---------------------------------------------------------------------------------------------\n 0      Base Model                  44449.068    44459.608    40371.745    0.00000    0.00000 \n 1      AREA_SQM (+)                43587.753    43603.562    39510.883    0.45184    0.45146 \n 2      PROX_CBD (+)                43243.523    43264.602    39167.182    0.56928    0.56868 \n 3      PROX_PARK (+)               43177.691    43204.039    39101.331    0.58915    0.58829 \n 4      FREEHOLD (+)                43125.474    43157.092    39049.179    0.60438    0.60327 \n 5      AGE (+)                     43069.222    43106.109    38993.167    0.62010    0.61878 \n 6      PROX_ELDERLYCARE (+)        43046.515    43088.672    38970.548    0.62659    0.62502 \n 7      PROX_SHOPPING_MALL (+)      43020.990    43068.417    38945.209    0.63367    0.63188 \n 8      PROX_URA_GROWTH_AREA (+)    43009.092    43061.788    38933.407    0.63720    0.63517 \n 9      PROX_MRT (+)                42999.058    43057.024    38923.483    0.64023    0.63796 \n 10     PROX_BUS_STOP (+)           42984.951    43048.186    38909.582    0.64424    0.64175 \n 11     FAMILY_FRIENDLY (+)         42981.085    43049.590    38905.797    0.64569    0.64296 \n 12     NO_Of_UNITS (+)             42975.246    43049.021    38900.092    0.64762    0.64465 \n 13     PROX_CHILDCARE (+)          42971.858    43050.902    38896.812    0.64894    0.64573 \n 14     PROX_PRIMARY_SCH (+)        42966.758    43051.072    38891.872    0.65067    0.64723 \n 15     PROX_KINDERGARTEN (+)       42965.558    43055.141    38890.764    0.65145    0.64777 \n---------------------------------------------------------------------------------------------\n\nFinal Model Output \n------------------\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751161.087 \nR-Squared                    0.651       MSE                570600646491.086 \nAdj. R-Squared               0.648       Coef. Var                    43.135 \nPred R-Squared               0.638       AIC                       42965.558 \nMAE                     413583.799       SBC                       43055.141 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.514394e+15          15        1.009596e+14    176.936    0.0000 \nResidual      8.102529e+14        1420    570600646491.086                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     459826.675    114616.014                   4.012    0.000     234991.777     684661.574 \n            AREA_SQM      12720.174       368.610        0.581     34.509    0.000      11997.096      13443.252 \n            PROX_CBD     -75676.065      5816.474       -0.258    -13.011    0.000     -87085.870     -64266.259 \n           PROX_PARK     575749.528     65523.382        0.151      8.787    0.000     447216.504     704282.552 \n            FREEHOLD     360203.286     48768.851        0.140      7.386    0.000     264536.552     455870.021 \n                 AGE     -24697.719      2752.751       -0.167     -8.972    0.000     -30097.615     -19297.824 \n    PROX_ELDERLYCARE     182435.081     39910.469        0.088      4.571    0.000     104145.268     260724.893 \n  PROX_SHOPPING_MALL    -224513.955     36588.872       -0.117     -6.136    0.000    -296288.004    -152739.906 \nPROX_URA_GROWTH_AREA      40145.474     11758.824        0.062      3.414    0.001      17078.942      63212.007 \n            PROX_MRT    -311753.202     57670.032       -0.119     -5.406    0.000    -424880.814    -198625.590 \n       PROX_BUS_STOP     711858.014    135420.040        0.140      5.257    0.000     446213.188     977502.840 \n     FAMILY_FRIENDLY     144034.218     46874.683        0.057      3.073    0.002      52083.153     235985.283 \n         NO_Of_UNITS       -236.270        88.032       -0.051     -2.684    0.007       -408.956        -63.583 \n      PROX_CHILDCARE    -336118.857    108331.761       -0.088     -3.103    0.002    -548626.339    -123611.374 \n    PROX_PRIMARY_SCH     162183.897     60202.895        0.063      2.694    0.007      44087.730     280280.063 \n   PROX_KINDERGARTEN     141915.768     79726.155        0.029      1.780    0.075     -14477.927     298309.464 \n-----------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#comparing-performance",
    "href": "InClassEx/ICE10/ICE10.html#comparing-performance",
    "title": "In Class Exercise 10",
    "section": "Comparing Performance",
    "text": "Comparing Performance\n\nmetric &lt;- compare_performance(condo_mlr, \n                    condo_fw_mlr$model,\n                    condo_bw_mlr$model,\n                    condo_sb_mlr$model)\n\n\nmetric$Name &lt;- gsub(\".*\\\\\\\\([a-zA-Z0-9_]+)\\\\\\\\, \\\\\\\\model\\\\\\\\.*\", \"\\\\1\", metric$Name)\n\n\nVisual Comparison\n\nplot(metric)\n\n\n\n\n\n\n\n\n\n\nVisualizing Model Parameters\n\nggcoefstats(condo_sb_mlr$model,\n            sort = \"ascending\")\n\nNumber of labels is greater than default palette color count.\n• Select another color `palette` (and/or `package`)."
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#checking-for-multicollinearity",
    "href": "InClassEx/ICE10/ICE10.html#checking-for-multicollinearity",
    "title": "In Class Exercise 10",
    "section": "Checking for Multicollinearity",
    "text": "Checking for Multicollinearity\n\ncheck_collinearity(condo_sb_mlr$model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n                 Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n             AREA_SQM 1.15 [1.10, 1.24]         1.07      0.87     [0.81, 0.91]\n             PROX_CBD 1.60 [1.50, 1.73]         1.27      0.62     [0.58, 0.67]\n            PROX_PARK 1.21 [1.15, 1.30]         1.10      0.83     [0.77, 0.87]\n             FREEHOLD 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n                  AGE 1.41 [1.33, 1.52]         1.19      0.71     [0.66, 0.75]\n     PROX_ELDERLYCARE 1.52 [1.42, 1.63]         1.23      0.66     [0.61, 0.70]\n   PROX_SHOPPING_MALL 1.49 [1.40, 1.60]         1.22      0.67     [0.62, 0.72]\n PROX_URA_GROWTH_AREA 1.33 [1.26, 1.43]         1.16      0.75     [0.70, 0.79]\n             PROX_MRT 1.96 [1.83, 2.13]         1.40      0.51     [0.47, 0.55]\n        PROX_BUS_STOP 2.89 [2.66, 3.15]         1.70      0.35     [0.32, 0.38]\n      FAMILY_FRIENDLY 1.38 [1.30, 1.48]         1.18      0.72     [0.67, 0.77]\n          NO_Of_UNITS 1.45 [1.37, 1.56]         1.21      0.69     [0.64, 0.73]\n       PROX_CHILDCARE 3.29 [3.02, 3.59]         1.81      0.30     [0.28, 0.33]\n     PROX_PRIMARY_SCH 2.21 [2.05, 2.40]         1.49      0.45     [0.42, 0.49]\n    PROX_KINDERGARTEN 1.11 [1.06, 1.20]         1.05      0.90     [0.84, 0.94]\n\n\n\nVisualizing Multicollinearity\n\nplot(check_collinearity(condo_sb_mlr$model)) +\n  theme(axis.text.x = element_text(\n    angle = 45, hjust = 1))\n\nVariable `Component` is not in your data frame :/"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#linearity-assumption-test",
    "href": "InClassEx/ICE10/ICE10.html#linearity-assumption-test",
    "title": "In Class Exercise 10",
    "section": "Linearity Assumption Test",
    "text": "Linearity Assumption Test\n\nout &lt;- plot(check_model(condo_sb_mlr$model, \n                        panel = FALSE))\n\nFor confidence bands, please install `qqplotr`.\n\nout[[2]]"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#normality-assumption-test",
    "href": "InClassEx/ICE10/ICE10.html#normality-assumption-test",
    "title": "In Class Exercise 10",
    "section": "Normality Assumption Test",
    "text": "Normality Assumption Test\n\nplot(check_normality(condo_sb_mlr$model))\n\nFor confidence bands, please install `qqplotr`."
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#checking-outliers",
    "href": "InClassEx/ICE10/ICE10.html#checking-outliers",
    "title": "In Class Exercise 10",
    "section": "Checking Outliers",
    "text": "Checking Outliers\n\noutliers &lt;- check_outliers(condo_sb_mlr$model,\n                           method = \"cook\")\noutliers\n\nOK: No outliers detected.\n- Based on the following method and threshold: cook (1).\n- For variable: (Whole model)\n\n\n\nVisualizing Outliers\n\nplot(check_outliers(condo_sb_mlr$model,\n                           method = \"cook\"))"
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#spatial-non-stationary-assumption",
    "href": "InClassEx/ICE10/ICE10.html#spatial-non-stationary-assumption",
    "title": "In Class Exercise 10",
    "section": "Spatial Non-stationary Assumption",
    "text": "Spatial Non-stationary Assumption\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\n\nHo: The residuals are randomly distributed (also known as spatial stationary)\nH1: The residuals are spatially non-stationary\n\n\nmlr_output &lt;- as.data.frame(condo_fw_mlr$model$residuals) %&gt;%\n  rename(`FW_MLR_RES` = `condo_fw_mlr$model$residuals`)\n\n\ncondo_resale_sf &lt;- cbind(condo_resale_sf, \n                        mlr_output$FW_MLR_RES) %&gt;%\n  rename(`MLR_RES` = `mlr_output.FW_MLR_RES`)\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(mpsz)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale_sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\nVariable(s) \"MLR_RES\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "InClassEx/ICE10/ICE10.html#spatial-stationary-test",
    "href": "InClassEx/ICE10/ICE10.html#spatial-stationary-test",
    "title": "In Class Exercise 10",
    "section": "Spatial Stationary Test",
    "text": "Spatial Stationary Test\n\ncondo_resale_sf &lt;- condo_resale_sf %&gt;%\n  mutate(nb = st_knn(geometry, k=6,\n                     longlat = FALSE),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n\n\nglobal_moran_perm(condo_resale_sf$MLR_RES, \n                  condo_resale_sf$nb, \n                  condo_resale_sf$wt, \n                  alternative = \"two.sided\", \n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.32254, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nStatistical Interpretation\nThe Global Moran’s I test for residual spatial autocorrelation shows that its p-value is less than the alpha value of 0.05. Hence, we reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.25586 which is greater than 0, we can infer that the residuals resemble cluster distribution."
  },
  {
    "objectID": "InClassEx/ICE12/ICE12.html",
    "href": "InClassEx/ICE12/ICE12.html",
    "title": "In Class Exercise 12",
    "section": "",
    "text": "pacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, yardstick, tidyverse,\n               knitr, kableExtra, spatialRF)"
  },
  {
    "objectID": "InClassEx/ICE12/ICE12.html#loading-packages",
    "href": "InClassEx/ICE12/ICE12.html#loading-packages",
    "title": "In Class Exercise 12",
    "section": "",
    "text": "pacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, yardstick, tidyverse,\n               knitr, kableExtra, spatialRF)"
  },
  {
    "objectID": "InClassEx/ICE12/ICE12.html#data-preparation",
    "href": "InClassEx/ICE12/ICE12.html#data-preparation",
    "title": "In Class Exercise 12",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nImporting RDS File\n\nmdata &lt;- read_rds(\"data/rds/mdata.rds\")\n\n\n\nData Sampling\n\nset.seed(1234)\nHDB_sample &lt;- mdata %&gt;%\n  sample_n(1500)\n\n\n\nChecking for Overlaps\n\noverlapping_points &lt;- HDB_sample %&gt;%\n  mutate(overlap = lengths(st_equals(., .)) &gt; 1)\nsummary(overlapping_points$overlap)\n\n   Mode   FALSE    TRUE \nlogical    1047     453 \n\n\n\n\nSpatial Jitter\n\nHDB_sample &lt;- HDB_sample %&gt;%\n  st_jitter(amount = 1)"
  },
  {
    "objectID": "InClassEx/ICE12/ICE12.html#data-sampling-1",
    "href": "InClassEx/ICE12/ICE12.html#data-sampling-1",
    "title": "In Class Exercise 12",
    "section": "Data Sampling",
    "text": "Data Sampling\n\nset.seed(1234)\nresale_split &lt;- initial_split(HDB_sample, \n                              prop = 6.67/10,)\ntrain_data &lt;- training(resale_split)\ntest_data &lt;- testing(resale_split)\n\n\nwrite_rds(train_data, \"data/rds/train_data.rds\")\nwrite_rds(test_data, \"data/rds/test_data.rds\")\n\n\nMulticollinearity Check\n\nmdata_nogeo &lt;- mdata %&gt;%\n  st_drop_geometry()\nggstatsplot::ggcorrmat(mdata_nogeo[, 2:17])"
  },
  {
    "objectID": "InClassEx/ICE12/ICE12.html#building-non-spatial-multiple-linear-regression",
    "href": "InClassEx/ICE12/ICE12.html#building-non-spatial-multiple-linear-regression",
    "title": "In Class Exercise 12",
    "section": "Building Non-Spatial Multiple Linear Regression",
    "text": "Building Non-Spatial Multiple Linear Regression\n\nprice_mlr &lt;- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nolsrr::ols_regress(price_mlr)\n\n                              Model Summary                                \n--------------------------------------------------------------------------\nR                           0.862       RMSE                    60813.316 \nR-Squared                   0.742       MSE                3754578098.252 \nAdj. R-Squared              0.739       Coef. Var                  14.255 \nPred R-Squared              0.734       AIC                     24901.005 \nMAE                     45987.256       SBC                     24979.529 \n--------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                      \n-------------------------------------------------------------------------------\n                    Sum of                                                     \n                   Squares         DF         Mean Square       F         Sig. \n-------------------------------------------------------------------------------\nRegression    1.065708e+13         14    761220078101.236    202.745    0.0000 \nResidual      3.698259e+12        985      3754578098.252                      \nTotal         1.435534e+13        999                                          \n-------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                 \n------------------------------------------------------------------------------------------------------------------\n                   model          Beta    Std. Error    Std. Beta       t        Sig          lower         upper \n------------------------------------------------------------------------------------------------------------------\n             (Intercept)    115703.696     34303.409                   3.373    0.001     48387.533    183019.860 \n          floor_area_sqm      2778.618       292.262        0.165      9.507    0.000      2205.089      3352.146 \n            storey_order     12698.165      1070.950        0.211     11.857    0.000     10596.559     14799.771 \n    remaining_lease_mths       350.252        14.596        0.450     23.997    0.000       321.610       378.894 \n                PROX_CBD    -16225.588       630.092       -0.572    -25.751    0.000    -17462.065    -14989.110 \n        PROX_ELDERLYCARE    -11330.930      3220.845       -0.061     -3.518    0.000    -17651.436     -5010.423 \n             PROX_HAWKER    -19964.070      4021.046       -0.087     -4.965    0.000    -27854.872    -12073.268 \n                PROX_MRT    -39652.516      5412.288       -0.130     -7.326    0.000    -50273.456    -29031.577 \n               PROX_PARK    -15878.322      4609.199       -0.061     -3.445    0.001    -24923.300     -6833.344 \n               PROX_MALL    -15910.922      6438.111       -0.048     -2.471    0.014    -28544.911     -3276.933 \n        PROX_SUPERMARKET    -18928.514     13304.965       -0.025     -1.423    0.155    -45037.848      7180.821 \nWITHIN_350M_KINDERGARTEN      9309.735      2024.293        0.079      4.599    0.000      5337.313     13282.157 \n   WITHIN_350M_CHILDCARE     -1619.514      1180.948       -0.026     -1.371    0.171     -3936.977       697.948 \n         WITHIN_350M_BUS      -447.695       738.715       -0.011     -0.606    0.545     -1897.331      1001.940 \n       WITHIN_1KM_PRISCH    -10698.012      1543.511       -0.138     -6.931    0.000    -13726.960     -7669.065 \n------------------------------------------------------------------------------------------------------------------\n\n\n\nMulticollinearity Check with VIF\n\nvif &lt;- performance::check_collinearity(price_mlr)\nkable(vif, \n      caption = \"Variance Inflation Factor (VIF) Results\") %&gt;%\n  kable_styling(font_size = 18) \n\n\nVariance Inflation Factor (VIF) Results\n\n\nTerm\nVIF\nVIF_CI_low\nVIF_CI_high\nSE_factor\nTolerance\nTolerance_CI_low\nTolerance_CI_high\n\n\n\n\nfloor_area_sqm\n1.146686\n1.085743\n1.250945\n1.070834\n0.8720785\n0.7993954\n0.9210287\n\n\nstorey_order\n1.206020\n1.135720\n1.312734\n1.098189\n0.8291736\n0.7617690\n0.8804986\n\n\nremaining_lease_mths\n1.343645\n1.254833\n1.463410\n1.159157\n0.7442440\n0.6833358\n0.7969186\n\n\nPROX_CBD\n1.887898\n1.733977\n2.074096\n1.374008\n0.5296898\n0.4821378\n0.5767088\n\n\nPROX_ELDERLYCARE\n1.140418\n1.080572\n1.244716\n1.067904\n0.8768712\n0.8033960\n0.9254357\n\n\nPROX_HAWKER\n1.183865\n1.116887\n1.289223\n1.088056\n0.8446907\n0.7756609\n0.8953457\n\n\nPROX_MRT\n1.211390\n1.140307\n1.318485\n1.100632\n0.8254980\n0.7584464\n0.8769566\n\n\nPROX_PARK\n1.186122\n1.118797\n1.291599\n1.089092\n0.8430839\n0.7742340\n0.8938169\n\n\nPROX_MALL\n1.435504\n1.335252\n1.565736\n1.198125\n0.6966193\n0.6386771\n0.7489224\n\n\nPROX_SUPERMARKET\n1.226727\n1.153448\n1.335000\n1.107577\n0.8151773\n0.7490638\n0.8669656\n\n\nWITHIN_350M_KINDERGARTEN\n1.123989\n1.067172\n1.228865\n1.060183\n0.8896886\n0.8137594\n0.9370564\n\n\nWITHIN_350M_CHILDCARE\n1.387119\n1.292841\n1.511748\n1.177760\n0.7209189\n0.6614860\n0.7734902\n\n\nWITHIN_350M_BUS\n1.193498\n1.125056\n1.299398\n1.092473\n0.8378731\n0.7695869\n0.8888447\n\n\nWITHIN_1KM_PRISCH\n1.508943\n1.399770\n1.647930\n1.228390\n0.6627154\n0.6068219\n0.7144029\n\n\n\n\n\n\n\n\n\nPlotting VIF\n\nplot(vif) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nVariable `Component` is not in your data frame :/"
  },
  {
    "objectID": "InClassEx/ICE12/ICE12.html#predictive-modelling-with-gwr",
    "href": "InClassEx/ICE12/ICE12.html#predictive-modelling-with-gwr",
    "title": "In Class Exercise 12",
    "section": "Predictive Modelling with gwr",
    "text": "Predictive Modelling with gwr\n\nComputing bw\n\ngwr_bw_train_ad &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nAdaptive bandwidth: 625 CV score: 3.459022e+12 \nAdaptive bandwidth: 394 CV score: 3.231824e+12 \nAdaptive bandwidth: 250 CV score: 2.914787e+12 \nAdaptive bandwidth: 162 CV score: 2.610975e+12 \nAdaptive bandwidth: 107 CV score: 2.240102e+12 \nAdaptive bandwidth: 73 CV score: 1.971693e+12 \nAdaptive bandwidth: 52 CV score: 1.797415e+12 \nAdaptive bandwidth: 39 CV score: 1.659617e+12 \nAdaptive bandwidth: 31 CV score: 1.573855e+12 \nAdaptive bandwidth: 26 CV score: 1.550365e+12 \nAdaptive bandwidth: 23 CV score: 1.543003e+12 \nAdaptive bandwidth: 21 CV score: 1.520091e+12 \nAdaptive bandwidth: 19 CV score: 1.516242e+12 \nAdaptive bandwidth: 19 CV score: 1.516242e+12 \n\ngwr_bw_train_ad\n\n[1] 19\n\n\n\nwrite_rds(gwr_bw_train_ad, \"data/model/gwr_bw_train_ad.rds\")\n\n\n\nModel Calibration\n\ngwr_ad &lt;- gwr.basic(formula = resale_price ~ floor_area_sqm +\n                      storey_order + remaining_lease_mths + \n                      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                      PROX_MRT + PROX_PARK + PROX_MALL +\n                      PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                      WITHIN_1KM_PRISCH,\n                    data=train_data,\n                    bw=20, \n                    kernel = 'gaussian', \n                    adaptive=TRUE,\n                    longlat = FALSE)\n\n\n\nModel output\n\ngwr_ad\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-11-23 00:50:53.182344 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data, bw = 20, kernel = \"gaussian\", adaptive = TRUE, \n    longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 1000\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-167624  -37265    -415   34811  224601 \n\n   Coefficients:\n                            Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)              115703.7    34303.4   3.373 0.000773 ***\n   floor_area_sqm             2778.6      292.3   9.507  &lt; 2e-16 ***\n   storey_order              12698.2     1071.0  11.857  &lt; 2e-16 ***\n   remaining_lease_mths        350.2       14.6  23.997  &lt; 2e-16 ***\n   PROX_CBD                 -16225.6      630.1 -25.751  &lt; 2e-16 ***\n   PROX_ELDERLYCARE         -11330.9     3220.8  -3.518 0.000455 ***\n   PROX_HAWKER              -19964.1     4021.1  -4.965 8.10e-07 ***\n   PROX_MRT                 -39652.5     5412.3  -7.326 4.92e-13 ***\n   PROX_PARK                -15878.3     4609.2  -3.445 0.000595 ***\n   PROX_MALL                -15910.9     6438.1  -2.471 0.013628 *  \n   PROX_SUPERMARKET         -18928.5    13305.0  -1.423 0.155150    \n   WITHIN_350M_KINDERGARTEN   9309.7     2024.3   4.599 4.80e-06 ***\n   WITHIN_350M_CHILDCARE     -1619.5     1181.0  -1.371 0.170572    \n   WITHIN_350M_BUS            -447.7      738.7  -0.606 0.544624    \n   WITHIN_1KM_PRISCH        -10698.0     1543.5  -6.931 7.55e-12 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 61270 on 985 degrees of freedom\n   Multiple R-squared: 0.7424\n   Adjusted R-squared: 0.7387 \n   F-statistic: 202.7 on 14 and 985 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 3.698259e+12\n   Sigma(hat): 60874.22\n   AIC:  24901.01\n   AICc:  24901.56\n   BIC:  24090.05\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 20 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -1647495.07  -203039.46    21050.95   251275.08\n   floor_area_sqm              -2149.12     1268.92     2048.29     3326.85\n   storey_order                 3365.00     8129.33    10361.19    13742.14\n   remaining_lease_mths         -484.21      344.48      422.92      500.81\n   PROX_CBD                   -97888.12   -23044.49   -10750.13    -1326.37\n   PROX_ELDERLYCARE          -255826.00   -25292.82    -5741.24    17547.84\n   PROX_HAWKER               -213461.39   -35563.31   -10817.70    20192.39\n   PROX_MRT                  -296189.93   -92629.43   -54837.40   -20559.78\n   PROX_PARK                 -219213.06   -33419.69   -16548.03     8386.74\n   PROX_MALL                 -256659.93   -34619.62     5989.58    47120.69\n   PROX_SUPERMARKET          -174402.95   -42360.00    -6384.64    30924.51\n   WITHIN_350M_KINDERGARTEN   -41748.94    -8647.88    -2507.24     5252.70\n   WITHIN_350M_CHILDCARE      -14443.49    -2184.58     1408.12     3549.91\n   WITHIN_350M_BUS            -10071.24    -1732.17      523.22     2243.22\n   WITHIN_1KM_PRISCH          -50154.85    -3829.51      348.36     4939.32\n                                  Max.\n   Intercept                1318816.00\n   floor_area_sqm              7805.67\n   storey_order               26793.01\n   remaining_lease_mths         712.27\n   PROX_CBD                  114697.16\n   PROX_ELDERLYCARE          178899.93\n   PROX_HAWKER               134635.39\n   PROX_MRT                  118801.84\n   PROX_PARK                  88669.56\n   PROX_MALL                 321779.25\n   PROX_SUPERMARKET          168573.21\n   WITHIN_350M_KINDERGARTEN   40627.22\n   WITHIN_350M_CHILDCARE      15751.11\n   WITHIN_350M_BUS            11712.81\n   WITHIN_1KM_PRISCH          30401.51\n   ************************Diagnostic information*************************\n   Number of data points: 1000 \n   Effective number of parameters (2trace(S) - trace(S'S)): 403.5544 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 596.4456 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 24082.29 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 23420.43 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 24371.42 \n   Residual sum of squares: 624405293006 \n   R-square value:  0.9565036 \n   Adjusted R-square value:  0.9270246 \n\n   ***********************************************************************\n   Program stops at: 2024-11-23 00:50:54.314809 \n\n\n\n\nComputing Test Data bw\n\ngwr_bw_test_ad &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\n\nwrite_rds(gwr_bw_test_ad,\n          \"data/model/gwr_bw_test_ad.rds\")\n\n\n\nPredicting with Test Data\n\ngwr_pred &lt;- gwr.predict(formula = resale_price ~ floor_area_sqm +\n                          storey_order + remaining_lease_mths + PROX_CBD +\n                          PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + \n                          PROX_PARK + PROX_MALL + PROX_SUPERMARKET + \n                          WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE +\n                          WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n                        data=train_data, \n                        predictdata = test_data, \n                        bw=20, \n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)\n\n\n\nSaving Predicted Values\n\ngwr_pred_df &lt;-as.data.frame(\n  gwr_pred$SDF$prediction) %&gt;%\n  rename(gwr_pred = \"gwr_pred$SDF$prediction\")"
  },
  {
    "objectID": "InClassEx/ICE12/ICE12.html#predictive-modelling-with-rf",
    "href": "InClassEx/ICE12/ICE12.html#predictive-modelling-with-rf",
    "title": "In Class Exercise 12",
    "section": "Predictive Modelling with RF",
    "text": "Predictive Modelling with RF\n\nData Preparation\n\ncoords &lt;- st_coordinates(HDB_sample)\ncoords_train &lt;- st_coordinates(train_data)\ncoords_test &lt;- st_coordinates(test_data)\n\n\ntrain_data_nogeom &lt;- train_data %&gt;%\n  st_drop_geometry()\n\n\n\nCalibrating RF Model\n\nset.seed(1234)\nrf &lt;- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data_nogeom)\n\n\n\nModel Output\n\nrf\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      1000 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       2289284270 \nR squared (OOB):                  0.8406868 \n\n\n\n\nPreparing Test Data\n\ntest_data_nogeom &lt;- cbind(\n  test_data, coords_test) %&gt;%\n  st_drop_geometry()\n\n\n\nPredicting with RF\n\nrf_pred &lt;- predict(rf, \n                   data = test_data_nogeom)\n\n\n\nSaving Predicted Values\n\nrf_pred_df &lt;- as.data.frame(rf_pred$predictions) %&gt;%\n  rename(rf_pred = \"rf_pred$predictions\")\n\n\ngrf_ad &lt;- grf(resale_price ~ floor_area_sqm +\n                            storey_order + remaining_lease_mths +\n                            PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL +\n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n              dframe = train_data_nogeom,\n              bw=20,\n              kernel=\"adaptive\",\n              coords=coords_train)\n\n\nNumber of Observations: 1000\n\n\nNumber of Independent Variables: 14\n\n\nKernel: Adaptive\nNeightbours: 20\n\n\n\n--------------- Global ML Model Summary ---------------\n\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom, num.trees = 500, mtry = 4, importance = \"impurity\",      num.threads = NULL) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      1000 \nNumber of independent variables:  14 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       2086962998 \nR squared (OOB):                  0.8547665 \n\n\n\nImportance:\n\n\n          floor_area_sqm             storey_order     remaining_lease_mths \n            6.767780e+11             1.470993e+12             2.516452e+12 \n                PROX_CBD         PROX_ELDERLYCARE              PROX_HAWKER \n            4.543871e+12             5.202434e+11             6.545631e+11 \n                PROX_MRT                PROX_PARK                PROX_MALL \n            8.624890e+11             5.828225e+11             4.434549e+11 \n        PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN    WITHIN_350M_CHILDCARE \n            3.810986e+11             1.149449e+11             2.338211e+11 \n         WITHIN_350M_BUS        WITHIN_1KM_PRISCH \n            2.251842e+11             8.079436e+11 \n\n\n\nMean Square Error (Not OOB): 397461053.639\n\n\nR-squared (Not OOB) %: 97.231\n\n\nAIC (Not OOB): 19830.608\n\n\nAICc (Not OOB): 19831.095\n\n\n\n--------------- Local Model Summary ---------------\n\n\n\nResiduals OOB:\n\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-290000.0  -22215.2     905.0    -746.9   20462.3  275662.5 \n\n\n\nResiduals Predicted (Not OOB):\n\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-38505.22  -2770.36     24.16     47.37   2987.97  43840.08 \n\n\n\nLocal Variable Importance:\n\n\n                               Min          Max        Mean         StD\nfloor_area_sqm                   0  93278995599  6575744545 12087922969\nstorey_order              34870318 174192955121  6812649419 17451724590\nremaining_lease_mths     137897472 132095808248 17007211910 27837303576\nPROX_CBD                 107422840  87057329406  7793599342 12422904648\nPROX_ELDERLYCARE         166010587  59355605707  6335757687  9912058314\nPROX_HAWKER               78690036  78319125471  5982025240 10140455465\nPROX_MRT                 154545089 117772655204  7301323479 14418114776\nPROX_PARK                174698746  93581529085  6265426129 12030113423\nPROX_MALL                141570815 111699299922  8063115561 14793304208\nPROX_SUPERMARKET         116967870  69193972053  5138917276  8445851637\nWITHIN_350M_KINDERGARTEN         0  44304708703  1696038416  3938936793\nWITHIN_350M_CHILDCARE     28472212 114902583686  4307184763 10530916242\nWITHIN_350M_BUS           43429224  80697474507  3258806210  6312297041\nWITHIN_1KM_PRISCH                0  29155224346  1919773202  3583137467\n\n\n\nMean squared error (OOB): 2745834471.466\n\n\nR-squared (OOB) %: 80.872\n\n\nAIC (OOB): 21763.351\n\n\nAICc (OOB): 21763.839\n\n\nMean squared error Predicted (Not OOB): 56937099.82\n\n\nR-squared Predicted (Not OOB) %: 99.603\n\n\nAIC Predicted (Not OOB): 17887.458\n\n\nAICc Predicted (Not OOB): 17887.946\n\n\n\nCalculation time (in seconds): 29.4448\n\n\n\n\nPredicting with Test Data\n\ngrf_pred &lt;- predict.grf(grf_ad, \n                         test_data_nogeom,\n                         x.var.name=\"X\",\n                         y.var.name=\"Y\", \n                         local.w=1,\n                         global.w=0)\n\n\n\nSaving Predicted Values\n\ngrf_pred_df &lt;- as.data.frame(grf_pred)"
  },
  {
    "objectID": "InClassEx/ICE12/ICE12.html#model-comparison",
    "href": "InClassEx/ICE12/ICE12.html#model-comparison",
    "title": "In Class Exercise 12",
    "section": "Model Comparison",
    "text": "Model Comparison\n\nCombine Model Outputs\n\ntest_data_pred &lt;- test_data %&gt;%\n  select(resale_price) %&gt;%\n  cbind(gwr_pred_df) %&gt;%\n  cbind(rf_pred_df) %&gt;%\n  cbind(grf_pred_df)\n\n\n\nTransposing Data\n\ntest_longer &lt;- test_data_pred %&gt;%\n  st_drop_geometry() %&gt;%\n  pivot_longer(cols = ends_with(\"pred\"), \n               names_to = \"model\", \n               values_to = \"predicted\")\n\n\n\nRenaming\n\nmodel_labels &lt;- c(\n  gwr_pred = \"gwr\",\n  rf_pred = \"Random Forest\",\n  grf_pred = \"gwRF\")\n\ntest_longer &lt;- test_longer %&gt;%\n  mutate(model = recode(\n    model, !!!model_labels))\n\n\n\nComputing RMSE\n\nrmse_results &lt;- test_longer %&gt;%\n  group_by(model) %&gt;%\n  rmse(truth = resale_price, \n       estimate = predicted) %&gt;%\n  rename(rmse = .estimate) %&gt;%\n  select(model, rmse)"
  },
  {
    "objectID": "InClassEx/ICE12/ICE12.html#model-comparison-visualization",
    "href": "InClassEx/ICE12/ICE12.html#model-comparison-visualization",
    "title": "In Class Exercise 12",
    "section": "Model Comparison Visualization",
    "text": "Model Comparison Visualization\n\nBar Chart\n\nggplot(rmse_results, \n       aes(x = reorder(model, rmse), \n           y = rmse, \n           fill = \"skyblue\")) +\n  geom_bar(stat = \"identity\", \n           fill = \"skyblue\", \n           color = \"black\", \n           width = 0.7) +\n  labs(title = \"RMSE Comparison of Models\", \n       y = \"RMSE\", \n       x = \"Model\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nScatter Plots\n\ntest_longer &lt;- test_longer %&gt;%\n  left_join(rmse_results, \n            by = \"model\")\n\nggplot(data = test_longer,\n       aes(x = predicted,\n           y = resale_price)) +\n  facet_wrap(~ model) +\n  geom_point() +\n  geom_text(data = test_longer, \n            aes(x = Inf, y = Inf, \n                label = paste(\"RMSE:\", round(rmse, 2))),\n            hjust = 1.1, vjust = 1.1, \n            color = \"black\", size = 4)\n\n\n\n\n\n\n\n\n\n\nVariable Importance\nPreparing Output\n\nvar_imp &lt;- data.frame(\n  Variable = names(grf_ad$Global.Model$variable.importance),\n  Importance = grf_ad$Global.Model$variable.importance\n)\n\n\nggplot(var_imp, aes(x = reorder(Variable, \n                                Importance), \n                    y = Importance)) +\n  geom_bar(stat = \"identity\", \n           fill = \"skyblue\") +\n  coord_flip() +\n  labs(\n    title = \"Variable Importance from Ranger Model\",\n    x = \"Variables\",\n    y = \"Importance\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "TakehomeEx/THE02/THE02.html",
    "href": "TakehomeEx/THE02/THE02.html",
    "title": "Take Home Exercise 2: Thailand Drug Abuse",
    "section": "",
    "text": "This exercise aims to analyze the spatial distribution of drug offenses in Thailand from 2017 to 2022. Geospatial analysis techniques will be employed to understand the patterns of drug offenses across provinces and identify any spatial clustering or autocorrelation in the data."
  },
  {
    "objectID": "TakehomeEx/THE02/THE02.html#introduction",
    "href": "TakehomeEx/THE02/THE02.html#introduction",
    "title": "Take Home Exercise 2: Thailand Drug Abuse",
    "section": "1.0 Introduction",
    "text": "1.0 Introduction\nDrug abuse in Thailand has long been a critical issue, impacting public health, security, and socioeconomic conditions. Over the years, the problem has evolved, with various regions experiencing different degrees of drug-related challenges. This study explores the trends, spatial patterns, and hotspots of drug abuse at the provincial level in Thailand from 2017 to 2022, providing insights into how the problem has shifted geographically over time.\n\n1.1 Timeline\nThe analysis focuses on the period from 2017 to 2022, a critical timeline marked by several national efforts to address drug trafficking and consumption. The timeline was chosen for its relevance to recent policy changes and enforcement strategies aimed at curbing drug abuse. During this period, the Thai government has enacted various anti-drug measures, alongside increasing concerns over the trafficking of methamphetamines and other illicit substances from neighboring countries.\n\n2017 - 2019: The early part of the timeline saw persistent hotspots around the capital, Bangkok, and some southern regions. Key interventions during this period were focused on disrupting drug trafficking networks, particularly those connected to cross-border trade routes.\n2019 - 2021: As drug abuse patterns shifted, there was a notable increase in spatial clustering in southern Thailand, particularly around key provinces such as Nakhon Si Thammarat and Surat Thani. This coincided with an escalation in the movement of drugs across the Andaman coast, leading to new hotspots emerging in these regions.\n2022: The final year of analysis highlights the culmination of these trends, with significant clustering in both the southern and central regions, alongside persistent cold spots in northern Thailand. Despite ongoing government efforts, the rise in drug-related offenses in certain provinces reflects the challenges in containing the problem on a regional level.\n\n\n\n1.2 Key Regions\n\nCentral Thailand and Bangkok: Historically, Bangkok and its surrounding provinces, including Samut Prakan, have been central to drug-related activities due to their population density and role as transportation hubs. Bangkok’s proximity to high-trafficking corridors makes it a critical area for both drug consumption and distribution.\nSouthern Thailand: The southern provinces, particularly Nakhon Si Thammarat, Surat Thani, and Phuket, have become increasingly prominent in the later years of the analysis.\nNorthern and Northeastern Thailand: In contrast to the central and southern regions, northern provinces such as Nakhon Sawan, Chai Nat, and Suphan Buri have consistently emerged as areas with relatively low levels of drug abuse"
  },
  {
    "objectID": "TakehomeEx/THE02/THE02.html#data-collection",
    "href": "TakehomeEx/THE02/THE02.html#data-collection",
    "title": "Take Home Exercise 2: Thailand Drug Abuse",
    "section": "2.0 Data Collection",
    "text": "2.0 Data Collection\n\n2.1 Thailand Drug Offense Data\nThe dataset from Kaggle contains information on drug offenses in Thailand from 2017 to 2022. The original data is sourced from the Office of the Narcotics Control Board.\n\n\n2.2 GIS Data\nRelevant Geospatial data was gathered from Humanitarian Data Exchange (HDX)"
  },
  {
    "objectID": "TakehomeEx/THE02/THE02.html#data-wrangling",
    "href": "TakehomeEx/THE02/THE02.html#data-wrangling",
    "title": "Take Home Exercise 2: Thailand Drug Abuse",
    "section": "3.0 Data Wrangling",
    "text": "3.0 Data Wrangling\n\n3.1 Loading Packages\n\npacman::p_load(sf, tidyverse, knitr, viridis, patchwork, gridExtra, kableExtra, sfdep, tmap, tmaptools, patchwork, scales, gganimate, spdep, ggrepel, car)\n\n\n\n3.2 Loading Data\nTo aid in our analysis, two sets of data will be imported:\n\nDrug Offense Data: This Kaggle dataset examines statistics related to different types of drug offenses in Thailand, categorized by fiscal year. The data was sourced from the Office of the Narcotics Control Board.\nProvincial Boundary Data: These shapefiles from Humanitarian Data Exchange (HDX) contain the provincial boundaries of Thailand.\n\n\ndrug_offenses_unfiltered &lt;- read_csv(\"data/aspatial/thai_drug_offenses_2017_2022.csv\")\n\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nExploring the Drug Offenses Data\n\nhead(drug_offenses_unfiltered, n=10)\n\n# A tibble: 10 × 5\n   fiscal_year types_of_drug_offenses no_cases province_th   province_en        \n         &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;              \n 1        2017 drug_use_cases            11871 กรุงเทพมหานคร  Bangkok            \n 2        2017 drug_use_cases              200 ชัยนาท         Chai Nat           \n 3        2017 drug_use_cases              553 นนทบุรี         Nonthaburi         \n 4        2017 drug_use_cases              450 ปทุมธานี        Pathum Thani       \n 5        2017 drug_use_cases              378 พระนครศรีอยุธยา Phra Nakhon Si Ayu…\n 6        2017 drug_use_cases              727 ลพบุรี          Loburi             \n 7        2017 drug_use_cases              820 สมุทรปราการ    Samut Prakan       \n 8        2017 drug_use_cases               69 สระบุรี         Saraburi           \n 9        2017 drug_use_cases              127 สิงห์บุรี         Sing Buri          \n10        2017 drug_use_cases              208 อ่างทอง        Ang Thong          \n\n\nA glimpse of the dataset reveals some interesting points. There are actually multiple types of drug offenses being examined here, though it definitely seems like the dominant type is drug_use_cases. We also have access to the number of cases for each province for fiscal years 2017 to 2022.\nLoading Shapefiles\n\nadm1_unfiltered &lt;- st_read(\"data/adms\", layer = \"tha_admbnda_adm1_rtsd_20220121\")\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\yeoba\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\TakehomeEx\\THE02\\data\\adms' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\n\nWe check if there are any missing rows for our our drug offenses dataset. Thankfully, it seems like there aren’t any.\n\nall_filled &lt;- all(!is.na(drug_offenses_unfiltered$province_th) & !is.na(drug_offenses_unfiltered$province_en))\nprint(all_filled)\n\n[1] TRUE\n\n\n\ndrug_offenses &lt;- drug_offenses_unfiltered %&gt;%\n  mutate(province_en = case_when(\n    province_en == \"buogkan\" ~ \"Bueng Kan\",\n    province_en == \"Loburi\" ~ \"Lop Buri\",\n    TRUE ~ province_en\n  ))\n\n\ndrug_offenses &lt;- drug_offenses %&gt;% select(-province_th)\nadm1 &lt;- adm1_unfiltered %&gt;% select(-ADM1_TH, -ADM1ALT1TH, -ADM1ALT2TH, -ADM0_TH, \n                                   -ADM0_EN, -ADM1ALT1EN, -ADM1ALT2EN)\n\n\nprovince_totals &lt;- drug_offenses %&gt;%\n  group_by(province_en) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE))\n\nadm1_data &lt;- adm1 %&gt;%\n  left_join(province_totals, by = c(\"ADM1_EN\" = \"province_en\"))\n\n\n\n3.3 Exploratory Data Analysis\nOverall Map\nThe choropleth map of Thailand below shows the distribution of drug use cases across provinces. The color intensity represents the number of cases, with darker shades indicating higher numbers.\n\nchoropleth_map &lt;- ggplot(adm1_data) +\n   geom_sf(aes(fill = total_cases)) +\n   scale_fill_viridis(\n     option = \"plasma\",\n     name = \"Number of Cases\",\n    trans = \"log10\",\n     breaks = scales::breaks_log(n = 5),\n     labels = scales::label_number(accuracy = 1)\n   ) +\n   theme_minimal() +\n   labs(\n     title = \"Drug Use Cases in Thailand (2017-2022)\",\n     subtitle = \"Distribution across provinces\"\n   ) +\n   theme(\n     plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n     plot.title.position = \"plot\",\n     plot.subtitle = element_text(size = 12, hjust = 0.5),\n     legend.position = \"right\",\n     axis.text.x = element_text(angle = 45, hjust = 1),\n     panel.grid.major = element_line(color = \"white\")\n   )\n\nprint(choropleth_map)\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe Northern and Northeastern provinces of Thailand exhibit a notably higher concentration of drug use cases. Border provinces often face more significant challenges related to cross-border drug trafficking, which could explain the concentration.\nWhile the Northern and parts of Central Thailand display the highest number of cases, the Southern provinces and a few other parts of the country have a considerably lower concentration of cases.\n\nDrug Offenses by Fiscal Year\nNext, we want to visualize how the number of drug offenses has evolved over the years. This line plot will help us identify any trends or patterns in the data.\n\nyearly_totals &lt;- drug_offenses %&gt;%\n  group_by(fiscal_year) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE))\n\ntemporal_plot &lt;- ggplot(yearly_totals, aes(x = fiscal_year, y = total_cases)) +\n  geom_line(aes(group = 1), color = \"blue\", alpha = 0.7) +\n  geom_point(color = \"blue\", size = 3) +\n  geom_smooth(aes(group = 1), formula = y ~ x, method = \"loess\", se = TRUE, \n              color = \"red\", fill = \"pink\", alpha = 0.3, linewidth = 1.2) +\n  labs(title = \"Trend of Drug Offense Cases in Thailand (2017-2022)\",\n       x = \"Year\", y = \"Number of Cases\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.title = element_text(size = 12),\n    legend.position = \"none\"\n  ) +\n  scale_y_continuous(labels = scales::comma) +\n  scale_x_continuous(breaks = seq(min(yearly_totals$fiscal_year), max(yearly_totals$fiscal_year), by = 1))\n\nprint(temporal_plot)\n\n\n\n\n\n\n\n\nKey Observations:\nThe number of drug offense cases in Thailand has exhibited a fluctuating pattern between 2017 and 2022. The graph shows an overall upward trend until 2021, followed by a significant drop in 2022.\nAnimated Choropleth Map\n\nyearly_province_totals &lt;- drug_offenses %&gt;%\n  group_by(province_en, fiscal_year) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE), .groups = 'drop')\n\nadm1_data_yearly &lt;- adm1 %&gt;%\n  left_join(yearly_province_totals, by = c(\"ADM1_EN\" = \"province_en\"))\n\nanimated_choropleth &lt;- ggplot(adm1_data_yearly) +\n  geom_sf(aes(fill = total_cases)) +\n  scale_fill_viridis_c(\n    option = \"plasma\",\n    name = \"Number of Cases\",\n    trans = \"log10\",\n    breaks = scales::breaks_log(n = 5),\n    labels = scales::label_number(accuracy = 1)\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Drug Use Cases in Thailand\",\n    subtitle = \"Fiscal Year: {current_frame}\"\n  ) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 14, hjust = 0.5),\n    legend.position = \"right\",\n    axis.text.x = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank()\n  ) +\n  gganimate::transition_manual(fiscal_year) +\n  gganimate::ease_aes('linear')\n\n# animated_choropleth_render &lt;- gganimate::animate(animated_choropleth, \n#                                       nframes = length(unique(adm1_data_yearly$fiscal_year)), \n#                                       fps = 1, \n#                                       width = 800, \n#                                       height = 600)\n# \n# gganimate::anim_save(\"animated_choropleth_drug_offenses.gif\", animated_choropleth_render)\n\n\n\n\nAnimated Choropleth Map of Drug Offenses in Thailand\n\n\nKey Observations:\nThe animated choropleth map provides a dynamic visualization of how drug offenses have evolved across provinces in Thailand from 2017 to 2022. The fluctuating patterns and changes in the intensity of cases over the years are clearly visible. In particular, 2019 and 2021 are where the two peaks of drug offenses are observed.\nHighest Drug Offense Cases by Province\nWe’ve seen the overall distribution of drug offenses. Let’s now take a more focused approach and identify the provinces with the highest number of drug offense cases.\n\nprovince_totals &lt;- drug_offenses %&gt;%\n  group_by(province_en) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_cases)) %&gt;%\n  top_n(15, total_cases)\n\nbar_chart &lt;- ggplot(province_totals, aes(x = reorder(province_en, total_cases), y = total_cases, fill = total_cases)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  scale_fill_viridis(option = \"D\", direction = -1) +\n  labs(\n    title = \"Top 15 Provinces with Highest Drug Offense Cases\",\n    x = \"Province\",\n    y = \"Total Number of Cases\",\n    fill = \"Total Cases\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 8)\n  ) +\n  scale_y_continuous(labels = scales::comma)\n\nprint(bar_chart)\n\n\n\n\n\n\n\n\nKey Observations:\n\nBangkok has the highest number of drug offense cases by a significant margin. This is likely due to its high population density, and its role as a major hub for transportation, trade, and organized crime activities.\nThe southern provinces of Nakhon Si Thammarat and Songkhla also report high numbers of drug offenses. These provinces might experience high drug-related activity due to their geographic location near drug trafficking routes, particularly in the south where drug smuggling may be more prevalent.\nMany of the provinces with high numbers of drug offenses, such as Surat Thani, Chon Buri, and Samut Prakan, are located in central and southern Thailand. This could suggest these regions are hotspots for drug-related activity, possibly due to their access to ports, highways, and urban centers that facilitate drug distribution.\n\nExamining Types of Drug Offenses\nEarlier, we noticed that there are multiple types of drug offenses in the dataset. Let’s explore the different types of drug offenses and their distribution across provinces. But first, we need to conduct some data preprocessing; the offense types are a little awkwardly named in the original dataset, and thus somewhat difficult to interpret.\n\noffense_names &lt;- c(\n  \"conspiracy_cases\" = \"Conspiracy\",\n  \"drug_use_cases\" = \"Drug Use\",\n  \"export_cases\" = \"Export\",\n  \"import_cases\" = \"Import\",\n  \"possession_cases\" = \"Possession\",\n  \"possession_with_intent_to_distribute_cases\" = \"Possession with Intent to Distribute\",\n  \"production_cases\" = \"Production\",\n  \"trafficking_cases\" = \"Trafficking\"\n)\n\nrename_suspects &lt;- function(x) {\n  ifelse(\n    str_starts(x, \"suspects_in_\"),\n    paste0(\"Suspects (\", offense_names[str_remove(x, \"suspects_in_\")], \")\"),\n    x\n  )\n}\n\ndrug_offenses_cleaned &lt;- drug_offenses %&gt;%\n  mutate(\n    types_of_drug_offenses = case_when(\n      types_of_drug_offenses %in% names(offense_names) ~ offense_names[types_of_drug_offenses],\n      TRUE ~ types_of_drug_offenses\n    ),\n    types_of_drug_offenses = rename_suspects(types_of_drug_offenses)\n  )\n\nunique_offenses &lt;- unique(drug_offenses_cleaned$types_of_drug_offenses)\nprint(\"Updated Types of Drug Offenses:\")\n\n[1] \"Updated Types of Drug Offenses:\"\n\nfor (offense in sort(unique_offenses)) {\n  print(offense)\n}\n\n[1] \"Conspiracy\"\n[1] \"Drug Use\"\n[1] \"Export\"\n[1] \"Import\"\n[1] \"Possession\"\n[1] \"Possession with Intent to Distribute\"\n[1] \"Production\"\n[1] \"Suspects (Conspiracy)\"\n[1] \"Suspects (Drug Use)\"\n[1] \"Suspects (Export)\"\n[1] \"Suspects (Import)\"\n[1] \"Suspects (Possession with Intent to Distribute)\"\n[1] \"Suspects (Possession)\"\n[1] \"Suspects (Production)\"\n[1] \"Suspects (Trafficking)\"\n[1] \"Trafficking\"\n\n\nDistribution of Drug Offenses by Type\nWe explore the distribution of drug offenses by type.\n\noffense_types_summary &lt;- drug_offenses_cleaned %&gt;%\n  filter(!grepl(\"^Suspects\", types_of_drug_offenses)) %&gt;%\n  group_by(types_of_drug_offenses) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_cases))\n\n# Create bar graph\nbar_graph &lt;- ggplot(offense_types_summary, aes(x = reorder(types_of_drug_offenses, -total_cases), y = total_cases, fill = total_cases)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_viridis_c(option = \"viridis\") +\n  labs(\n    title = \"Types of Drug Offenses in Thailand\",\n    x = \"Type of Offense\",\n    y = \"Total Number of Cases\",\n    fill = \"Total Cases\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 14),\n    legend.position = \"right\"\n  ) +\n  scale_y_continuous(labels = scales::comma)\n\nprint(bar_graph)\n\n\n\n\n\n\n\n\nKey Observations:\nOf the types of drug offenses, Drug Use and Possession are the most common offenses reported in Thailand. Whereas, Trafficking and Production offenses are less frequent. This distribution suggests that there are more people involved in the consumption and possession of drugs than in the production and trafficking of drugs.\nTop Drug Offenses Across Years\nLet’s examine how the numbers for drug use and possession have evolved across the years.\n\ntop_3_offenses &lt;- drug_offenses_cleaned %&gt;%\n  filter(!grepl(\"^Suspects\", types_of_drug_offenses)) %&gt;%\n  group_by(types_of_drug_offenses) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE)) %&gt;%\n  top_n(3, total_cases) %&gt;%\n  pull(types_of_drug_offenses)\n\nyearly_top_3_offenses &lt;- drug_offenses_cleaned %&gt;%\n  filter(types_of_drug_offenses %in% top_3_offenses) %&gt;%\n  group_by(fiscal_year, types_of_drug_offenses) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE), .groups = 'drop')\n\nline_chart &lt;- ggplot(yearly_top_3_offenses, aes(x = fiscal_year, y = total_cases, color = types_of_drug_offenses)) +\n  geom_line(linewidth = 1) +\n  geom_point(size = 3) +\n  scale_color_viridis_d(option = \"viridis\") +\n  labs(\n    title = \"Top 3 Types of Drug Offenses Across Years\",\n    x = \"Fiscal Year\",\n    y = \"Total Number of Cases\",\n    color = \"Type of Offense\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14),\n    legend.position = \"bottom\"\n  ) +\n  scale_y_continuous(labels = scales::comma)\n\nprint(line_chart)\n\n\n\n\n\n\n\n\nKey Observations:\n\nDrug Use cases have consistently been the most prevalent type of drug offense across all years. There are two noticeable peaks in 2019 and 2021, which is congruent with the overall trend of drug offenses we observed earlier.\nPossession cases have shown a gradual general decline over the years. This could indicate a shift in law enforcement focus or changes in drug-related activities in the country.\nPossession with Intent to Distribute cases have remained relatively stable over the years, with a significant decrease in 2022. This type of drug offense is less common, which is expected given the nature of the offense.\n\nScatter-Plot Analysis: Suspects vs. Offenses\nLet’s not forget that in our data, we also have access to the number of suspects for each type of drug offense. We can utilize that data to create a scatter plot that compares the number of suspects to the number of offenses across provinces.\n\nplot_data &lt;- drug_offenses_cleaned %&gt;%\n  group_by(province_en, types_of_drug_offenses) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE), .groups = 'drop') %&gt;%\n  mutate(\n    category = if_else(str_starts(types_of_drug_offenses, \"Suspects\"), \"Suspects\", \"Offenses\"),\n    base_offense = if_else(\n      str_starts(types_of_drug_offenses, \"Suspects\"),\n      str_remove(types_of_drug_offenses, \"Suspects \\\\(|\\\\)\"),\n      types_of_drug_offenses\n    )\n  ) %&gt;%\n  pivot_wider(\n    names_from = category,\n    values_from = total_cases,\n    values_fill = list(total_cases = 0)\n  ) %&gt;%\n  group_by(province_en) %&gt;%\n  summarize(\n    Suspects = sum(Suspects, na.rm = TRUE),\n    Offenses = sum(Offenses, na.rm = TRUE)\n  ) %&gt;%\n  mutate(Total = Suspects + Offenses) %&gt;%\n  top_n(5, Total)\n\nscatter_plot &lt;- ggplot(plot_data, aes(x = Offenses, y = Suspects)) +\n  geom_point(aes(size = Offenses + Suspects, color = Suspects / Offenses), alpha = 0.7) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"gray50\") +\n  geom_text_repel(\n    aes(label = province_en), \n    size = 3, \n    max.overlaps = 10, \n    box.padding = 0.5\n  ) +\n  scale_x_log10(labels = scales::comma_format()) +\n  scale_y_log10(labels = scales::comma_format()) +\n  scale_size_continuous(range = c(2, 10), guide = \"none\") +\n  scale_color_viridis_c(option = \"plasma\", name = \"Suspect to Offense Ratio\") +\n  labs(\n    title = \"Drug-Related Suspects vs. Offenses by Province\",\n    x = \"Number of Offenses (log)\",\n    y = \"Number of Suspects (log)\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(size = 14),\n    axis.title = element_text(size = 10)\n  ) +\n  coord_equal()\n\nprint(scatter_plot)\n\n\n\n\n\n\n\n\nKey Observations:\n\nPoints above the line: The top five provinces are all located above the dashed line. This indicates that in each of these provinces, the number of drug-related suspects exceeds the number of drug offenses. In other words, for each reported offense, more than one individual is implicated or suspected.\nPotential multi-suspect cases: Since the number of suspects is higher than the number of offenses, it can be inferred that many drug-related cases involve multiple individuals working together. This could suggest a pattern of drug offenses that are often collaborative in nature, such as trafficking, distribution rings, or group involvement in drug use or sales.\nBangkok’s Prominent Role: Bangkok shows the highest number of both suspects and offenses, with a considerable lead over other provinces. This reinforces the idea that drug-related activities in Bangkok are substantial and likely involve more organized criminal groups with multiple participants per offense."
  },
  {
    "objectID": "TakehomeEx/THE02/THE02.html#global-measures-of-spatial-autocorrelation-gmsa",
    "href": "TakehomeEx/THE02/THE02.html#global-measures-of-spatial-autocorrelation-gmsa",
    "title": "Take Home Exercise 2: Thailand Drug Abuse",
    "section": "4.0 Global Measures of Spatial Autocorrelation (GMSA)",
    "text": "4.0 Global Measures of Spatial Autocorrelation (GMSA)\n\n4.1 Methodology\nBefore we proceed with the analysis, let’s outline the steps we will follow:\n\nTemporal Focus: As shown in the graphs earlier, there are 2 significant peaks in drug offenses in 2019 and 2021. We will also be considering the first year, 2017 to observe the trend over the years.\nDrug Offense Types: We will focus on the total number of drug offenses across provinces for each year. This prevents us from having tunnel-vision on a specific type of drug offense.\n\n\n\n4.2 Distribution of Drug Offenses\nWe start by plotting the choropleth maps for the selected years (2017, 2019, 2021) to visualize the distribution of drug offenses across provinces.\n\nselected_years &lt;- c(2017, 2019, 2021)\n\n\ndrug_offenses_2017 &lt;-  drug_offenses_cleaned %&gt;%\n  filter(fiscal_year == 2017) %&gt;%\n  group_by(province_en) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE))\n\n\nmap_2017_data &lt;- adm1 %&gt;%\n  left_join(drug_offenses_2017, by = c(\"ADM1_EN\" = \"province_en\"))\n\nmap_2017 &lt;- tm_shape(map_2017_data) +\n  tm_fill(\"total_cases\", title = \"Number of Cases\", style = \"quantile\") +\n  tm_borders() +\n  tm_layout(title = \"Drug Offenses in Thailand (2017)\",\n            legend.outside = TRUE)\n\nmap_2017\n\n\n\n\n\n\n\n\n\ndrug_offenses_2019 &lt;-  drug_offenses_cleaned %&gt;%\n  filter(fiscal_year == 2019) %&gt;%\n  group_by(province_en) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE))\n\n\nmap_2019_data &lt;- adm1 %&gt;%\n  left_join(drug_offenses_2019, by = c(\"ADM1_EN\" = \"province_en\"))\n\nmap_2019 &lt;- tm_shape(map_2019_data) +\n  tm_fill(\"total_cases\", title = \"Number of Cases\", style = \"quantile\") +\n  tm_borders() +\n  tm_layout(title = \"Drug Offenses in Thailand (2019)\",\n            legend.outside = TRUE)\n\nmap_2019\n\n\n\n\n\n\n\n\n\ndrug_offenses_2021 &lt;-  drug_offenses_cleaned %&gt;%\n  filter(fiscal_year == 2021) %&gt;%\n  group_by(province_en) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE))\n\n\nmap_2021_data &lt;- adm1 %&gt;%\n  left_join(drug_offenses_2021, by = c(\"ADM1_EN\" = \"province_en\"))\n\nmap_2021 &lt;- tm_shape(map_2021_data) +\n  tm_fill(\"total_cases\", title = \"Number of Cases\", style = \"quantile\") +\n  tm_borders() +\n  tm_layout(title = \"Drug Offenses in Thailand (2021)\",\n            legend.outside = TRUE)\n\nmap_2021\n\n\n\n\n\n\n\n\nKey Observations on Drug Offenses in Thailand (2017, 2019, 2021):\n\nGeneral Temporal Trends:\n\n\n2017: The initial distribution of drug offenses shows a more moderate concentration across the country, with fewer provinces experiencing very high levels of offenses. The highest concentrations appear in southern Thailand and central regions near Bangkok.\n2019: By 2019, the overall number of drug offenses seems to have risen significantly in certain provinces, particularly in the southern and northeastern regions are more prevalent than in 2017. The central region, near Bangkok, also shows increased activity.\n2021: In 2021, drug offenses remain highly concentrated, but there appears to be some redistribution. The northeastern region continues to show a high number of offenses, while some provinces that were less affected in 2017 are now more heavily impacted. Interestingly, southern Thailand still shows persistent high levels of offenses.\n\n\nRegional Consistencies:\n\n\nSouthern Thailand: Throughout all three years, southern Thailand consistently shows high levels of drug offenses. Provinces like Surat Thani, Nakhon Si Thammarat, and areas in the deep south maintain their darker colors across the years, indicating a persistent issue with drug-related activities. This suggests a long-standing problem with either drug trafficking or local demand in this region.\nCentral Thailand and Bangkok Area: The provinces surrounding Bangkok maintain moderate to high drug offense levels, indicating that the capital and its surrounding areas are key hubs for drug-related activities.\nNortheastern Region: The northeastern provinces remain consistently problematic.\n\n\nNotable Shifts:\n\n\n2019 Spike: The 2019 map shows a noticeable increase in drug offenses compared to 2017. More provinces in the northeast, central, and southern regions see elevated cases of drug offenses.\n2021 Redistribution: By 2021, while drug offenses remain high, there are some noticeable shifts. Some central provinces that showed higher concentrations in 2019 seem to experience a slight decrease by 2021. However, the northeastern and southern regions remain heavily impacted.\n\n\n\n4.3 Moran’s I Analysis\nMoran’s I is a measure of spatial autocorrelation that evaluates whether the values of a variable are clustered, dispersed, or randomly distributed across space. It ranges from -1 (dispersed) to 1 (clustered) with 0 indicating spatial randomness.\nFirst, a seed is set for reproducibility.\n\nset.seed(42)\n\nNext, we define a function to correct any missing neighbors in the spatial data. Then, we calculate the Moran’s I statistic and perform a Monte Carlo simulation to test the null hypothesis of spatial randomness.\n\ncorrect_neighbors &lt;- function(map_data, fiscal_year) {\n  suppressWarnings(\n    nb &lt;- st_contiguity(map_data)\n  )\n  no_neighbors &lt;- which(sapply(nb, function(x) length(x) == 1 && x[1] == 0))\n  cat(fiscal_year, \"- Observations with no neighbors:\", no_neighbors, \"\\n\")\n  \n  if (length(no_neighbors) &gt; 0) {\n    distances &lt;- st_distance(map_data)\n    \n    find_nearest &lt;- function(dist_vector) {\n      sorted_indices &lt;- order(dist_vector)\n      return(sorted_indices[2])\n    }\n    nearest_neighbors &lt;- sapply(no_neighbors, function(i) find_nearest(distances[i,]))\n    \n    for (i in seq_along(no_neighbors)) {\n      nb[[no_neighbors[i]]] &lt;- nearest_neighbors[i]\n    }\n    \n    cat(fiscal_year, \"- Nearest neighbors assigned to observations:\", no_neighbors, \"\\n\")\n    cat(fiscal_year, \"- Assigned nearest neighbors:\", nearest_neighbors, \"\\n\")\n  } else {\n    cat(fiscal_year, \"- All observations have neighbors. No corrections needed.\\n\")\n  }\n  \n  return(nb)\n}\n\ncalculate_morans_i &lt;- function(map_data, nb) {\n  weights &lt;- st_weights(nb, allow_zero = TRUE)\n  map_data$total_cases &lt;- as.numeric(map_data$total_cases)\n  moranI &lt;- global_moran_test(map_data$total_cases, nb, weights, zero.policy = TRUE)\n  \n  global_moran &lt;- global_moran_perm(map_data$total_cases, nb, weights, nsim = 999)\n  \n  return(list(moranI = moranI, global_moran = global_moran))\n}\n\nprocess_year &lt;- function(year, drug_offenses_cleaned, adm1) {\n  drug_offenses_year &lt;- drug_offenses_cleaned %&gt;%\n    filter(fiscal_year == year) %&gt;%\n    group_by(province_en) %&gt;%\n    summarize(total_cases = sum(no_cases, na.rm = TRUE))\n  \n  map_data &lt;- adm1 %&gt;%\n    left_join(drug_offenses_year, by = c(\"ADM1_EN\" = \"province_en\"))\n  \n  map_data &lt;- st_as_sf(map_data)\n  nb_corrected &lt;- correct_neighbors(map_data, year)\n  moranI_result &lt;- calculate_morans_i(map_data, nb_corrected)\n  \n  return(list(map_data = map_data, moranI = moranI_result))\n}\n\nyears &lt;- c(2017, 2019, 2021)\nresults &lt;- lapply(years, function(year) {\n  result &lt;- process_year(year, drug_offenses_cleaned, adm1)\n  cat(\"\\nResults for year\", year, \":\\n\")\n  print(result$moranI$moranI)\n  print(result$moranI$global_moran)\n  return(result)\n})\n\n2017 - Observations with no neighbors: 67 \n2017 - Nearest neighbors assigned to observations: 67 \n2017 - Assigned nearest neighbors: 66 \n\nResults for year 2017 :\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.3717, p-value = 0.008853\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.128902086      -0.013157895       0.003587702 \n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.1289, observed rank = 979, p-value = 0.042\nalternative hypothesis: two.sided\n\n2019 - Observations with no neighbors: 67 \n2019 - Nearest neighbors assigned to observations: 67 \n2019 - Assigned nearest neighbors: 66 \n\nResults for year 2019 :\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.4244, p-value = 0.007668\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.151582766      -0.013157895       0.004617477 \n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.15158, observed rank = 977, p-value = 0.046\nalternative hypothesis: two.sided\n\n2021 - Observations with no neighbors: 67 \n2021 - Nearest neighbors assigned to observations: 67 \n2021 - Assigned nearest neighbors: 66 \n\nResults for year 2021 :\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.767, p-value = 0.002829\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.195767388      -0.013157895       0.005701229 \n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.19577, observed rank = 989, p-value = 0.022\nalternative hypothesis: two.sided\n\n\nKey Observations:\nYear 2017 Results\n\nMoran’s I statistic: 0.1289\nP-value (test under randomization): 0.0089\nMonte Carlo p-value: 0.042\n\nConclusion: For 2017, the positive Moran’s I (0.1289) indicates moderate spatial clustering of drug offenses. The significant p-values (both under randomization and Monte Carlo) suggest that this clustering is not due to random chance, meaning provinces with similar levels of drug offenses tend to be geographically close.\nYear 2019 Results\n\nMoran’s I statistic: 0.1516\nP-value (test under randomization): 0.0077\nMonte Carlo p-value: 0.046\n\nConclusion: In 2019, the Moran’s I increased to 0.1516, indicating a slightly stronger spatial clustering of drug offenses compared to 2017. Again, the significant p-values suggest that the clustering is statistically significant and not random. This indicates that provinces with higher drug offenses were more clustered in 2019 than in 2017.\nYear 2021 Results\n\nMoran’s I statistic: 0.1958\nP-value (test under randomization): 0.0028\nMonte Carlo p-value: 0.022\n\nConclusion: By 2021, Moran’s I reached 0.1958, showing an even stronger degree of spatial clustering of drug offenses. The p-values are highly significant, meaning the clustering is strong and consistent. This suggests that by 2021, drug offenses in Thailand were even more spatially concentrated, with neighboring provinces experiencing similar levels of drug offenses.\nOverall Insights\n\nIncreasing Spatial Clustering: The Moran’s I statistic shows a consistent increase in spatial clustering of drug offenses from 2017 to 2021. This suggests that over time, drug offenses became more geographically concentrated, with neighboring provinces increasingly experiencing similar levels of offenses.\nStatistical Significance: In all three years, the p-values from both the Moran’s I test and Monte Carlo simulation are below 0.05, indicating that the observed spatial autocorrelation is statistically significant. This means that the clustering of drug offenses across provinces is not random but follows a discernible spatial pattern.\nPolicy Implications: The growing spatial clustering implies that drug offenses are becoming more localized or regionalized. Policymakers and law enforcement agencies might need to focus on regional interventions, particularly in hotspot clusters, to effectively combat drug-related issues.\n\nHypothesis Testing\nWe define two hypothesis for our analysis:\n\nNull Hypothesis (\\(H_o\\)): There is no spatial autocorrelation (spatial randomness)\nAlternative Hypothesis (\\(H_1\\)): There is positive spatial autocorrelation (greater than spatial randomness)\n\nThe results from 2017, 2019, and 2021 consistently reject the null hypothesis, confirming the presence of spatial autocorrelation.\n\n\n4.4 Visualization of Results\nWe’ve performed the Moran’s I analysis for 2017, 2019, and 2021. Let’s visualize the results using histograms of the Monte Carlo simulations and choropleth maps of drug offenses by province for each year.\nCombined Monte-Carlo and Choropleth Plots\n\ncreate_mc_histogram &lt;- function(global_moran, year) {\n  sim_data &lt;- data.frame(sim = global_moran$res)\n  obs_value &lt;- global_moran$statistic\n  \n  ggplot(sim_data, aes(x = sim)) +\n    geom_histogram(bins = 30, fill = \"lightblue\", color = \"black\") +\n    geom_vline(aes(xintercept = obs_value), color = \"red\", linetype = \"dashed\", size = 1) +\n    labs(title = paste(\"Monte Carlo Simulation -\", year),\n         x = \"Moran's I\", y = \"Frequency\") +\n    theme_minimal() +\n    theme(plot.title = element_text(size = 12))\n}\n\ncreate_choropleth &lt;- function(map_data, year) {\n  ggplot(map_data) +\n    geom_sf(aes(fill = total_cases), color = \"white\", size = 0.2) +\n    scale_fill_viridis_c(option = \"plasma\", trans = \"log\", \n                         name = \"Total Cases\\n(log scale)\", \n                         labels = scales::comma) +\n    labs(title = paste(\"Drug Offenses by Province -\", year)) +\n    theme_minimal() +\n    theme(legend.position = \"right\",\n          plot.title = element_text(size = 12))\n}\n\nfor (i in seq_along(years)) {\n  year &lt;- years[i]\n  result &lt;- results[[i]]\n  \n  mc_hist &lt;- create_mc_histogram(result$moranI$global_moran, year)\n  choro_map &lt;- create_choropleth(result$map_data, year)\n  \n  combined_plot &lt;- mc_hist + choro_map +\n    plot_layout(ncol = 2, widths = c(2, 3)) +\n    plot_annotation(\n      title = paste(\"Moran's I Analysis for\", year),\n      theme = theme(plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5))\n    ) &\n    theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10, unit = \"pt\"))\n  \n  print(combined_plot)\n}\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInterpretation of Results:\nYear 2017:\n\nMonte Carlo: The observed Moran’s I (0.1289) falls significantly to the right of the simulated distribution, suggesting that the spatial clustering of drug offenses in 2017 is higher than what would be expected by random chance. The Monte Carlo p-value (0.042) supports this, confirming spatial autocorrelation is present.\nChoropleth Map: The map shows provinces in the northern, central, and southern regions of Thailand with the highest concentrations of drug offenses. Notably, Bangkok and some southern provinces stand out as hotspots.\n\nYear 2019:\n\nMonte Carlo: The observed Moran’s I (0.1516) is slightly higher than in 2017, with the red dashed line further to the right, indicating stronger spatial autocorrelation. The p-value (0.046) confirms that the clustering is statistically significant.\nChoropleth Map: The distribution of drug offenses in 2019 shows a similar pattern to 2017, with more intense clustering in certain northern and central regions. There appears to be a slight increase in cases across northeastern provinces, indicating a growing concentration of offenses.\n\nYear 2021:\n\nMonte Carlo: The Moran’s I value (0.1958) is even higher than in 2019, with the red dashed line clearly separated from the main distribution of simulated values. The p-value (0.022) demonstrates stronger evidence of spatial clustering.\nChoropleth Map: The map for 2021 shows that the clustering of drug offenses has intensified, particularly in the northeastern and southern regions. The same key provinces remain prominent, but more areas are experiencing high levels of drug offenses, particularly along Thailand’s borders.\n\nTrend of Moran’s I Over Years\n\nmoran_i_trend &lt;- data.frame(\n  Year = years,\n  MoransI = sapply(results, function(r) r$moranI$moranI$statistic),\n  Pvalue = sapply(results, function(r) r$moranI$moranI$p.value)\n)\n\ny_range &lt;- range(moran_i_trend$MoransI)\ny_padding &lt;- diff(y_range) * 0.1\n\nimproved_trend_chart &lt;- ggplot(moran_i_trend, aes(x = Year, y = MoransI)) +\n  geom_line(size = 1, color = \"blue\") +\n  geom_point(size = 4, color = \"red\") +\n  geom_text(aes(label = sprintf(\"%.3f\\n(p=%.3f)\", MoransI, Pvalue)), \n            vjust = -1.5, hjust = 0.5, size = 3.5) +\n  scale_x_continuous(breaks = years) +\n  scale_y_continuous(limits = c(y_range[1] - y_padding, y_range[2] + y_padding * 3),\n                     labels = scales::label_number(accuracy = 0.001)) +\n  labs(title = \"Trend of Moran's I Over Years\",\n       x = \"Year\", \n       y = \"Moran's I Statistic\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 10),\n    panel.grid.minor = element_blank()\n  )\n\nprint(improved_trend_chart)\n\n\n\n\n\n\n\n\nKey Observations:\nThe main takeaway from the trend analysis is the consistent increase in Moran’s I statistic over the years. This upward trend indicates that spatial autocorrelation of drug offenses has become stronger over time. A higher Moran’s I statistic suggests that provinces with similar levels of drug offenses have become more geographically clustered, and not due to random chance."
  },
  {
    "objectID": "TakehomeEx/THE02/THE02.html#local-measures-of-spatial-autocorrelation-lmsa",
    "href": "TakehomeEx/THE02/THE02.html#local-measures-of-spatial-autocorrelation-lmsa",
    "title": "Take Home Exercise 2: Thailand Drug Abuse",
    "section": "5.0 Local Measures of Spatial Autocorrelation (LMSA)",
    "text": "5.0 Local Measures of Spatial Autocorrelation (LMSA)\nMoving on from the global perspective, we will now delve into the local spatial autocorrelation of drug offenses in Thailand. We will use the Local Moran’s I statistic to identify spatial clusters of high or low drug offenses at the provincial level.\n\n5.1 Local Moran’s I\nLocal Moran’s I is a local measure of spatial autocorrelation that evaluates the clustering of similar values in neighboring areas. It provides insights into the spatial patterns of drug offenses at the local level, identifying provinces with significant spatial clustering.\nWe start by defining a function to create LISA cluster maps for each year (2017, 2019, 2021) and visualize the local spatial autocorrelation of drug offenses.\n\ncreate_lisa_map &lt;- function(map_data, year) {\n  ggplot(map_data) +\n    geom_sf(aes(fill = lisa_cluster), color = \"white\", size = 0.1) +\n    scale_fill_manual(\n      values = c(\"High-High\" = \"#D7191C\", \"Low-Low\" = \"#2C7BB6\", \n                 \"Low-High\" = \"#ABD9E9\", \"High-Low\" = \"#FDAE61\",\n                 \"Not Significant\" = \"grey75\"),\n      na.value = \"grey50\",\n      name = \"LISA Cluster Type\",\n      drop = FALSE\n    ) +\n    theme_minimal() +\n    labs(\n      title = \"LISA Cluster Map of Drug Abuse Cases in Thailand\",\n      subtitle = paste(\"Local Moran's I -\", year)\n    ) +\n    theme(\n      plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n      plot.subtitle = element_text(size = 12, hjust = 0.5),\n      legend.position = \"right\",\n      legend.text = element_text(size = 8),\n      axis.text = element_blank(),\n      axis.ticks = element_blank(),\n      panel.grid = element_blank(),\n      panel.background = element_rect(fill = \"aliceblue\")\n    )\n}\n\nyears &lt;- c(2017, 2019, 2021)\nmap_data_list &lt;- list(map_2017_data, map_2019_data, map_2021_data)\n\nfor (i in 1:length(years)) {\n  year &lt;- years[i]\n  map_data &lt;- map_data_list[[i]]\n  \n  cat(\"\\nProcessing year:\", year, \"\\n\")\n  \n  nb &lt;- st_contiguity(map_data)\n  weights &lt;- st_weights(nb, allow_zero = TRUE)\n  map_data$total_cases &lt;- as.numeric(map_data$total_cases)\n  \n  local_moran_results &lt;- local_moran(\n    map_data$total_cases,\n    nb,\n    weights,\n    nsim = 999,\n    zero.policy = TRUE\n  )\n  \n  map_data &lt;- map_data %&gt;%\n    mutate(\n      local_moran_i = local_moran_results$Ii,\n      local_moran_p = local_moran_results$p_folded_sim,\n      local_moran_z = local_moran_results$Z.Ii\n    )\n  \n  map_data &lt;- map_data %&gt;%\n    mutate(\n      case_lag = st_lag(total_cases, nb, weights),\n      case_scale = scale(total_cases),\n      lag_scale = scale(case_lag),\n      lisa_cluster = case_when(\n        local_moran_p &gt; 0.05 ~ \"Not Significant\",\n        case_scale &gt; 0 & lag_scale &gt; 0 ~ \"High-High\",\n        case_scale &lt; 0 & lag_scale &lt; 0 ~ \"Low-Low\",\n        case_scale &gt; 0 & lag_scale &lt; 0 ~ \"High-Low\",\n        case_scale &lt; 0 & lag_scale &gt; 0 ~ \"Low-High\"\n      )\n    )\n  \n  lisa_map &lt;- create_lisa_map(map_data, year)\n  print(lisa_map)\n  \n  cat(\"Summary of LISA clusters for\", year, \":\\n\")\n  print(table(map_data$lisa_cluster))\n  cat(\"\\n\")\n  \n  assign(paste0(\"local_moran_\", year), list(\n    map_data = map_data,\n    local_moran_results = local_moran_results\n  ))\n}\n\n\nProcessing year: 2017 \n\n\nWarning in spdep::poly2nb(geometry, queen = queen, ...): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\n\n\nWarning in spdep::poly2nb(geometry, queen = queen, ...): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n\n\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `case_lag = st_lag(total_cases, nb, weights)`.\nCaused by warning in `spdep::lag.listw()`:\n! NAs in lagged values\n\n\nSummary of LISA clusters for 2017 :\n\n      High-High        Low-High         Low-Low Not Significant \n              5               1               8              62 \n\n\nProcessing year: 2019 \n\n\nWarning in spdep::poly2nb(geometry, queen = queen, ...): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\n\n\nWarning in spdep::poly2nb(geometry, queen = queen, ...): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n\n\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `case_lag = st_lag(total_cases, nb, weights)`.\nCaused by warning in `spdep::lag.listw()`:\n! NAs in lagged values\n\n\n\n\n\n\n\n\n\nSummary of LISA clusters for 2019 :\n\n      High-High        Low-High         Low-Low Not Significant \n              3               3               4              66 \n\n\nProcessing year: 2021 \n\n\nWarning in spdep::poly2nb(geometry, queen = queen, ...): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\n\n\nWarning in spdep::poly2nb(geometry, queen = queen, ...): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n\n\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `case_lag = st_lag(total_cases, nb, weights)`.\nCaused by warning in `spdep::lag.listw()`:\n! NAs in lagged values\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSummary of LISA clusters for 2021 :\n\n      High-High        Low-High         Low-Low Not Significant \n              2               2              10              62 \n\n\nGeneral Observations:\n\nHigh-High Clusters: These regions are hotspots of drug offenses with high values surrounded by other high values. In 2017, there are 5 high-high clusters, concentrated around Bangkok and neighboring provinces, as well as a small concentration in southern Thailand. In 2019, the high-high clusters have reduced to 3 provinces, with the cluster near Bangkok shrinking, though the southern cluster persists. By 2021, only 2 provinces remain in the high-high category. The southern provinces remain a significant hotspot, showing persistent high levels of drug abuse.\nLow-Low Clusters: Areas with low levels of drug abuse and are surrounded by other low-level provinces are considered coldspots. In 2017, there are 8 low-low clusters, mostly located in the northern and northeastern regions of Thailand. By 2019, the number of low-low clusters drops to 4 provinces, indicating a reduction in coldspots, though they remain in the same regions. However, by 2021, the number of low-low clusters rises again to 10 provinces, spread across the same general northern and northeastern regions.\nHigh-Low and Low-High Clusters: These clusters represent areas with high values surrounded by low values and vice versa. The presence of these clusters indicates a mix of high and low drug abuse levels in neighboring provinces. The number of high-low and low-high clusters fluctuates across the years, suggesting changes in the spatial distribution of drug offenses.\n\nObservable Trends:\n\nDecreasing High-High Clusters: The number of high-high clusters decreases over time, with a notable reduction near Bangkok. However, the southern region remains consistently problematic, suggesting that while some regions are improving, others continue to struggle with high levels of drug abuse.\nStable Low-Low Clusters: Northern and northeastern provinces have consistently shown lower levels of drug abuse, with more provinces joining the low-low cluster in 2021. This stability suggests that these regions are relatively unaffected by the drug abuse crisis compared to other parts of the country.\nPersistence of Southern Hotspots: The southern provinces, specifically around Phuket and nearby provinces, have consistently shown high levels of drug abuse.\n\n\n\n5.2 Trend Analysis of Local Moran’s I\nLet’s shift the focus from the Local Moran’s I over the years to the individual provinces. We will create a line plot to visualize the trend of Local Moran’s I for the top 5 provinces with the highest average Local Moran’s I values.\n\ncreate_local_moran_trend &lt;- function(data_list, top_n = 5) {\n  combined_data &lt;- bind_rows(\n    lapply(seq_along(data_list), function(i) {\n      data.frame(\n        ADM1_EN = data_list[[i]]$map_data$ADM1_EN,\n        local_moran_i = data_list[[i]]$local_moran_results$ii,\n        year = years[i]\n      )\n    })\n  )\n  \n  top_provinces &lt;- combined_data %&gt;%\n    group_by(ADM1_EN) %&gt;%\n    summarize(avg_local_moran = mean(local_moran_i, na.rm = TRUE)) %&gt;%\n    top_n(top_n, avg_local_moran) %&gt;%\n    pull(ADM1_EN)\n  \n  ggplot(combined_data %&gt;% filter(ADM1_EN %in% top_provinces), \n         aes(x = year, y = local_moran_i, color = ADM1_EN, group = ADM1_EN)) +\n    geom_line() +\n    geom_point() +\n    labs(title = paste(\"Trend of Local Moran's I for Top\", top_n, \"Provinces\"),\n         x = \"Year\", y = \"Local Moran's I\",\n         color = \"Province\") +\n    theme_minimal() +\n    theme(legend.position = \"right\")\n}\n\ndata_list &lt;- list(local_moran_2017, local_moran_2019, local_moran_2021)\n\ntrend_plot &lt;- create_local_moran_trend(data_list)\nprint(trend_plot)\n\n\n\n\n\n\n\n\nGeneral Observations:\n\nBangkok’s Absence: Bangkok, a notable hotspot for drug activity, is notably absent from the top 5 provinces based on Local Moran’s I. This indicates that drug abuse issues in Bangkok may be more isolated or self-contained rather than spatially linked to surrounding regions.\nFocus Shifting to Other Provinces: The top 5 provinces shown here may have relatively lower overall numbers of offenses than Bangkok, but the spatial clustering in these regions is stronger. This points to regional patterns of drug abuse that are concentrated and linked to neighboring provinces in ways that are not as apparent in Bangkok.\n\nProvincial Analysis:\n\nCentral Provinces: Samut Prakan stands out amongst the other 4 provinces, as it is the only one with a very sharp spike in 2019 with its Local Moran’s I rising significantly before dropping back in 2021. This indicates a sudden, strong spatial clustering of drug offenses during 2019, possibly due to a regional incident or change in trafficking patterns.\nSouthern Provinces: Nakhon Si Thammarat, Surat Thani, and Songkhla are prominent in the analysis, reinforcing the idea that southern Thailand is a critical region for drug-related activities and spatial clustering. This region’s consistent appearance in spatial analyses indicates that drug offenses in the south are highly regionalized and should be a priority for targeted interventions.\nAbsence of Northern Provinces: Interestingly, no northern provinces are represented in the top 5 based on Local Moran’s I, suggesting that the drug offense patterns in the north are not as spatially clustered with their neighbors, despite being consistently low in total cases.\n\n\n\n5.3 Hotspot and Coldspot Analysis\nThe Gi* statistic (Getis-Ord Gi*) is used to identify local clusters of high and low values in the data, helping us detect hotspots (high values) and cold spots (low values) for drug abuse across Thailand.\nThe p-value maps indicate the statistical significance of these clusters, showing where the Gi* values are most likely not due to random chance.\n\ncreate_gi_star_and_pvalue_plots &lt;- function(map_data, nb, weights, year) {\n  suppressWarnings(\n    gi_stars &lt;- local_g_perm(\n      map_data$total_cases,\n      nb,\n      weights,\n      nsim = 999\n    )\n  )\n\n  map_data$gi_star &lt;- gi_stars$gi \n  map_data$p_value &lt;- gi_stars$p_folded_sim\n  \n  gi_plot &lt;- ggplot(map_data) +\n    geom_sf(aes(fill = gi_star), color = \"white\", size = 0.1) +\n    scale_fill_gradient2(\n      low = \"blue\", mid = \"white\", high = \"red\", \n      midpoint = 0, name = \"Gi*\",\n      limits = c(min(map_data$gi_star), max(map_data$gi_star))\n    ) +\n    theme_minimal() +\n    labs(title = paste(\"Gi* Statistic -\", year)) +\n    theme(\n      legend.position = \"right\",\n      legend.key.height = unit(1, \"cm\"),\n      legend.text = element_text(size = 8),\n      axis.text = element_blank(),\n      axis.ticks = element_blank(),\n      panel.grid = element_blank(),\n      plot.margin = margin(5, 5, 5, 5)\n    )\n  \n  p_plot &lt;- ggplot(map_data) +\n    geom_sf(aes(fill = cut(p_value, breaks = c(0, 0.001, 0.01, 0.05, 1), \n                         labels = c(\"&lt;= 0.001\", \"&lt;= 0.01\", \"&lt;= 0.05\", \"Not sig\"))), \n          color = \"white\", size = 0.1) +\n  scale_fill_manual(\n    values = c(\"#d7191c\", \"#fdae61\", \"#ffffbf\", \"#2c7bb6\"),\n    name = \"p-value\"\n  ) +\n  theme_minimal() +\n  labs(title = paste(\"p-value of Gi* -\", year)) +\n  theme(\n    legend.position = \"right\",\n    legend.key.height = unit(1, \"cm\"),\n    legend.text = element_text(size = 8),\n    legend.title = element_text(size = 10),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    plot.margin = margin(5, 5, 5, 5)\n  )\n  \n  combined_plot &lt;- gi_plot + p_plot +\n    plot_layout(ncol = 2, widths = c(1, 1.2)) +\n    plot_annotation(\n      title = paste(\"Gi* and p-value Analysis of Drug Abuse Cases in Thailand -\", year),\n      theme = theme(plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5))\n    )\n  \n  return(combined_plot)\n}\n\nfor (i in seq_along(years)) {\n  year &lt;- years[i]\n  data &lt;- get(paste0(\"local_moran_\", year))\n  plot &lt;- create_gi_star_and_pvalue_plots(data$map_data, nb, weights, year)\n  print(plot)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeneral Observations:\n\nGi* Statistic:\n\n\n2017: In 2017, Bangkok and nearby central provinces show the highest Gi* values, indicating a strong cluster of drug abuse in this area. The southern provinces also show elevated Gi* values, indicating another emerging hotspot in the south. Some provinces in northern Thailand show relatively low Gi* values, suggesting potential cold spots for drug abuse.\n2019: The Bangkok region remains a hotspot, and southern provinces continue to show high Gi* values, indicating persistent clustering of drug abuse cases in these areas. More central provinces are now involved in this cluster, suggesting an expansion of the problem. Northern provinces maintain their low Gi* values, reinforcing their cold spot status.\n2021: The southern provinces around Phuket and Surat Thani show the strongest Gi values*, now becoming the most significant hotspot. Bangkok’s influence seems to have decreased slightly, though it remains significant. The north of Thailand shows increasingly low Gi values*, reinforcing its position as a cold spot for drug abuse cases.\n\n\np-value Analysis:\n\n\n2017: In 2017, the Bangkok region and nearby provinces exhibit a highly significant hotspot (p ≤ 0.01), confirming that the clustering in this region is unlikely to be due to chance. Central Thailand shows some expansion of this significant cluster.\n2019: By 2019, the significant hotspot in the Bangkok region persists, while the southern region is now showing moderate significance (p ≤ 0.05), suggesting it is emerging as a more prominent hotspot.\n2021: In 2021, southern Thailand becomes the most significant hotspot for drug abuse (p ≤ 0.001), with the Bangkok region maintaining significance but slightly lower compared to the south. Central Thailand also remains significant, but with a reduced footprint. Most northern regions are now non-significant.\n\nTrend Analysis:\n\nShift of Hotspots: Over time, there has been a shift in significant hotspots from Bangkok and central Thailand in 2017 to the southern provinces by 2021.\nPersistent Cold Spots in Northern Thailand: Across all three years, northern provinces consistently show low Gi* values and non-significant p-values. This reinforces that drug abuse is less of a problem in the north, with fewer clusters of high drug abuse activity.\nEmerging Central Region Influence: Central Thailand, particularly the provinces surrounding Bangkok, show a consistent presence of significant clustering, though the intensity fluctuates. This suggests that drug abuse issues in central Thailand are more persistent and widespread.\nCritical Southern Region: The southern provinces, particularly those around Phuket and Surat Thani, have emerged as the most critical region for drug abuse by 2021, with statistically significant clusters. From a law enforcement perspective, this represents a key area for targeted interventions.\n\n\n\n5.4 Identification of Hotspots and Coldspots\nTo better understand the consistent hotspots and coldspots across the years, we will identify provinces that have consistently shown high or low clustering of drug offenses. We will then visualize these consistent spots on a map to highlight the regions that have remained problematic or less affected over time.\n\nidentify_hot_cold_spots &lt;- function(local_moran_data, year) {\n  map_data &lt;- local_moran_data$map_data\n  moran_results &lt;- local_moran_data$local_moran_results\n  \n  combined_data &lt;- cbind(map_data, moran_results)\n  \n  hot_spots &lt;- combined_data %&gt;%\n    filter(lisa_cluster == \"High-High\" & p_folded_sim &lt;= 0.05) %&gt;%\n    arrange(desc(ii)) %&gt;%\n    pull(ADM1_EN)\n  \n  cold_spots &lt;- combined_data %&gt;%\n    filter(lisa_cluster == \"Low-Low\" & p_folded_sim &lt;= 0.05) %&gt;%\n    arrange(ii) %&gt;%\n    pull(ADM1_EN)\n  \n  cat(\"\\nYear:\", year, \"\\n\")\n  cat(\"Hot Spots (High-High clusters):\", paste(hot_spots, collapse = \", \"), \"\\n\")\n  cat(\"Cold Spots (Low-Low clusters):\", paste(cold_spots, collapse = \", \"), \"\\n\\n\")\n  \n  return(list(hot_spots = hot_spots, cold_spots = cold_spots))\n}\n\nall_spots &lt;- list()\n\nfor (year in years) {\n  data &lt;- get(paste0(\"local_moran_\", year))\n  spots &lt;- identify_hot_cold_spots(data, year)\n  all_spots[[as.character(year)]] &lt;- spots\n}\n\n\nYear: 2017 \nHot Spots (High-High clusters): Samut Prakan, Chachoengsao, Nakhon Pathom, Pathum Thani, Nonthaburi \nCold Spots (Low-Low clusters): Suphan Buri, Phrae, Nakhon Sawan, Kamphaeng Phet, Phitsanulok, Sukhothai, Uttaradit, Chai Nat \n\n\nYear: 2019 \nHot Spots (High-High clusters): Samut Prakan, Pathum Thani, Nonthaburi \nCold Spots (Low-Low clusters): Kamphaeng Phet, Phitsanulok, Nakhon Sawan, Chai Nat \n\n\nYear: 2021 \nHot Spots (High-High clusters): Nakhon Si Thammarat, Samut Prakan \nCold Spots (Low-Low clusters): Nakhon Sawan, Suphan Buri, Kamphaeng Phet, Kanchanaburi, Ratchaburi, Sing Buri, Phetchaburi, Chai Nat, Uthai Thani, Samut Songkhram \n\nfind_consistent_spots &lt;- function(all_spots, years) {\n  consistent_hot &lt;- Reduce(intersect, lapply(years, function(y) all_spots[[as.character(y)]]$hot_spots))\n  consistent_cold &lt;- Reduce(intersect, lapply(years, function(y) all_spots[[as.character(y)]]$cold_spots))\n  \n  cat(\"Consistent Hot Spots across all years:\", paste(consistent_hot, collapse = \", \"), \"\\n\")\n  cat(\"Consistent Cold Spots across all years:\", paste(consistent_cold, collapse = \", \"), \"\\n\")\n}\n\n\nfind_consistent_spots(all_spots, years)\n\nConsistent Hot Spots across all years: Samut Prakan \nConsistent Cold Spots across all years: Nakhon Sawan, Kamphaeng Phet, Chai Nat \n\nvisualize_consistent_spots &lt;- function(map_data, consistent_hot, consistent_cold) {\n  map_data$consistent_spots &lt;- case_when(\n    map_data$ADM1_EN %in% consistent_hot ~ \"Hot Spot\",\n    map_data$ADM1_EN %in% consistent_cold ~ \"Cold Spot\",\n    TRUE ~ \"Not Consistent\"\n  )\n  \n  ggplot(map_data) +\n    geom_sf(aes(fill = consistent_spots), color = \"white\", size = 0.1) +\n    scale_fill_manual(\n      values = c(\"Hot Spot\" = \"red\", \"Cold Spot\" = \"blue\", \"Not Consistent\" = \"grey\"),\n      name = \"Consistent Spots\"\n    ) +\n    theme_minimal() +\n    labs(title = \"Consistent Hot and Cold Spots (2017-2021)\") +\n    theme(\n      legend.position = \"right\",\n      axis.text = element_blank(),\n      axis.ticks = element_blank(),\n      panel.grid = element_blank()\n    )\n}\n\nrecent_map_data &lt;- local_moran_2021$map_data\nconsistent_hot &lt;- all_spots[[\"2021\"]]$hot_spots\nconsistent_cold &lt;- all_spots[[\"2021\"]]$cold_spots\nprint(visualize_consistent_spots(recent_map_data, consistent_hot, consistent_cold))\n\n\n\n\n\n\n\n\nKey Observations:\n\nPersistent Hot Spot: Samut Prakan is the only province that has consistently been a hot spot for drug abuse across all three years (2017, 2019, and 2021).\nCold Spot Stability: The provinces of Suphan Buri, Nakhon Sawan, and Chai Nat have consistently low drug abuse rates. These provinces may offer insights into successful strategies for keeping drug abuse under control.\nShift in Hot Spots: In 2017, the hot spots included multiple provinces in central Thailand but by 2021, the focus has shifted primarily to the southern province of Nakhon Si Thammarat. This shift highlights a changing landscape of drug abuse problems over time, where southern Thailand is becoming a more critical area for attention in 2021.\nExpansion of Cold Spots: In 2021, cold spots have expanded, particularly in the western and central provinces. This suggests that drug abuse is being controlled effectively in more regions over time, leading to the expansion of areas with consistently low drug abuse rates."
  },
  {
    "objectID": "TakehomeEx/THE02/THE02.html#bonus-trend-analysis-with-linear-regression",
    "href": "TakehomeEx/THE02/THE02.html#bonus-trend-analysis-with-linear-regression",
    "title": "Take Home Exercise 2: Thailand Drug Abuse",
    "section": "6.0 Bonus: Trend Analysis with Linear Regression",
    "text": "6.0 Bonus: Trend Analysis with Linear Regression\nTo round up our analysis, we will conduct a linear regression analysis to explore the temporal trend of drug offenses in Thailand. We will fit a linear model to the total number of drug abuse cases over time to determine if there is a significant linear relationship between the fiscal year and the number of cases.\n\ndrug_summary_all &lt;- drug_offenses_cleaned %&gt;%\n  group_by(province_en, fiscal_year) %&gt;%\n  summarize(total_cases = sum(no_cases, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'province_en'. You can override using the\n`.groups` argument.\n\nmap_data_all &lt;- adm1 %&gt;%\n  left_join(drug_summary_all, by = c(\"ADM1_EN\" = \"province_en\"))\n\n\ntrend_analysis &lt;- map_data_all %&gt;%\n  group_by(fiscal_year) %&gt;%\n  summarize(total_cases = sum(total_cases, na.rm = TRUE))\n\n\nmodel &lt;- lm(total_cases ~ fiscal_year, data = trend_analysis)\n \ndw_test &lt;- car::durbinWatsonTest(model)\n\ncat(\"Linear Regression Results:\\n\")\n\nLinear Regression Results:\n\nprint(summary(model))\n\n\nCall:\nlm(formula = total_cases ~ fiscal_year, data = trend_analysis)\n\nResiduals:\n      1       2       3       4       5       6 \n-114259   27536   87838    1408  194824 -197347 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)  1564112.4 75729574.6   0.021    0.985\nfiscal_year     -447.9    37499.2  -0.012    0.991\n\nResidual standard error: 156900 on 4 degrees of freedom\nMultiple R-squared:  3.567e-05, Adjusted R-squared:  -0.25 \nF-statistic: 0.0001427 on 1 and 4 DF,  p-value: 0.991\n\ncat(\"\\nDurbin-Watson Test for Autocorrelation:\\n\")\n\n\nDurbin-Watson Test for Autocorrelation:\n\nprint(dw_test)\n\n lag Autocorrelation D-W Statistic p-value\n   1      -0.3939466      2.259606   0.824\n Alternative hypothesis: rho != 0\n\n\nKey Observations:\nLinear Regression\n\nIntercept: The intercept is 1,564,112, which represents the estimated number of drug abuse cases at the start of the time period (i.e., when fiscal_year is 0). However, this value is not very meaningful because the fiscal year variable does not have a meaningful zero point in this context. The standard error of the intercept is very large (75,729,574.6), indicating high uncertainty about the estimate.\nFiscal Year Coefficient: The coefficient for fiscal_year is -447.9, which suggests that for each additional year, the total number of drug abuse cases is expected to decrease by 448 cases on average. However, this effect is not statistically significant, as the p-value for this coefficient is 0.991 (far greater than the conventional significance threshold of 0.05). This means that the fiscal year does not appear to be a meaningful predictor of the total number of drug abuse cases.\n\nModel Fit\n\nR-squared: The R-squared value is very low (3.567e-05), which means that the model explains almost none of the variance in the total number of drug abuse cases. Essentially, fiscal year alone does not account for any substantial variation in the number of cases.\nAdjusted R-squared: The adjusted R-squared is negative (-0.25), further confirming that the model has no explanatory power. Negative adjusted R-squared values occur when the model performs worse than a simple horizontal line (i.e., no relationship).\nF-statistic and p-value: The F-statistic for the model is very small (0.0001427), and the p-value is 0.991, indicating that the overall model is not statistically significant. There is no evidence to suggest that there is a meaningful linear trend in the total number of drug abuse cases over time.\n\nResiduals\n\nThe residuals (the differences between observed and predicted values) show some variation, but overall, they do not suggest any clear trend or pattern.\n\nDurbin-Watson Test\n\nDurbin-Watson Statistic: The Durbin-Watson statistic is 2.259606. A value of 2 indicates no autocorrelation in the residuals, which means the errors in the model are not correlated with each other over time. This is a good result and suggests that the assumption of no autocorrelation in the residuals is met.\np-value: The p-value for the Durbin-Watson test is 0.73, which means we fail to reject the null hypothesis of no autocorrelation. There is no significant autocorrelation in the residuals, so this assumption holds for the model.\n\nOverall Insights:\n\nNo Significant Trend: The linear regression results indicate that there is no significant trend in the total number of drug abuse cases in Thailand over the years included in this analysis. The fiscal year does not seem to predict the number of drug cases.\nModel Weakness: The model has a very low R-squared value, meaning it explains almost none of the variability in the data. This suggests that other factors (not just time) are likely influencing the total number of drug abuse cases.\nNo Autocorrelation: The Durbin-Watson test indicates that the residuals of the model are not autocorrelated, so the assumption of independent errors is met."
  },
  {
    "objectID": "TakehomeEx/THE02/THE02.html#conclusion",
    "href": "TakehomeEx/THE02/THE02.html#conclusion",
    "title": "Take Home Exercise 2: Thailand Drug Abuse",
    "section": "7.0 Conclusion",
    "text": "7.0 Conclusion\nThe analysis of the spatial distribution of drug offenses in Thailand provides valuable insights into the regional patterns and clustering of drug abuse cases. By utilizing spatial autocorrelation techniques such as Moran’s I, LISA, and Gi* statistics, we were able to identify hotspots, cold spots, and consistent clusters of drug offenses across the country.\n\nTemporal Trends: The analysis revealed a consistent increase in spatial clustering of drug offenses over the years, with certain regions showing persistent high levels of drug abuse. The southern provinces, in particular, emerged as a critical hotspot for drug-related activities.\nRegional Consistencies: Southern Thailand, central provinces around Bangkok, and the northeastern region consistently showed high levels of drug offenses. These areas require targeted interventions to address the drug abuse crisis effectively.\nPolicy Implications: The identification of hotspots and cold spots can inform policymakers and law enforcement agencies about the spatial distribution of drug offenses. By focusing on regions with high clustering, authorities can implement targeted strategies to combat drug trafficking and abuse effectively.\nFuture Directions: Further research could explore the underlying factors contributing to the spatial clustering of drug offenses, such as socio-economic conditions, law enforcement strategies, and drug trafficking routes. Understanding these factors can help develop more effective policies to address the drug abuse crisis in Thailand.\n\nWe can also conclude from our hypotheses that the spatial distribution of drug offenses in Thailand is not random but exhibits significant clustering patterns. The presence of spatial autocorrelation indicates that provinces with similar levels of drug offenses tend to be geographically close, suggesting underlying factors contributing to the spatial clustering of drug abuse."
  },
  {
    "objectID": "TakehomeEx/THE02/THE02.html#references",
    "href": "TakehomeEx/THE02/THE02.html#references",
    "title": "Take Home Exercise 2: Thailand Drug Abuse",
    "section": "References",
    "text": "References\n\nClaude AI. (n.d.). Claude AI. https://claude.ai/"
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html",
    "href": "TakehomeEx/THE03/THE03.html",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "Jakarta, the capital of Indonesia, is a bustling metropolis with a diverse population and a complex urban landscape. The city’s educational infrastructure plays a crucial role in shaping the future of its residents. In this analysis, we will explore the spatial distribution of educational facilities across Jakarta to understand the accessibility and equity of educational resources.\n\n\n\nOur project encompasses three primary areas of investigation.\n\nSpatial Points Patterns Analysis of Distribution of Schools:\n\n\nExamination of school distribution patterns across Jakarta\nIdentification of areas with significant clustering or dispersion\nAssessment of spatial relationships between different types of educational facilities\n\n\nLISA and Hot-spot, Cold-spot Analysis\n\n\nIdentification of Local Indicators of Spatial Association (LISA) clusters\nDetection of hot-spots and cold-spots of schools\nInvestigation of spatial autocorrelation in the distribution of schools\n\n\nGeographically Weighted Regression Modeling\n\n\nExploratio of relationships between education levels and school availability and accessibility\nAssessment of spatial variations across different districts\nInvestigation of socioeconomic factors influencing school distribution patterns\n\nThis research aims to provide insights into the spatial dynamics of educational facilities in Jakarta and inform policy decisions to enhance educational equity and access. By combining spatial analysis techniques with statistical modeling, we can uncover hidden patterns and relationships that are crucial for effective urban planning and resource allocation.\n\n\n\nIndonesia’s education system is structured into several stages:\nPrimary Education\n\nElementary School (SD): Compulsory education for children aged 7-12 years\nSpecial Elementary School (SDLB): Schools for children with special needs\n\nSecondary Education\n\nJunior High School (SMP): Follows elementary school and is for students aged 13-15 years\nSpecial Junior High School (SMPLB): Schools for students with special needs\n\nHigh School Education\n\nSenior High School (SMA): Follows junior high school and is for students aged 16-18 years\nVocational High School (SMK): Focuses on vocational training and skills development\nSpecial Senior High School (SMLB): Schools for students with special needs\n\nSpecial Education\n\nSpecial Education (SLB): Schools for children with disabilities\n\nFor the purpose of this analysis, we have combined the types of schools into four main types. Note that Junior High Schools may also be interchangeably referred to as Secondary Schools. Senior High Schools may also be referred to as High Schools.\nWe decided to add SMLB into High Schools instead of Special Education Schools because it is more similar to SMA and SMK in terms of educational level.\n\nElementary Schools: Includes SD and SDLB\nJunior High Schools: Includes SMP and SMPLB\nSenior High Schools: Includes SMA, SMK, and SMLB\nSpecial Education Schools: Includes SLB\n\n\n\n\nThe spatial points patterns analysis follows a multi-scale approach:\n\nProvincial Level Analysis:\n\n\nInitial exploration of school distribution patterns across Jakarta\nGlobal clustering analysis\nPopulation density correlation\n\n\nCity Level Analysis:\n\n\nLocal clustering patterns\nSchool type interactions\nPublic-private school dynamics\n\n\nStatistical Methods:\n\n\nKernel Density Estimation\nNearest Neighbour Analysis\nQuadrat Analysis\nCross-K Function Analysis\nRipley’s K Function and L Function Analysis\n\n\n\n\nThis study utilizes three primary datasets.\n\nIndonesia Schools Dataset:\n\n\nSource: Kaggle - Indonesia Schools Dataset\nThis datasets contains information about schools across Indonesia, including location, type, and educational stage.\n\n\nIndonesia Administrative Boundaries:\n\n\nSource: Indonesia - Subnational Administrative Boundaries\nWe selected the ADM2 level boundaries for provincial level analysis.\n\n\nSubdistrict Data:\n\n\nSource: Indonesia Geospasial\nThis dataset provides detailed subdistrict boundaries for Jakarta, and contains population aggregated by subdistrict."
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#spatial-distribution-analysis-of-educational-facilities-in-jakarta",
    "href": "TakehomeEx/THE03/THE03.html#spatial-distribution-analysis-of-educational-facilities-in-jakarta",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "Jakarta, the capital of Indonesia, is a bustling metropolis with a diverse population and a complex urban landscape. The city’s educational infrastructure plays a crucial role in shaping the future of its residents. In this analysis, we will explore the spatial distribution of educational facilities across Jakarta to understand the accessibility and equity of educational resources.\n\n\n\nOur project encompasses three primary areas of investigation.\n\nSpatial Points Patterns Analysis of Distribution of Schools:\n\n\nExamination of school distribution patterns across Jakarta\nIdentification of areas with significant clustering or dispersion\nAssessment of spatial relationships between different types of educational facilities\n\n\nLISA and Hot-spot, Cold-spot Analysis\n\n\nIdentification of Local Indicators of Spatial Association (LISA) clusters\nDetection of hot-spots and cold-spots of schools\nInvestigation of spatial autocorrelation in the distribution of schools\n\n\nGeographically Weighted Regression Modeling\n\n\nExploratio of relationships between education levels and school availability and accessibility\nAssessment of spatial variations across different districts\nInvestigation of socioeconomic factors influencing school distribution patterns\n\nThis research aims to provide insights into the spatial dynamics of educational facilities in Jakarta and inform policy decisions to enhance educational equity and access. By combining spatial analysis techniques with statistical modeling, we can uncover hidden patterns and relationships that are crucial for effective urban planning and resource allocation.\n\n\n\nIndonesia’s education system is structured into several stages:\nPrimary Education\n\nElementary School (SD): Compulsory education for children aged 7-12 years\nSpecial Elementary School (SDLB): Schools for children with special needs\n\nSecondary Education\n\nJunior High School (SMP): Follows elementary school and is for students aged 13-15 years\nSpecial Junior High School (SMPLB): Schools for students with special needs\n\nHigh School Education\n\nSenior High School (SMA): Follows junior high school and is for students aged 16-18 years\nVocational High School (SMK): Focuses on vocational training and skills development\nSpecial Senior High School (SMLB): Schools for students with special needs\n\nSpecial Education\n\nSpecial Education (SLB): Schools for children with disabilities\n\nFor the purpose of this analysis, we have combined the types of schools into four main types. Note that Junior High Schools may also be interchangeably referred to as Secondary Schools. Senior High Schools may also be referred to as High Schools.\nWe decided to add SMLB into High Schools instead of Special Education Schools because it is more similar to SMA and SMK in terms of educational level.\n\nElementary Schools: Includes SD and SDLB\nJunior High Schools: Includes SMP and SMPLB\nSenior High Schools: Includes SMA, SMK, and SMLB\nSpecial Education Schools: Includes SLB\n\n\n\n\nThe spatial points patterns analysis follows a multi-scale approach:\n\nProvincial Level Analysis:\n\n\nInitial exploration of school distribution patterns across Jakarta\nGlobal clustering analysis\nPopulation density correlation\n\n\nCity Level Analysis:\n\n\nLocal clustering patterns\nSchool type interactions\nPublic-private school dynamics\n\n\nStatistical Methods:\n\n\nKernel Density Estimation\nNearest Neighbour Analysis\nQuadrat Analysis\nCross-K Function Analysis\nRipley’s K Function and L Function Analysis\n\n\n\n\nThis study utilizes three primary datasets.\n\nIndonesia Schools Dataset:\n\n\nSource: Kaggle - Indonesia Schools Dataset\nThis datasets contains information about schools across Indonesia, including location, type, and educational stage.\n\n\nIndonesia Administrative Boundaries:\n\n\nSource: Indonesia - Subnational Administrative Boundaries\nWe selected the ADM2 level boundaries for provincial level analysis.\n\n\nSubdistrict Data:\n\n\nSource: Indonesia Geospasial\nThis dataset provides detailed subdistrict boundaries for Jakarta, and contains population aggregated by subdistrict."
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#data-preprocessing",
    "href": "TakehomeEx/THE03/THE03.html#data-preprocessing",
    "title": "Take Home Exercise 3",
    "section": "2.0 Data Preprocessing",
    "text": "2.0 Data Preprocessing\n\npacman::p_load(sf, tidyverse, knitr, viridis, patchwork, gridExtra, kableExtra, sfdep, tmap, tmaptools, patchwork, scales, spdep, ggrepel, spatstat)\n\n\nindo_schools_kaggle &lt;- read_csv(\"data/aspatial/complete_data.csv\")\n\nRows: 215371 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): province_name, city_name, district_name, school_name, stage, status\ndbl (5): lat, long, province_area, total_population, total_education_age_pop...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAfter loading the data for Indonesia schools, we will filter and preprocess the data to focus on Jakarta schools and clean the administrative boundaries data. We will exclude Jakarta’s Thousand Islands (Kab. Kepulauan Seribu) since they are primarily resort islands with limited educational facilities.\n\njakarta_schools &lt;- indo_schools_kaggle %&gt;% \n  filter(province_name == \"DKI JAKARTA\",\n         city_name != \"Kab. Kepulauan Seribu\") %&gt;%\n  filter(!is.na(long) & !is.na(lat)) %&gt;%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326) %&gt;%\n  mutate(\n      school_level = case_when(\n        stage %in% c(\"SD\", \"SDLB\") ~ \"Elementary\",\n        stage %in% c(\"SMP\", \"SMPLB\") ~ \"Junior High\",\n        stage %in% c(\"SMA\", \"SMK\", \"SMLB\") ~ \"Senior High\",\n        TRUE ~ \"Special Education\"\n      ),\n      school_type = if_else(status == \"N\", \"Public\", \"Private\")\n    )\n\n\nhead(jakarta_schools)\n\nSimple feature collection with 6 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 106.8139 ymin: -6.1992 xmax: 106.8642 ymax: -6.1462\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 12\n  province_name city_name   district_name school_name stage status province_area\n  &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;          &lt;dbl&gt;\n1 DKI JAKARTA   Kota Jakar… Kec. Tanah A… SD NEGERI … SD    N                664\n2 DKI JAKARTA   Kota Jakar… Kec. Senen    SDN Kenari… SD    N                664\n3 DKI JAKARTA   Kota Jakar… Kec. Johar B… SD NEGERI … SD    N                664\n4 DKI JAKARTA   Kota Jakar… Kec. Menteng  SMAS PSKD … SMA   S                664\n5 DKI JAKARTA   Kota Jakar… Kec. Sawah B… SMKS STRAD… SMK   S                664\n6 DKI JAKARTA   Kota Jakar… Kec. Cempaka… SDN Cempak… SD    N                664\n# ℹ 5 more variables: total_population &lt;dbl&gt;,\n#   total_education_age_population &lt;dbl&gt;, geometry &lt;POINT [°]&gt;,\n#   school_level &lt;chr&gt;, school_type &lt;chr&gt;\n\n\nNext, we load the administrative boundaries data for Jakarta and filter the relevant districts for our analysis.\n\nadm2 &lt;- st_read(\"data/geospatial\", layer = \"geoBoundaries-IDN-ADM2_simplified\") %&gt;%\n  filter(shapeName %in% c(\n      \"Kota Jakarta Barat\", \"Kota Jakarta Pusat\",\n      \"Kota Jakarta Selatan\", \"Kota Jakarta Timur\",\n      \"Kota Jakarta Utara\"\n    ))\n\nReading layer `geoBoundaries-IDN-ADM2_simplified' from data source \n  `C:\\Users\\yeoba\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\TakehomeEx\\THE03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 519 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 95.01115 ymin: -11.00762 xmax: 141.0194 ymax: 6.07693\nGeodetic CRS:  WGS 84\n\n\nOur last dataset, the subdistrict data, provides detailed boundaries for Jakarta’s subdistricts. We will use this data to analyze population density and other demographic factors. The original dataset has column names in Indonesian, so we will need to rename them for consistency.\n\nbatas &lt;- st_read(\"data/geospatial\", layer = \"BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA\")  %&gt;%\n    select(OBJECT_ID, PROVINSI, KAB_KOTA, KECAMATAN, DESA_KELUR, \n         JUMLAH_PEN, JUMLAH_KK, LUAS_WILAY, KEPADATAN, geometry) %&gt;%\n    rename(\n    province = PROVINSI,\n    city = KAB_KOTA,\n    district = KECAMATAN,\n    subdistrict = DESA_KELUR,\n    population = JUMLAH_PEN,\n    total_families = JUMLAH_KK,\n    area_size = LUAS_WILAY,\n    popn_density = KEPADATAN\n    ) %&gt;%\n    filter(!is.na(city) & city != \"KEPULAUAN SERIBU\") %&gt;%\n    mutate(city = case_when(\n      city == \"JAKARTA BARAT\" ~ \"Kota Jakarta Barat\",\n      city == \"JAKARTA PUSAT\" ~ \"Kota Jakarta Pusat\",\n      city == \"JAKARTA SELATAN\" ~ \"Kota Jakarta Selatan\",\n      city == \"JAKARTA TIMUR\" ~ \"Kota Jakarta Timur\",\n      city == \"JAKARTA UTARA\" ~ \"Kota Jakarta Utara\",\n      TRUE ~ city\n    ))\n\nReading layer `BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA' from data source \n  `C:\\Users\\yeoba\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\TakehomeEx\\THE03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 269 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.3831 ymin: -6.370815 xmax: 106.9728 ymax: -5.184322\nGeodetic CRS:  WGS 84\n\n\n\nhead(batas)\n\nSimple feature collection with 6 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.8105 ymin: -6.17575 xmax: 106.8711 ymax: -6.141043\nGeodetic CRS:  WGS 84\n  OBJECT_ID    province               city    district   subdistrict population\n1     25477 DKI JAKARTA Kota Jakarta Barat  TAMAN SARI     KEAGUNGAN      21609\n2     25478 DKI JAKARTA Kota Jakarta Barat  TAMAN SARI        GLODOK       9069\n3     25397 DKI JAKARTA Kota Jakarta Pusat   KEMAYORAN HARAPAN MULIA      29085\n4     25400 DKI JAKARTA Kota Jakarta Pusat   KEMAYORAN  CEMPAKA BARU      41913\n5     25390 DKI JAKARTA Kota Jakarta Pusat SAWAH BESAR    PASAR BARU      15793\n6     25391 DKI JAKARTA Kota Jakarta Pusat SAWAH BESAR  KARANG ANYAR      33383\n  total_families area_size popn_density                       geometry\n1           7255      0.36        60504 MULTIPOLYGON (((106.8164 -6...\n2           3273      0.37        24527 MULTIPOLYGON (((106.8148 -6...\n3           9217      0.53        54465 MULTIPOLYGON (((106.8576 -6...\n4          13766      0.97        42993 MULTIPOLYGON (((106.8631 -6...\n5           5599      1.76         8971 MULTIPOLYGON (((106.8369 -6...\n6          11276      0.47        71628 MULTIPOLYGON (((106.8316 -6...\n\n\nThe district names in the batas dataset is cleaned to ensure consistency.\n\ndistrict_mapping &lt;- c(\n    \"TAMAN SARI\" = \"Kec. Taman Sari\",\n    \"KEMAYORAN\" = \"Kec. Kemayoran\",\n    \"SAWAH BESAR\" = \"Kec. Sawah Besar\",\n    \"GAMBIR\" = \"Kec. Gambir\",\n    \"SENEN\" = \"Kec. Senen\",\n    \"CEMPAKA PUTIH\" = \"Kec. Cempaka Putih\",\n    \"MENTENG\" = \"Kec. Menteng\",\n    \"TANAH ABANG\" = \"Kec. Tanah Abang\",\n    \"JOHAR BARU\" = \"Kec. Johar Baru\",\n    \"KOJA\" = \"Kec. Koja\",\n    \"PENJARINGAN\" = \"Kec. Penjaringan\",\n    \"TANJUNG PRIOK\" = \"Kec. Tanjung Priok\",\n    \"CILINCING\" = \"Kec. Cilincing\",\n    \"GROGOL PETAMBURAN\" = \"Kec. Grogol Petamburan\",\n    \"PADEMANGAN\" = \"Kec. Pademangan\",\n    \"KELAPA GADING\" = \"Kec. Kelapa Gading\",\n    \"CENGKARENG\" = \"Kec. Cengkareng\",\n    \"TAMBORA\" = \"Kec. Tambora\",\n    \"KEBON JERUK\" = \"Kec. Kebon Jeruk\",\n    \"KALIDERES\" = \"Kec. Kali Deres\",\n    \"PAL MERAH\" = \"Kec. Palmerah\",\n    \"JATINEGARA\" = \"Kec. Jatinegara\",\n    \"KEMBANGAN\" = \"Kec. Kembangan\",\n    \"TEBET\" = \"Kec. Tebet\",\n    \"SETIABUDI\" = \"Kec. Setia Budi\",\n    \"MAMPANG PRAPATAN\" = \"Kec. Mampang Prapatan\",\n    \"PASAR MINGGU\" = \"Kec. Pasar Minggu\",\n    \"KEBAYORAN LAMA\" = \"Kec. Kebayoran Lama\",\n    \"KEBAYORAN BARU\" = \"Kec. Kebayoran Baru\",\n    \"CILANDAK\" = \"Kec. Cilandak\",\n    \"PESANGGRAHAN\" = \"Kec. Pesanggrahan\",\n    \"PANCORAN\" = \"Kec. Pancoran\",\n    \"JAGAKARSA\" = \"Kec. Jagakarsa\",\n    \"MATRAMAN\" = \"Kec. Matraman\",\n    \"PULOGADUNG\" = \"Kec. Pulo Gadung\",\n    \"KRAMATJATI\" = \"Kec. Kramat Jati\",\n    \"PASAR REBO\" = \"Kec. Pasar Rebo\",\n    \"DUREN SAWIT\" = \"Kec. Duren Sawit\",\n    \"MAKASAR\" = \"Kec. Makasar\",\n    \"CIRACAS\" = \"Kec. Ciracas\",\n    \"CIPAYUNG\" = \"Kec. Cipayung\",\n    \"CAKUNG\" = \"Kec. Cakung\"\n)\n\nbatas &lt;- batas %&gt;%\n  mutate(district = district_mapping[district])"
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#exploratory-data-analysis-provincial-level",
    "href": "TakehomeEx/THE03/THE03.html#exploratory-data-analysis-provincial-level",
    "title": "Take Home Exercise 3",
    "section": "3.0 Exploratory Data Analysis (Provincial Level)",
    "text": "3.0 Exploratory Data Analysis (Provincial Level)\nBefore diving into detailed spatial analysis, we will conduct an initial round of analysis at the provincial level to understand the overall distribution of schools across Jakarta.\n\n3.1 Overall Distribution Patterns\n\nggplot(data = jakarta_schools) +\n  geom_bar(aes(x = city_name, fill = city_name)) +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    legend.position = \"none\"\n  ) +\n  labs(\n    title = \"Distribution of Schools Across Jakarta\",\n    x = \"City\",\n    y = \"Number of Schools\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nEast Jakarta has the highest concentration of schools (approximately 1200+), followed by West Jakarta\nThe distribution aligns broadly with population density but shows some notable mismatches\nSchool density follows an east-west corridor pattern with lower density in the north and south\n\n\n\n3.2 School Level Distribution\n\nggplot(data = jakarta_schools) +\n  geom_bar(aes(x = city_name, fill = school_level)) +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 12, face = \"bold\")\n  ) +\n  labs(\n    title = \"Distribution of School Levels Across Jakarta\",\n    x = \"City\",\n    y = \"Number of Schools\",\n    fill = \"School Level\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nAcross all municipalities, elementary schools are the most common\nThere is a relatively consistent proportion of Junior and Senior High Schools\nSpecial Education schools are less common but present in all municipalities\nWhile total numbers differ, the proportional distribution of school levels remains fairly consistent across cities, suggesting planned distribution rather than random clustering\n\n\n\n3.3 Overall School Density\n\nggplot() +\n  geom_sf(data = adm2, aes(fill = lengths(st_intersects(adm2, jakarta_schools)))) +\n  scale_fill_viridis_c(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"School Density Across Jakarta\",\n    fill = \"Number of\\nSchools\"\n  )\n\n\n\n\n\n\n\n\n\n\n3.4 Population Density\n\nggplot() +\n  geom_sf(data = batas, aes(fill = popn_density)) +\n  scale_fill_viridis_c(\n    option = \"plasma\",\n    labels = scales::comma_format()\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Population Density in Jakarta\",\n    fill = \"Population\\nDensity\\n(per km²)\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe density map reveals high population clusters in central Jakarta (yellow/orange areas)\nThere is an interesting mismatch with school density in some areas\nSeveral high-density pockets are scattered across Jakarta\n\n\n\n3.5 Overall Summary\n\nOur preliminary EDA at the provincial level is too macro to provide detailed insights, but necessary to understand the overall distribution of schools in Jakarta\nCertain patterns of school and population concentration emerge, but we will need to confirm this with KDE and statistical tests\nWe still cannot determine if the school distribution matches population needs"
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#kernel-density-estimation-provincial-level",
    "href": "TakehomeEx/THE03/THE03.html#kernel-density-estimation-provincial-level",
    "title": "Take Home Exercise 3",
    "section": "4.0 Kernel Density Estimation (Provincial Level)",
    "text": "4.0 Kernel Density Estimation (Provincial Level)\nTo analyze the spatial distribution of schools in Jakarta, we will use Kernel Density Estimation (KDE) to identify clustering patterns and hotspots. We will conduct KDE analysis at the provincial level and then drill down to individual cities to understand local variations.\n\n4.1 Provincial KDE\n\n# Convert to UTM projection for proper distance calculations\njakarta_schools_utm &lt;- st_transform(jakarta_schools, 32748)\nadm2_utm &lt;- st_transform(adm2, 32748)\n\n\ncoords &lt;- st_coordinates(jakarta_schools_utm)\njittered_coords &lt;- coords + matrix(\n  runif(nrow(coords) * 2, -0.1, 0.1),\n  ncol = 2\n)\n\n\nwindow &lt;- as.owin(st_union(adm2_utm))\n\ninside &lt;- inside.owin(x = jittered_coords[,1], \n                     y = jittered_coords[,2], \n                     w = window)\nvalid_coords &lt;- jittered_coords[inside,]\n\n\npoints &lt;- ppp(\n  x = valid_coords[,1],\n  y = valid_coords[,2],\n  window = window\n)\n\nprint(paste(\"Original points:\", nrow(coords)))\n\n[1] \"Original points: 4762\"\n\nprint(paste(\"Points in window:\", sum(inside)))\n\n[1] \"Points in window: 4734\"\n\nprint(paste(\"Duplicated points:\", sum(duplicated(valid_coords))))\n\n[1] \"Duplicated points: 0\"\n\n\n\nkde &lt;- density.ppp(points, \n                  sigma = bw.diggle(points),\n                  edge = TRUE)\nkde_df &lt;- as.data.frame(kde)\n\n\nggplot() +\n  geom_sf(data = adm2_utm, fill = \"transparent\") +\n  geom_tile(data = kde_df, aes(x = x, y = y, fill = value)) +\n  scale_fill_viridis_c(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"Kernel Density Estimation of All Schools\",\n    subtitle = paste0(\"Based on \", sum(inside), \" school locations\"),\n    fill = \"Density\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe overall KDE map shows spatial clustering with several high-density hotspots\nThe strongest concentration is in North-Central Jakarta (around 6.15S)\nSecondary clusters appear in the eastern and western regions\nSouthern areas generally show lower density\nThis patterns strongly suggests rejecting the null hypothesis of random distribution\n\n\n\n4.2 KDE by School Level\n\n# Individual KDE by school level\nkde_plots &lt;- list()\n\n# Process each school level\nfor(level in unique(jakarta_schools_utm$school_level)) {\n  schools_subset &lt;- jakarta_schools_utm[jakarta_schools_utm$school_level == level,]\n  \n  coords &lt;- st_coordinates(schools_subset)\n  jittered_coords &lt;- coords + matrix(\n    runif(nrow(coords) * 2, -0.1, 0.1),\n    ncol = 2\n  )\n  \n  inside &lt;- inside.owin(x = jittered_coords[,1],\n                       y = jittered_coords[,2],\n                       w = window)\n  valid_coords &lt;- jittered_coords[inside,]\n  \n  points_subset &lt;- ppp(\n    x = valid_coords[,1],\n    y = valid_coords[,2],\n    window = window\n  )\n  \n  kde_level &lt;- density.ppp(points_subset,\n                          sigma = bw.diggle(points_subset),\n                          edge = TRUE)\n  kde_df &lt;- as.data.frame(kde_level)\n  \n  kde_plots[[level]] &lt;- ggplot() +\n    geom_sf(data = adm2_utm, fill = \"transparent\") +\n    geom_tile(data = kde_df, aes(x = x, y = y, fill = value)) +\n    scale_fill_viridis_c(option = \"plasma\") +\n    theme_minimal() +\n    labs(\n      title = paste(\"School Density:\", level),\n      subtitle = paste0(\"Based on \", sum(inside), \" school locations\"),\n      fill = \"Density\"\n    )\n}\n\nwalk(kde_plots, print)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe KDE plots reveal distinct non-random spatial patterns in school distribution\nThe most intense clustering appears in the North-Central region across all school types\nDensity patterns vary by school level. Elementary schools show more dispersed, localized hotspots. Secondary schools display stronger clustering and special education schools show unique clustering patterns in central and southwestern regions.\n\n\n\n4.3 Quadrat Analysis\nSpatial Distribution\n\ncoords &lt;- st_coordinates(jakarta_schools_utm)\njittered_coords &lt;- coords + matrix(\n  runif(nrow(coords) * 2, -0.1, 0.1),\n  ncol = 2\n)\n\ninside &lt;- inside.owin(x = jittered_coords[,1],\n                     y = jittered_coords[,2],\n                     w = window)\n\nvalid_coords &lt;- jittered_coords[inside,]\nvalid_marks &lt;- jakarta_schools_utm$school_level[inside]\n\nprint(paste(\"Number of valid coordinates:\", nrow(valid_coords)))\n\n[1] \"Number of valid coordinates: 4734\"\n\nprint(paste(\"Number of valid marks:\", length(valid_marks)))\n\n[1] \"Number of valid marks: 4734\"\n\n\n\nquadrat_points &lt;- ppp(\n  x = valid_coords[,1],\n  y = valid_coords[,2],\n  window = window,\n  marks = factor(valid_marks)\n)\n\nq &lt;- quadratcount(quadrat_points, nx = 6, ny = 6)\n\nggplot() +\n  geom_sf(data = adm2_utm, fill = \"transparent\") +\n  stat_density2d(\n    data = as.data.frame(valid_coords),\n    aes(x = X, y = Y, fill = after_stat(level)),\n    geom = \"polygon\",\n    alpha = 0.5,\n    contour = TRUE\n  ) +\n  geom_point(\n    data = data.frame(\n      X = valid_coords[,1],\n      Y = valid_coords[,2],\n      Level = valid_marks\n    ),\n    aes(x = X, y = Y, color = Level),\n    alpha = 0.6,\n    size = 2\n  ) +\n  scale_fill_viridis_c(option = \"plasma\", name = \"Density\") +\n  scale_color_viridis_d(option = \"plasma\", name = \"School Level\") +\n  theme_minimal() +\n  labs(\n    title = \"Quadrat Analysis of Schools in Jakarta\",\n    subtitle = paste(\"Based on\", nrow(valid_coords), \" school locations\")\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe quadrat analysis confirms the non-random distribution of schools in Jakarta\nElementary schools show widest spatial coverage, secondary schools tend to be clustered together and special education facilities are sparsely distributed\nHigher density areas correspond to areas with multiple school types\n\nStatistical Analysis\n\n# Chi-square test\nq_test &lt;- quadrat.test(quadrat_points)\nprint(\"Quadrat Test Results:\")\n\n[1] \"Quadrat Test Results:\"\n\nprint(q_test)\n\n\n    Chi-squared test of CSR using quadrat counts\n\ndata:  quadrat_points\nX2 = 513.45, df = 22, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\nQuadrats: 23 tiles (irregular windows)\n\n\nFrom the Chi-squared test, the extremely low p-value &lt; 2.2e-16 strongly rejects the null hypothesis of Complete Spatial Randomness (CSR). The high chi-squared value of 513.45 indicates substantial deviation from expected frequencies. The results statistically confirm the visual clustering patterns.\nFrequency Analysis\n\nquadrat_summary &lt;- data.frame(\n  observed = as.vector(q),\n  expected = mean(as.vector(q)),\n  quadrat = 1:length(as.vector(q))\n)\n\nggplot(quadrat_summary) +\n  geom_point(aes(x = quadrat, y = observed), color = \"blue\", alpha = 0.6) +\n  geom_hline(yintercept = mean(quadrat_summary$expected), \n             linetype = \"dashed\", color = \"red\") +\n  theme_minimal() +\n  labs(\n    title = \"Observed vs Expected Quadrat Frequencies\",\n    x = \"Quadrat Number\",\n    y = \"Frequency\",\n    caption = \"Red line indicates expected frequency under CSR\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nThere is large variation in observed frequencies across quadrats\nMost quadrats show frequencies significantly different from expected (red line)\nSeveral quadrats show very high frequencies (&gt;300 schools). Some quadrats show very low frequencies (&lt;100 schools)\nThis pattern suggests strong deviation from CSR"
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#exploratory-data-analysis-city-level",
    "href": "TakehomeEx/THE03/THE03.html#exploratory-data-analysis-city-level",
    "title": "Take Home Exercise 3",
    "section": "5.0 Exploratory Data Analysis (City Level)",
    "text": "5.0 Exploratory Data Analysis (City Level)\nTo gain a more granular understanding of school distribution patterns, we will conduct a detailed analysis at the city level. By examining each city’s school network, we can identify local variations, assess the distribution of public vs private schools, and analyze nearest neighbor relationships.\n\n5.1 School Distribution by City\n\n# Create individual maps for each city\nbatas_utm &lt;- st_transform(batas, 32748)\ncity_maps &lt;- list()\n\nfor(city in unique(batas$city)) {\n  city_boundary &lt;- batas_utm[batas_utm$city == city,]\n  \n  city_schools &lt;- jakarta_schools_utm[st_intersects(jakarta_schools_utm, \n                                                   st_union(city_boundary)) %&gt;% \n                                      lengths &gt; 0,]\n  \n  city_maps[[city]] &lt;- ggplot() +\n    geom_sf(data = city_boundary, \n            aes(fill = popn_density)) +\n    geom_sf(data = city_schools,\n            aes(color = school_level),\n            size = 2,\n            alpha = 0.6) +\n    scale_fill_viridis_c(\n      option = \"plasma\",\n      name = \"Population\\nDensity\",\n      labels = scales::comma_format()\n    ) +\n    scale_color_viridis_d(\n      option = \"plasma\",\n      name = \"School Level\"\n    ) +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 14, face = \"bold\"),\n      plot.subtitle = element_text(size = 12),\n      legend.title = element_text(size = 10),\n      legend.text = element_text(size = 8),\n      plot.margin = margin(10, 10, 10, 10)\n    ) +\n    labs(\n      title = paste(\"Schools Distribution in\", city),\n      subtitle = paste(\"Number of schools:\", nrow(city_schools))\n    )\n}\n\n# Display all maps\nwalk(names(city_maps), function(city) {\n  print(city_maps[[city]])\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKey Observations\n\nJakarta Timur: Most extensive school network with even distribution across the region. There is strong correlation between population density and school locations. Notable clustering in central-north areas where population density reaches 40,000-60,000. Special education facilities well-distributed compared to other regions\nJakarta Barat: Clear north-east educational corridor, dense clustering in eastern regions. Population density hotspots show good school coverage. Relatively even distribution of school levels.\nJakarta Selatan: More dispersed distribution pattern, lower population density, higher proportion of senior high schools. Educational clusters observed in northern districts. Overall, good balance between school types and population needs.\nJakarta Utara: Unique coastal-inland distribution pattern. Strong east-west variation in school density. Population density clusters in central areas. Limited special education facilities, clear correlation between major roads and school locations.\nJakarta Pusat: Highest concentration of schools per unit area, intense clustering in eastern districts. Strong alignment with high population density. Notable educational complexes, since there are multiple school levels in close proximity. However, limited coverage in western sectors.\n\n\n\n5.2 Public School Ratio by City\n\npublic_ratio &lt;- jakarta_schools_utm %&gt;%\n  group_by(city_name) %&gt;%\n  summarise(\n    total_schools = n(),\n    public_schools = sum(school_type == \"Public\"),\n    public_ratio = public_schools / total_schools,\n    .groups = \"drop\"\n  )\n\nggplot(public_ratio) +\n  geom_bar(aes(x = reorder(city_name, public_ratio), \n               y = public_ratio, \n               fill = city_name), \n           stat = \"identity\") +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12)\n  ) +\n  labs(\n    title = \"Public School Ratio by City\",\n    subtitle = \"Proportion of public schools to total schools\",\n    x = \"City\",\n    y = \"Proportion of Public Schools\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nThe public school ratio varies significantly across cities\nThe highest ratios is in Jakarta Selatan, which is surprisingly since South Jakarta has the third highest population in Jakarta\nThis suggests an uneven distribution of public education resources\n\n\n\n5.3 Nearest Neighbour Analysis\n\nnn_analysis &lt;- list()\nfor(city in unique(jakarta_schools_utm$city_name)) {\n  # Get schools for this city\n  city_schools &lt;- jakarta_schools_utm[jakarta_schools_utm$city_name == city,]\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  \n  # Get coordinates and add jitter\n  coords &lt;- st_coordinates(city_schools)\n  jittered_coords &lt;- coords + matrix(\n    runif(nrow(coords) * 2, -0.1, 0.1),\n    ncol = 2\n  )\n  \n  # Create window for this city\n  city_window &lt;- as.owin(st_union(city_boundary))\n  \n  # Filter valid points\n  inside &lt;- inside.owin(x = jittered_coords[,1],\n                       y = jittered_coords[,2],\n                       w = city_window)\n  valid_coords &lt;- jittered_coords[inside,]\n  \n  # Calculate NN statistics\n  points_ppp &lt;- ppp(\n    x = valid_coords[,1],\n    y = valid_coords[,2],\n    window = city_window\n  )\n  \n  # Store results\n  nn_analysis[[city]] &lt;- data.frame(\n    city = city,\n    observed_mean_dist = mean(nndist(points_ppp)),\n    n_points = npoints(points_ppp),\n    area = area.owin(city_window),\n    expected_mean_dist = 1/(2*sqrt(npoints(points_ppp)/area.owin(city_window))),\n    stringsAsFactors = FALSE\n  )\n}\n\nnn_df &lt;- bind_rows(nn_analysis) %&gt;%\n  mutate(R = observed_mean_dist/expected_mean_dist)\n\n\nnn_df %&gt;%\n  select(city, observed_mean_dist, n_points, expected_mean_dist, R) %&gt;%\n  arrange(R) %&gt;%\n  kable(\"html\") %&gt;%\n  kable_styling(\"striped\", full_width = FALSE)\n\n\nggplot(nn_df) +\n  geom_bar(aes(x = reorder(city, R), y = R, fill = city),\n           stat = \"identity\") +\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"red\") +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\"\n  ) +\n  labs(\n    title = \"Nearest Neighbor Analysis by City\",\n    subtitle = \"R &lt; 1 indicates clustering, R &gt; 1 indicates dispersion\",\n    x = \"City\",\n    y = \"R Statistic\"\n  )\n\n\n\n\n\n\n\n\n\nggplot(nn_df) +\n  geom_segment(aes(x = city, xend = city,\n                   y = expected_mean_dist, yend = observed_mean_dist),\n               color = \"gray50\") +\n  geom_point(aes(x = city, y = expected_mean_dist), color = \"blue\", size = 3) +\n  geom_point(aes(x = city, y = observed_mean_dist), color = \"red\", size = 3) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  ) +\n  labs(\n    title = \"Expected vs Observed Mean Nearest Neighbor Distances\",\n    subtitle = \"Blue: Expected, Red: Observed\",\n    x = \"City\",\n    y = \"Distance (meters)\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nAll cities show an R-value &lt; 1 confirming significant clustering\nThe strongest clustering is in Jakarta Pusat (0.48) and most dispersed in Jakarta Barat (0.67)\nAll cities show observed distances significantly lower than expected, confirming non-random distribution\n\n\n\n5.4 Cross K Function Analysis\nPublic vs Private Schools\n\n# Enhanced Cross K Analysis of Public vs Private Schools by City\ncross_k_status &lt;- list()\n\nfor(city in unique(jakarta_schools_utm$city_name)) {\n  # Get schools for this city\n  city_schools &lt;- jakarta_schools_utm[jakarta_schools_utm$city_name == city,]\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  city_window &lt;- as.owin(st_union(city_boundary))\n  \n  # Separate public and private schools\n  public_schools &lt;- city_schools[city_schools$school_type == \"Public\",]\n  private_schools &lt;- city_schools[city_schools$school_type == \"Private\",]\n  \n  # Add jitter to coordinates\n  public_coords &lt;- st_coordinates(public_schools)\n  private_coords &lt;- st_coordinates(private_schools)\n  \n  public_jitter &lt;- public_coords + matrix(\n    runif(nrow(public_coords) * 2, -0.1, 0.1),\n    ncol = 2\n  )\n  private_jitter &lt;- private_coords + matrix(\n    runif(nrow(private_coords) * 2, -0.1, 0.1),\n    ncol = 2\n  )\n  \n  # Filter points within window\n  public_inside &lt;- inside.owin(x = public_jitter[,1],\n                              y = public_jitter[,2],\n                              w = city_window)\n  private_inside &lt;- inside.owin(x = private_jitter[,1],\n                               y = private_jitter[,2],\n                               w = city_window)\n  \n  public_valid &lt;- public_jitter[public_inside,]\n  private_valid &lt;- private_jitter[private_inside,]\n  \n  # Create point pattern if we have valid points\n  if(nrow(public_valid) &gt; 0 && nrow(private_valid) &gt; 0) {\n    points_ppp &lt;- ppp(\n      x = c(public_valid[,1], private_valid[,1]),\n      y = c(public_valid[,2], private_valid[,2]),\n      window = city_window,\n      marks = factor(c(\n        rep(\"Public\", nrow(public_valid)),\n        rep(\"Private\", nrow(private_valid))\n      ))\n    )\n    \n    # Calculate cross K function\n    cross_k &lt;- Kcross(points_ppp, \n                      i = \"Public\", \n                      j = \"Private\",\n                      correction = \"border\")\n    \n    # Calculate theoretical envelope\n    cross_k_env &lt;- envelope(points_ppp, \n                           fun = Kcross,\n                           i = \"Public\",\n                           j = \"Private\",\n                           nsim = 99,\n                           correction = \"border\")\n    \n    cross_k_status[[city]] &lt;- data.frame(\n      r = cross_k$r,\n      theo = cross_k$theo,\n      obs = cross_k$border,\n      env_lo = cross_k_env$lo,\n      env_hi = cross_k_env$hi,\n      city = city\n    )\n  }\n}\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n# Combine results\ncross_k_df &lt;- bind_rows(cross_k_status)\n\n# Create enhanced visualization\nggplot(cross_k_df) +\n  # Add envelope\n  geom_ribbon(aes(x = r, ymin = env_lo, ymax = env_hi),\n              fill = \"grey70\", alpha = 0.3) +\n  # Add theoretical CSR line\n  geom_line(aes(x = r, y = theo), \n            color = \"red\", linetype = \"dashed\") +\n  # Add observed line\n  geom_line(aes(x = r, y = obs, color = city)) +\n  facet_wrap(~city) +\n  scale_color_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    plot.title = element_text(size = 12, face = \"bold\"),\n    strip.text = element_text(size = 10)\n  ) +\n  labs(\n    title = \"Cross K Function: Public vs Private School Interaction\",\n    subtitle = \"Grey band: 95% confidence envelope, Red line: theoretical CSR\",\n    x = \"Distance (r)\",\n    y = \"K(r)\",\n    color = \"City\"\n  )\n\n\n\n\n\n\n\n\nKey Observations\n\nJakarta Barat: Closest alignment to CSR, minimal deviation from theoretical line. Balanced distribution between public and private schools.\nJakarta Pusat: Moderate deviation above CSR line, consistent clustering pattern across distances. Tighter confidence envelope at shorter distances. There is presence of planned co-location of public and private schools.\nJakarta Selatan: Gradual increase in deviation with distance, systematic clustering at neighborhood line.\nJakarta Timur: Strongest deviation above CSR, wide confidence envelope at larger distances. Indicates significant clustering of public and private schools\nJakarta Utara: Most pronounced deviation from CSR, steepest curve especially at larger distances. Strong clustering pattern suggests potential access inequality issues.\n\nInteraction Strength Metrics\n\n# Calculate interaction strength metrics\ninteraction_metrics &lt;- cross_k_df %&gt;%\n  group_by(city) %&gt;%\n  summarise(\n    mean_deviation = mean(obs - theo),\n    max_deviation = max(obs - theo),\n    min_distance = first(r[which.min(abs(obs - theo))]),\n    envelope_exceed = mean(obs &gt; env_hi),\n    .groups = \"drop\"\n  )\n\nggplot(interaction_metrics) +\n  geom_bar(aes(x = reorder(city, mean_deviation), \n               y = mean_deviation,\n               fill = mean_deviation),\n           stat = \"identity\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n  scale_fill_viridis_c(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    legend.position = \"none\"\n  ) +\n  labs(\n    title = \"Mean Deviation from CSR by City\",\n    subtitle = \"Positive values indicate clustering between public and private schools\",\n    x = \"City\",\n    y = \"Mean Deviation from CSR\"\n  )\n\n\n\n\n\n\n\n\nSchool Level Interactions by City\n\n# Enhanced Cross K Function Analysis with Jitter\ncross_k_by_level &lt;- list()\n\nfor(city in unique(jakarta_schools_utm$city_name)) {\n  city_schools &lt;- jakarta_schools_utm[jakarta_schools_utm$city_name == city,]\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  city_window &lt;- as.owin(st_union(city_boundary))\n  \n  school_levels &lt;- unique(city_schools$school_level)\n  \n  for(level1 in school_levels) {\n    for(level2 in school_levels) {\n      if(level1 &lt; level2) {  # Avoid redundant comparisons\n        schools1 &lt;- city_schools[city_schools$school_level == level1,]\n        schools2 &lt;- city_schools[city_schools$school_level == level2,]\n        \n        # Add jitter to coordinates\n        coords1 &lt;- st_coordinates(schools1)\n        coords2 &lt;- st_coordinates(schools2)\n        \n        jitter1 &lt;- coords1 + matrix(runif(nrow(coords1) * 2, -0.1, 0.1), ncol = 2)\n        jitter2 &lt;- coords2 + matrix(runif(nrow(coords2) * 2, -0.1, 0.1), ncol = 2)\n        \n        # Filter points within window\n        inside1 &lt;- inside.owin(x = jitter1[,1], y = jitter1[,2], w = city_window)\n        inside2 &lt;- inside.owin(x = jitter2[,1], y = jitter2[,2], w = city_window)\n        \n        valid1 &lt;- jitter1[inside1,]\n        valid2 &lt;- jitter2[inside2,]\n        \n        # Create point pattern only if we have valid points\n        if(nrow(valid1) &gt; 0 && nrow(valid2) &gt; 0) {\n          points_ppp &lt;- ppp(\n            x = c(valid1[,1], valid2[,1]),\n            y = c(valid1[,2], valid2[,2]),\n            window = city_window,\n            marks = factor(c(\n              rep(level1, nrow(valid1)),\n              rep(level2, nrow(valid2))\n            ))\n          )\n          \n          # Calculate cross K function\n          cross_k &lt;- Kcross(points_ppp, i = level1, j = level2, correction = \"border\")\n          \n          cross_k_by_level[[paste(city, level1, level2, sep=\"_\")]] &lt;- data.frame(\n            r = cross_k$r,\n            theo = cross_k$theo,\n            obs = cross_k$border,\n            city = city,\n            level1 = level1,\n            level2 = level2\n          )\n        }\n      }\n    }\n  }\n}\n\n# Combine results\ncross_k_df &lt;- bind_rows(cross_k_by_level)\n\n# Create visualization\nggplot(cross_k_df) +\n  geom_line(aes(x = r, y = theo), color = \"red\", linetype = \"dashed\") +\n  geom_line(aes(x = r, y = obs, color = paste(level1, \"-\", level2))) +\n  facet_wrap(~city, scales = \"free\") +\n  scale_color_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 10),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    axis.text = element_text(size = 8),\n    strip.text = element_text(size = 10)\n  ) +\n  labs(\n    title = \"Cross K Function Analysis: School Level Interactions by City\",\n    subtitle = \"Red dashed line: theoretical CSR\",\n    x = \"Distance (r)\",\n    y = \"K(r)\",\n    color = \"School Level Pair\"\n  ) +\n  guides(color = guide_legend(nrow = 2))\n\n\n\n\n\n\n\n\nKey Observations\n\nElementary-Junior High: Strongest clustering in all cities. Consistent with educational progression planning. This means that elementary and junior high schools are often co-located. Above CSR line across all distances.\nElementary-Senior High: More varied patterns across cities. Jakarta Timur shows strongest clustering. Jakarta Barat shows more random distribution.\nSpecial Education: Most variable patterns, strongest clustering in Jakarta Utara, weakest clustering in Jakarta Barat.\n\nLevel Pairs by City\n\n# Create separate plots for each school level pair\nlevel_pairs &lt;- unique(paste(cross_k_df$level1, \"-\", cross_k_df$level2))\n\nfor(pair in level_pairs) {\n  pair_data &lt;- cross_k_df %&gt;%\n    filter(paste(level1, \"-\", level2) == pair)\n  \n  p &lt;- ggplot(pair_data) +\n    geom_line(aes(x = r, y = theo), color = \"red\", linetype = \"dashed\") +\n    geom_line(aes(x = r, y = obs, color = city)) +\n    facet_wrap(~city, scales = \"free\") +\n    scale_color_viridis_d(option = \"plasma\") +\n    theme_minimal() +\n    theme(\n      legend.position = \"bottom\",\n      plot.title = element_text(size = 12, face = \"bold\"),\n      axis.text = element_text(size = 8),\n      strip.text = element_text(size = 10)\n    ) +\n    labs(\n      title = paste(\"Cross K Function Analysis:\", pair),\n      subtitle = \"Red dashed line: theoretical CSR\",\n      x = \"Distance (r)\",\n      y = \"K(r)\",\n      color = \"City\"\n    )\n  \n  print(p)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSummary Statistics\n\n# Calculate summary statistics\nsummary_stats &lt;- cross_k_df %&gt;%\n  group_by(city, level1, level2) %&gt;%\n  summarise(\n    mean_deviation = mean(obs - theo),\n    max_deviation = max(obs - theo),\n    min_distance = first(r[which.min(abs(obs - theo))]),\n    .groups = \"drop\"\n  )\n\n# Create summary visualization\nggplot(summary_stats, \n       aes(x = reorder(paste(level1, \"-\", level2), mean_deviation), \n           y = mean_deviation, \n           fill = city)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 12, face = \"bold\")\n  ) +\n  labs(\n    title = \"Mean Deviation from CSR by School Level Pair and City\",\n    x = \"School Level Pair\",\n    y = \"Mean Deviation from CSR\",\n    fill = \"City\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nElementary-Special Education: Highest deviation in Jakarta Utara, negative deviations in western cities. Possibly due to accessibilty challenges.\nJunior High-Special Education: Strong clustering in eastern regions. Infrastructure implications for accessibility.\nElementary-Senior High: More balanced deviation, positive deviations in all eastern cities. Supports educational progression planning.\n\n\n\n5.5 K Function and L Function Analysis\n\nk_l_analysis &lt;- list()\n\nfor(city in unique(jakarta_schools_utm$city_name)) {\n  city_schools &lt;- jakarta_schools_utm[jakarta_schools_utm$city_name == city,]\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  \n  # Create window and points\n  city_window &lt;- as.owin(st_union(city_boundary))\n  coords &lt;- st_coordinates(city_schools)\n  jittered_coords &lt;- coords + matrix(\n    runif(nrow(coords) * 2, -0.1, 0.1),\n    ncol = 2\n  )\n  \n  inside &lt;- inside.owin(x = jittered_coords[,1],\n                       y = jittered_coords[,2],\n                       w = city_window)\n  valid_coords &lt;- jittered_coords[inside,]\n  \n  points_ppp &lt;- ppp(\n    x = valid_coords[,1],\n    y = valid_coords[,2],\n    window = city_window\n  )\n  \n  # Calculate K and L functions\n  k_func &lt;- Kest(points_ppp, correction = \"border\")\n  l_func &lt;- Lest(points_ppp, correction = \"border\")\n  \n  k_l_analysis[[city]] &lt;- list(\n    k = k_func,\n    l = l_func\n  )\n}\n\n# Plot K function\nk_plot_data &lt;- lapply(names(k_l_analysis), function(city) {\n  data.frame(\n    r = k_l_analysis[[city]]$k$r,\n    theo = k_l_analysis[[city]]$k$theo,\n    obs = k_l_analysis[[city]]$k$border,\n    city = city\n  )\n}) %&gt;% bind_rows()\n\np_k &lt;- ggplot(k_plot_data) +\n  geom_line(aes(x = r, y = theo), color = \"red\", linetype = \"dashed\") +\n  geom_line(aes(x = r, y = obs, color = city)) +\n  facet_wrap(~city) +\n  scale_color_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"Ripley's K Function by City\",\n    subtitle = \"Red dashed line: theoretical CSR\",\n    x = \"Distance (r)\",\n    y = \"K(r)\"\n  )\n\n# Plot L function\nl_plot_data &lt;- lapply(names(k_l_analysis), function(city) {\n  data.frame(\n    r = k_l_analysis[[city]]$l$r,\n    theo = k_l_analysis[[city]]$l$theo,\n    obs = k_l_analysis[[city]]$l$border - k_l_analysis[[city]]$l$r,\n    city = city\n  )\n}) %&gt;% bind_rows()\n\np_l &lt;- ggplot(l_plot_data) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n  geom_line(aes(x = r, y = obs, color = city)) +\n  facet_wrap(~city) +\n  scale_color_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"L Function by City\",\n    subtitle = \"L(r) - r, positive values indicate clustering\",\n    x = \"Distance (r)\",\n    y = \"L(r) - r\"\n  )\n\n\np_k\n\n\n\n\n\n\n\n\nKey Observations:\n\nAll cities show positive deviation from CSR indicating non-random spatial clustering of schools.\nThe deviation magnitude varies significantly, showing different planning approaches across Jakarta.\nThe steepness of curves increases with distance, suggesting neighborhood-level educational clusters.\n\n\np_l\n\n\n\n\n\n\n\n\nKey Observations:\n\nIntensity of clustering varies dramatically between North and West\nCentral regions show moderate, consistent clustering\nDistance appears to amplify clustering patterns, particularly in northern regions"
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#kernel-density-estimation-city-level",
    "href": "TakehomeEx/THE03/THE03.html#kernel-density-estimation-city-level",
    "title": "Take Home Exercise 3",
    "section": "6.0 Kernel Density Estimation (City Level)",
    "text": "6.0 Kernel Density Estimation (City Level)\nTo further understand school distribution patterns, we will conduct a Kernel Density Estimation (KDE) analysis at the city level. By examining the density of school locations, we can identify hotspots, assess clustering patterns, and evaluate spatial relationships between schools.\n\n6.1 KDE Analysis\n\n# KDE Analysis by City\nkde_city_level &lt;- list()\n\nfor(city in unique(jakarta_schools_utm$city_name)) {\n  city_schools &lt;- jakarta_schools_utm[jakarta_schools_utm$city_name == city,]\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  city_window &lt;- as.owin(st_union(city_boundary))\n  \n  win_size &lt;- sqrt(area.owin(city_window))\n  \n  kde_city_level[[city]] &lt;- list()\n  \n  coords &lt;- st_coordinates(city_schools)\n  jittered_coords &lt;- coords + matrix(\n    runif(nrow(coords) * 2, -0.1, 0.1),\n    ncol = 2\n  )\n  \n  inside &lt;- inside.owin(x = jittered_coords[,1],\n                       y = jittered_coords[,2],\n                       w = city_window)\n  valid_coords &lt;- jittered_coords[inside,]\n  \n  if(nrow(valid_coords) &gt;= 4) {\n    points_ppp &lt;- ppp(\n      x = valid_coords[,1],\n      y = valid_coords[,2],\n      window = city_window\n    )\n    \n    h &lt;- bw.scott(points_ppp)\n    kde &lt;- density.ppp(points_ppp, \n                      sigma = h,\n                      edge = TRUE,\n                      at = \"pixels\",\n                      dimyx = c(128, 128))\n    \n    kde_city_level[[city]][[\"All\"]] &lt;- list(\n      kde = kde,\n      n_points = nrow(valid_coords),\n      bandwidth = h\n    )\n  }\n  \n  for(level in unique(city_schools$school_level)) {\n    level_schools &lt;- city_schools[city_schools$school_level == level,]\n    coords &lt;- st_coordinates(level_schools)\n    \n    jittered_coords &lt;- coords + matrix(\n      runif(nrow(coords) * 2, -0.1, 0.1),\n      ncol = 2\n    )\n    \n    inside &lt;- inside.owin(x = jittered_coords[,1],\n                         y = jittered_coords[,2],\n                         w = city_window)\n    valid_coords &lt;- jittered_coords[inside,]\n    \n    if(nrow(valid_coords) &gt;= 4) {\n      points_ppp &lt;- ppp(\n        x = valid_coords[,1],\n        y = valid_coords[,2],\n        window = city_window\n      )\n      \n      h &lt;- bw.scott(points_ppp)\n      kde &lt;- density.ppp(points_ppp, \n                        sigma = h,\n                        edge = TRUE,\n                        at = \"pixels\",\n                        dimyx = c(128, 128))\n      \n      kde_city_level[[city]][[level]] &lt;- list(\n        kde = kde,\n        n_points = nrow(valid_coords),\n        bandwidth = h\n      )\n    }\n  }\n}\n\n\ncity_plots &lt;- list()\n\nfor(city in names(kde_city_level)) {\n  plot_list &lt;- list()\n  city_boundary &lt;- adm2_utm[adm2_utm$shapeName == city,]\n  \n  kde_df &lt;- as.data.frame(kde_city_level[[city]][[\"All\"]]$kde)\n  plot_list[[\"All\"]] &lt;- ggplot() +\n    geom_tile(data = kde_df, aes(x = x, y = y, fill = value)) +\n    geom_sf(data = city_boundary, fill = NA, color = \"white\", size = 0.4) +\n    scale_fill_viridis_c(option = \"plasma\", name = \"Density\") +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 10),\n      axis.text = element_text(size = 8),\n      legend.position = \"right\"\n    ) +\n    labs(title = \"All Schools\")\n  \n  legend &lt;- get_legend(plot_list[[\"All\"]])\n  \n  for(level in setdiff(names(kde_city_level[[city]]), \"All\")) {\n    kde_df &lt;- as.data.frame(kde_city_level[[city]][[level]]$kde)\n    plot_list[[level]] &lt;- ggplot() +\n      geom_tile(data = kde_df, aes(x = x, y = y, fill = value)) +\n      geom_sf(data = city_boundary, fill = NA, color = \"white\", size = 0.4) +\n      scale_fill_viridis_c(option = \"plasma\") +\n      theme_minimal() +\n      theme(\n        plot.title = element_text(size = 10),\n        axis.text = element_text(size = 8),\n        legend.position = \"none\"\n      ) +\n      labs(title = level)\n  }\n\n  combined_plots &lt;- wrap_plots(\n    plot_list,\n    ncol = 3,\n    guides = \"collect\"\n  ) +\n    plot_annotation(\n      title = paste(\"School Density Analysis -\", city),\n      theme = theme(\n        plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)\n      )\n    )\n  \n  city_plots[[city]] &lt;- combined_plots\n}\n\nfor(city in names(city_plots)) {\n  ggsave(\n    filename = paste0(\"kde_\", gsub(\" \", \"_\", city), \".png\"),\n    plot = city_plots[[city]],\n    width = 15,\n    height = 12,\n    dpi = 300\n  )\n}\n\n\n\n\n\n\nElementary Schools\n\nConsistent Core Distribution:\n\nForms the backbone of educational infrastructure in all cities\nHighest density clusters align with residential areas\nMore evenly distributed compared to other school types\nStrongest presence in eastern districts of Jakarta Pusat and western areas of Jakarta Timur\n\nEdge Effects:\n\nLower density at city boundaries suggests potential cross-border dependencies\nSome peripheral areas show coverage gaps\nNotable boundary clustering between Jakarta Pusat and Jakarta Timur\n\n\nJunior High Schools\n\nClustering Patterns:\n\nStrong correlation with elementary school locations\nMore concentrated distribution than elementary schools\nClear hotspots in commercial/residential transition zones\nNotable concentration along major transportation corridors\n\n\nSenior High Schools:\n\nStrategic Positioning:\n\nConcentrated in accessible, central locations\nStrong alignment with commercial districts\nClear clustering near transportation hubs\nHigher density in areas with good connectivity\n\nCoverage Patterns:\n\nMore selective location strategy than lower levels\nForms distinct educational nodes\nHigher concentration in developed urban areas\nShows gaps in peripheral regions\n\n\nSpecial Education:\n\nCritical Findings\n\nSeverely limited distribution across all cities\nMost concentrated in Jakarta Pusat and Jakarta Selatan\nSignificant coverage gaps in peripheral areas\nLowest density among all school types\n\nAccess Concerns\n\nLimited accessibility from residential areas\nUneven distribution creates service gaps\nConcentration in affluent areas suggests inequality\n\n\n\n\n6.2 Relative Density Metrics\n\n# Calculate relative densities for each city\ndensity_metrics &lt;- data.frame(\n  city = character(),\n  level = character(),\n  max_density = numeric(),\n  mean_density = numeric(),\n  relative_density = numeric(),\n  stringsAsFactors = FALSE\n)\n\nfor(city in names(kde_city_level)) {\n  city_max &lt;- max(kde_city_level[[city]][[\"All\"]]$kde$v, na.rm = TRUE)\n  \n  for(level in names(kde_city_level[[city]])) {\n    if(level != \"All\") {\n      kde_data &lt;- kde_city_level[[city]][[level]]\n      \n      density_metrics &lt;- rbind(density_metrics, data.frame(\n        city = city,\n        level = level,\n        max_density = max(kde_data$kde$v, na.rm = TRUE),\n        mean_density = mean(kde_data$kde$v, na.rm = TRUE),\n        relative_density = max(kde_data$kde$v, na.rm = TRUE) / city_max,\n        stringsAsFactors = FALSE\n      ))\n    }\n  }\n}\n\n\nggplot(density_metrics, \n                       aes(x = level, y = relative_density, fill = city)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10),\n    plot.margin = margin(20, 20, 20, 20)\n  ) +\n  labs(\n    title = \"Relative Density of School Types by City\",\n    subtitle = \"Maximum density relative to overall school density\",\n    x = \"School Level\",\n    y = \"Relative Density\",\n    fill = \"City\"\n  )\n\n\n\n\n\n\n\n\nKey Observations:\n\nElementary schools dominate the educational landscape (0.4 - 0.7 relative density)\nSecondary schools show remarkably consistent density across cities\nSpecial education facilities are significantly underrepresented across all cities"
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#insights-and-recommendations",
    "href": "TakehomeEx/THE03/THE03.html#insights-and-recommendations",
    "title": "Take Home Exercise 3",
    "section": "7.0 Insights and Recommendations",
    "text": "7.0 Insights and Recommendations\n\n7.1 Key Spatial Patterns\nProvincial Level\n\nClustering Intensity\n\n\nStrong clustering in central Jakarta\nModerate clustering in peripheral areas\nNon-random distribution confirmed by chi-squared test\n\n\nSchool Type Distribution\n\n\nElementary schools show most even distribution\nSecondary schools cluster near transportation nodes\nSpecial education facilities show significant gaps\n\n\nPopulation Alignment\n\n\nStrong correlation in established areas\nMismatches in rapidly developing areas\nNorthern coastal areas underserved\n\nCity Level\n\nJakarta Pusat\n\n\nHighest density, strong public-private integration\n\n\nJakarta Timur\n\n\nMost balanced distribution, strong correlation with population, effective public-private mix\n\n\nJakarta Barat\n\n\nModerate clustering, north-south disparity, transportation corridor alignment\n\n\nJakarta Selatan\n\n\nHighest public school ratio, dispersed distribution pattern, good accessibility score\n\n\nJakarta Utara\n\n\nCoastal inland disparity, limited special-education access, strong east-west variation\n\n\n\n7.2 Critical Issues\n\nInequity in Distributional Access\n\n\nSpecial education facilities concentrated in affluent areas (e.g. Jakarta Pusat)\nPeripheral regions underserved\nTransportation barriers in northern regions\n\n\nPublic-Private Balance\n\n\nVarying ratio across cities\nCompetition in central areas\nComplementary services in periphery\n\n\nSchool Level Progression\n\n\nStrong elementary-junior high correlation\nWeaker junior-senior high alignment sugggests less people make it from junior to senior high possibly due to distribution of schools and accessibility issues\nSpecial education integration challenges\n\n\n\n7.3 Policy Recommendations\nShort-Term Interventions\n\nAccess Enhancement\n\n\nExpand special education in underserved areas\nImprove transportation links to schools\nEstablish mobile educational services\n\nMedium-Term Strategies\n\nInfrastructure Development\n\n\nNew schools in growth areas\nEducational complexes in strategic locations\nSpecial education facility expansion\n\n\nPublic-Private Collaboration\n\n\nJoint planning frameworks\nResource sharing agreements\nStandardized access metrics\n\nLong-Term Vision\n\nSustainable Distribution\n\n\nComprehensive educational network\nIntegrated public-private services\nInclusive special education facilities\n\n\nEducational Equity\n\n\nEqual access for all students\nProgressive school level alignment\nImproved transition rates between school levels"
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#shiny-application-design",
    "href": "TakehomeEx/THE03/THE03.html#shiny-application-design",
    "title": "Take Home Exercise 3",
    "section": "8.0 Shiny: Application Design",
    "text": "8.0 Shiny: Application Design\nYou may access the deployed application here: https://baojieyeo.shinyapps.io/THE03_Demo/\n\n8.1 Application Directory\nThe Shiny component will have the following .R files:\n\nglobal.R: Main file that handles data preprocessing logic, KDE and statistical calculations\nui.R: User interface design and layout\nserver.R: Server-side logic for data processing and visualization\n\nThis is the file structure of the app:\n\napp/\n\nglobal.R\nui.R\nserver.R\ndata/\n\n\n\n\n8.2 Shiny Packages\nIn global.R we define a few shiny packages to be loaded:\n\npacman::p_load(shiny, shinydashboard, shinyWidgets, shinyBS, sf, tidyverse, \n               viridis, spatstat, spdep, DT, plotly, tmap, tmaptools)\n\nIn particular, we load shinydashboard, shinyWidgets, shinyBS. The shineydashboard package will be used to create a dashboard layout, while shinyWidgets and shinyBS will be used for interactive widgets and bootstrap styling.\n\n\n8.3 Motivation\nThe application will provide a comprehensive spatial analysis of school distributions across Jakarta through three main analytical perspectives: Provincial Overview, City Analysis, and Statistical Tests.\nThis tool will enable stakeholders to:\n\nUnderstand educational resource distribution patterns\nIdentify gaps in educational access across districts\nSupport evidence-based decision making for new schools placement\nAnalyze disparities between public and private school distribution\nMonitor and evaluate educational access initiatives\n\nProposed target users:\n\nEducation policymakers\nUrban planners\nSchool administrators\nResearchers analyzing educational equity\nGovernment officials\n\n\n\n8.4 Iterative Design\n\n8.4.1 Initial Single-Page Design\n\n\n\n\n\n\nJakarta Schools Analysis\n\n\n       |\nAnalysis | Spatial Analysis Controls | Visualization | Window | |\n\n\n\nThe initial design was a simple application focused on a two-panel layout that emphasized:\n\nClear visual hierarchy\nEfficient space utilization\n\nHowever, there were a few limitations that were immediately apparent. The design was too simplified and we had to cover both provincial and city level analysis. This meant we had to rethink the layout and add more interactive elements, or separate levels through tabs.\n\n\n8.4.2 Two-Tab Design\n\n\n\n\n\n\nJakarta Schools Analysis\n\n\n[Province] [City]\n\n\n       |\nAnalysis | Main Visualization Controls | | Statistical| Related Statistical Tests | Visualizations | |\n\n\n\nWith two tabs, we could separate the provincial and city level analysis. This allowed for more detailed visualizations and controls for each level. The statistical tests would be grouped together in their respective tabs.\nHowever, there were still limitations to this design.\n\nStatistical tests competed for limited space\nLimited ability to focus on specific analyses\nNavigation between province and city views seemed confusing\nDifficult to compare analyses across different levels\n\n\n\n8.4.3 Final Three-Tab Design\n\n\n\n\n\n\nSpatial Points Patterns Analysis\n\n\n\nThe three tab design would feature the following tabs:\n\nProvincial Overview\nCity Analysis\nStatistical Tests\n\nThis design solved the issue of space limitations and allowed for more detailed visualizations and controls. The statistical tests would have their own tab, and this seemed more efficient.\nIf users were interested to know about what goes on behind the scenes, they could navigate to the statistical tests tab. Naturally, the statistics tab were more important to stakeholders rather than regular users.\nEach visualization panel contains:\n\nTitle bar with blue background\nInteractive visualizations\nCaption and/or descriptions\n\nThis design meets the following requirements\n\nSeparation of concerns across tabs\nChanges in each tab would not affect the others\nImproved visual hierarchy\nEqual emphasis on all analysis types\nDedicated control sidebar present in all views (albeit with some minor differences)\n\n\n\n\n8.5 Application Features\n\n8.4.1 Provincial Analysis\n Purpose\nThe Provincial Overview tab provides macro-level insights into school distribution patterns across Jakarta.\nComponents and Interactions\nLeft Sidebar Controls:\n\n\nSchool Level Filter\nSchool Type Filter\nKDE Bandwidth Filter\n\nMain Visualizations:\n 1. School Distribution Plot (Top Left) * Interactive bar chart showing total schools by city * Hoverable for exact counts * Updates based on selected filters 2. School Density Map (Top Right) * KDE Visualization at the Province Level * Shows spatial clustering of schools * Responds to bandwidth slider * Color intensity indicates school concentration\n\n\nDistribution by Level Plot (Bottom Left)\n\n\nStacked bar chart showing school level proportions\nColor-coded by school level\nInteractive legends\nFiltered by selected school types\n\n\nPopulation Density Map (Bottom Right)\n\n\nBackground context visualization\nStatic display (Not affected by filters)\nHelps identify mismatch between school and population density\n\n\n\n8.4.2 City Analysis\n\nPurpose\nPresents a detailed analysis of school distributions within each city.\nComponents and Interactions\n\nLeft Sidebar Controls:\n\nCity Selector\n\n\nDropdown to select Jakarta city\nPrimary filter for this tab\n\n\nSchool Level Filter\n\n\nSame as Provincial tab\nAffects city-specific visualizations\n\n\nSchool Status Filter\n\n\nSame as Provincial tab\nUpdates city-level analyses\n\nMain Visualizations\n\n\nCity KDE Plot (Top Left)\n\n\nKDE visualization for selected city\nShows school density distribution\nUpdates based on selected filters\nIncludes count in subtitle\n\n\nPublic School Ratio (Top Right)\n\n\nBar chart showing public-private ratio\nFixed across cities for comparison\nUpdates with school type selection\n\n\n\nNearest Neighbor Analysis (Bottom Left)\n\n\nCompares observed vs expected distance\nShows R statistic\nUpdates with all filters\n\n\nCity Statistics Table (Bottom Right)\n\n\nDetailed breakdown of schools\nSortable columns\nResponsive to all filters\n\n\n\n8.4.3 Statistical Tests\n\nPurpose\nThe statistical tests tab provides advanced spatial statistics for pattern analysis.\nMain Visualizations\n\n\nQuadrat Analysis (Top Left)\n\n\nGrid-based spatial distribution test\nShows points and quadrat counts\nChi-square results below plot\n\n\nCross K Function (Top Right)\n\n\nAnalyzes public-private school interactions\nShows observed vs theoretical patterns\n\n\n\nK Function Analysis (Bottom Left)\n\n\nOverall spatial dependence measure\nShows clustering at different scales\n\n\nL Function Analysis (Bottom Right)\n\n\nNormalized version of K Function\nEasier interpretation of clustering patterns"
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#shiny-user-interface-design",
    "href": "TakehomeEx/THE03/THE03.html#shiny-user-interface-design",
    "title": "Take Home Exercise 3",
    "section": "9.0 Shiny: User Interface Design",
    "text": "9.0 Shiny: User Interface Design\n\n9.1 Dashboard Framework and Layout\nThe user interface utilizes shinydashboard to create an application with a clear visual hierarchy. The three-tabbed design is implemented through a persistent sidebar menu that maintains context across different views.\n\n9.1.1. Layout Components\n\nHeaders: Dual-line title with hierarchical typography\nSidebar: Fixed width (300px) navigation and control panel\nBody: Responsive grid-based content area\nBoxes: Consistent 6-column width containers for visualizations\n\n\n\n\n9.2 Color Palette\nPrimary Colors: - Brand Blue: #3c8dbc (Links, buttons, active states) - Dark Background: #2c3b41 (Sidebar) - White: #ffffff (Text, icons) - Muted: #4f5962 (Borders, separators)\nAccent Colors: - Success/Active: #367fa9 - Border Highlight: rgba(255, 255, 255, 0.2)\nThese colors were chosen to maintain a professional, modern look while ensuring readability and accessibility.\n\n\n9.3. Interactivity\n\n\n9.3.1 shinyWidgets components\nPretty Checkbox Groups\n\nprettyCheckboxGroup(\n  inputId = \"schoolLevels\",\n  label = \"School Levels:\",\n  choices = c(\"Elementary\", \"Junior High\", \"Senior High\", \"Special Education\"),\n  status = \"primary\",\n  animation = \"smooth\",\n  icon = icon(\"check\")\n)\n\nThe checkboxes are styled wih the shinyWidgets package to provide enhanced visual feedback, clear active states and improved touch targets.\nPicker Inputs\n\npickerInput(\n  inputId = \"citySelect\",\n  label = \"Select City:\",\n  choices = cities,\n  options = list(\n    style = \"btn-primary\",\n    size = 5,\n    `live-search` = TRUE\n  )\n)\n\nThe pickerInput widget is used to create a dropdown with search functionality. This allows users to quickly find and select the desired city.\n\n\n9.3.2 shinyBS tooltips\n\nbsTooltip(\n  \"provincialBandwidth\",\n  \"Adjust the smoothing parameter for density estimation\",\n  placement = \"right\",\n  options = list(container = \"body\")\n)\n\nWhen adjusting the KDE bandwidth slider, we provide a tooltip to explain the purpose of this control. This improves accessibility while maintaining clear instruction delivery. The positioning of the tooltip is also non-intrusive to the main content.\n\n\n9.4 Visual Container System\n\n9.4.1 Box Components\nEach visualization is contained within a standardized box.\n\nbox(width = 6,\n    plotOutput(\"visualization\"),\n    title = \"Main Title\",\n    subtitle = \"Descriptive subtitle\",\n    status = \"primary\",\n    solidHeader = TRUE,\n    footer = div(\n      class = \"text-muted\",\n      style = \"font-style: italic; padding: 10px;\",\n      \"Contextual information\"\n    )\n)\n\nThe box component includes:\n\nConsistent padding\nClear visual hierarchy\nContextual footers\nSolid headers for emphasis\n\n\n\n9.4.2 Sidebar Sections\n\n.sidebar-section {\n  padding: 10px;\n  margin: 10px 0;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 4px;\n}\n\nThe sidebar controls are different depending on which tab the user is on. The sidebar section is deliberately styled according to the above to provide a clear visual separation from the main content area."
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#shiny-storyboarding",
    "href": "TakehomeEx/THE03/THE03.html#shiny-storyboarding",
    "title": "Take Home Exercise 3",
    "section": "10.0 Shiny: Storyboarding",
    "text": "10.0 Shiny: Storyboarding\n\n10.1 User Personas\nEducation Policymaker\n\nUser Background: Maria, Director of Education Planning\nNeeds: Understand resource distribution, identify underserved areas\nGoals: Make data-driven decisions about new school locations\n\nUrban Planner\n\nUser Background: Ahmad, City Development Analyst\nNeeds: Analyze school accessibility relative to population density\nGoals: Integrate education facilities into urban development plans\n\nSchool Administrator\n\nUser Background: James, Private School Network Manager\nNeeds: Understand market gaps and opportunities\nGoals: Strategic planning for new educational facilities\n\n\n\n10.2 User Journey Map\n\n10.2.1 Initial Engagement\n\nEntry Point: Provincial Overview Tab\nFirst Impressions: School Distribution Chart\nProgression: KDE Map Exploration\nContext Building: Population Density Comparison\n\n\n\n10.2.2 Learning Flow\nProvincial Level Understanding\nStep 1: Overall Distribution - Views total school counts across cities - Notices East Jakarta has highest concentration - Questions: “Why this distribution?”\nStep 2: Density Patterns - Explores KDE map - Adjusts bandwidth to see clustering - Insight: Schools cluster in urban centers\nStep 3: Educational Level Analysis - Switches to level distribution - Compares proportions across cities - Discovery: Elementary schools dominate\nCity Level Deep Dive\nStep 1: City Selection - Chooses area of interest - Focuses on local patterns - Compares with provincial context\nStep 2: Public-Private Balance - Examines ownership ratios - Notes variations by district - Identifies service gaps\nStep 3: Spatial Analysis - Studies nearest neighbor results - Understands clustering patterns - Forms hypotheses about distribution\nStatistical Validation\nStep 1: Pattern Confirmation - Reviews quadrat analysis - Validates clustering observations - Builds confidence in findings\nStep 2: Cross-Analysis - Examines K-functions - Understands spatial relationships - Confirms or adjusts hypotheses\n\n\n\n10.3 Key Learning Moments\n\n10.3.1 Distribution Insights\nUser Thought Process\n\n“I see East Jakarta has the most schools, but…” -&gt;\n“The density map shows concentrations in unexpected areas” -&gt;\n“Population density explains some patterns, but not all” -&gt;\n“There might be historical or socioeconomic factors at play”\n\n\n\n10.3.2 Accessibility Analysis\nUser Realization Path\n\n“High school distribution seems more clustered than elementary” -&gt;\n“This makes sense given transportation capabilities of older students” -&gt;\n“But some areas might still be underserved” -&gt;\n“Need to compare with population age demographics”\n\n\n\n10.3.3 Policy Implications\nDecision-Making Process\n\n“Statistical tests confirm non-random distribution” -&gt;\n“Some areas show significant clustering” -&gt;\n“Need to balance between concentration and accessibility” -&gt;\n“Can identify priority areas for new facilities”\n\n\n\n\n10.4 Knowledge Building\n\n10.4.1 Core Insights\n\nSpatial Distribution Understanding\n\n\nPattern recognition\nClustering identification\nAccess gap discovery\n\n\nEducational Resource Balance\n\n\nPublic-private dynamics\nLevel distribution patterns\nService coverage analysis\n\n\nStatistical Validation\n\n\nPattern confirmation\nSignificance understanding\nEvidence-based conclusions\n\n\n\n10.4.2 Applied Learning\nObservation → Analysis → Validation → Action Example: Notices clustering → Examines local factors → Confirms statistical significance → Identifies development opportunities\nThis proposed storyboard emphasizes user discovery and learning, guiding stakeholders through meaningful analysis while maintaining flexibility for different analytical approaches. Each interaction builds upon previous knowledge, creating a comprehensive understanding of Jakarta’s educational landscape."
  },
  {
    "objectID": "TakehomeEx/THE03/THE03.html#references",
    "href": "TakehomeEx/THE03/THE03.html#references",
    "title": "Take Home Exercise 3",
    "section": "References",
    "text": "References\n\nClaude AI. (n.d.). Claude AI. https://claude.ai/\nKraak, M. J. (2020). Advanced Applications of Spatial Analysis Dashboards. International Journal of Geographical Information Science.\nSeah, G. (2021). “Building a Storyboard for Analytics Dashboard”. https://giniceseah.netlify.app/posts/2021-07-31-storyboard/\nShneiderman, B., et al. (2016). Designing the User Interface: Strategies for Effective Human-Computer Interaction (6th ed.). Pearson."
  }
]