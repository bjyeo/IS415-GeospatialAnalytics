{
  "hash": "1d8821a3608fa54542cf73eb5aa20acb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 6\"\nauthor: \"Bao Jie Yeo\"\ndate: '2024-09-18'\ndate-modified: '2024-09-18'\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# Part 1: Global Measures of Spatial Autocorrelation\n\nIn this exercise, we explore ways to compute Global Measures of Spatial Autocorrelation (GMSA):\n\n* Compute GSA statistics using appropraite functions in the **spdep** functions\n  * Plotting Moran scatterplot and Moran's I correlogram\n  * Compute Moran's I and Geary's C\n* Provide statistically correct interpretations of GSA statistics\n\n## Getting Started\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, tmap, tidyverse)\n```\n:::\n\n\n## Import Geospatial Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Hunan' from data source \n  `C:\\Users\\Home\\Desktop\\bjyeo\\IS415-GeospatialAnalytics\\HandsOnEx\\Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(County)`\n```\n\n\n:::\n:::\n\n\n### Visualizing Regional Development Indicator\n\n\n::: {.cell}\n\n```{.r .cell-code}\nequal <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\",\n            main.title.size = 0.85,\n            legend.title.size = 0.75,\n            legend.text.size = 0.5,)\n\nquantile <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\",\n            main.title.size = 0.85,\n            legend.title.size = 0.75,\n            legend.text.size = 0.5,)\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n```\n\n::: {.cell-output-display}\n![](Ex06_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.callout-note collapse=\"false\" title=\"Chloropleth Map Observations\"}\nIn the two maps above, we visualize the GDPPC in Hunan province using two different classification methods: equal interval and quantile. In the left map, we use **equal** interval classification to divide the data into 5 classes. In the right map, we use **quantile** classification to divide the data into 5 classes.\n\nNotice that the two maps show different patterns of regional development. The equal interval classification map shows that the highest GDPPC values are **concentrated in the central and eastern parts of the province**, while the quantile classification map shows that the highest GDPPC values are **concentrated in the central and southern parts of the province**.\n:::\n\n## Global Measures of Spatial Autocorrelation\n\n### Computing Contiguity Spatial Weights\n\nBefore computing GSA, we need to construct a spatial weights of the study area. As we learnt in last week's exercise, we can use the `poly2nb` function to create a spatial weights matrix based on polygon contiguity.\n\nWe can use the Queen contiguity criterion to define neighbors. This criterion considers two polygons as neighbors if they share a common boundary or a vertex.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n```\n\n\n:::\n:::\n\n\n### Row-standardized weights matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n```\n\n\n:::\n:::\n\n\n\n::: {.callout-note title=\"Spatial Weights Matrix Observations\"}\n\nThe distribution of connections gives us an idea of Hunan's spatial structure. The variation in the number of links suggests a diverse spatial pattern, with some isolated areas and some highly connected central regions.\n\nWhen creating our row-standardized weights matrix, this step is crucial for spatial analysis. Style **\"W\"** assigns equal weights to neighbors, summing to 1 for each region. Setting `zero.policy = TRUE` handles regions with no neighbors, preventing errors in subsequent analyses.\n:::\n\n## GSA: Moran's I\n\nMoran's I statistics can be performed using the `moran.test` function in the **spdep** package. This function computes the Moran's I statistic and its associated p-value.\n\n::: {.callout-tip title=\"Moran's I Interpretation\"}\n\nDeveloped by Patrick Alfred Pierce Moran, Moran's I is a measure of spatial autocorrelation that ranges from -1 to 1. A value close to 1 indicates positive spatial autocorrelation, meaning similar values are clustered together. A value close to -1 indicates negative spatial autocorrelation, meaning dissimilar values are clustered together. A value close to 0 indicates no spatial autocorrelation.\n\nWhy is it useful? Moran's I helps us understand the spatial distribution of a variable and identify spatial patterns that may be hidden in the data.\n:::\n\n### Moran's I test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n```\n\n\n:::\n:::\n\n\nQuestion: What statistical conclusion can you draw from the output above?\n\n**Answer:** \n\n* The Moran I statistic is approximately 0.3007, indicating a positive spatial autocorrelation in the GDPPC across Hunan\n* The p-value is much less than the usual significance levels of 0.05 or 0.01, which might suggest that the spatial autocorrelation is statistically significant.\n* Hypothesis Test:\n  * Null Hypothesis ($H_0$): There is no spatial autocorrelation (spatial randomness)\n  * Alternative Hypothesis ($H_1$): There is positive spatial autocorrelation (greater than spatial randomness)\n* Conclusion: Given the very small p-value we reject the null hypothesis and conclude that there is **positive spatial autocorrelation** in the GDPPC across Hunan.\n\n### Computing Monte Carlo Moran's I\n\nWe can perform a permutation test for Moran's I statistic using the `moran.mc` function. This function generates a Monte Carlo simulation to estimate the p-value of the Moran's I statistic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\nQuestion: What statistical conclusion can you draw from the output above?\n\n**Answer:**\n\n* The observed Moran's I statistic is 0.3007, which is within the range of simulated values.\n* The p-value is 0.001, which is less than common significance values of 0.01 or 0.05\n* Conclusion: Given that we've run 1000 Monte Carlo Simulations and the p-value still remains very low, we can conclude that the spatial autocorrelation in GDPPC across Hunan is statistically significant.\n\n### Visualizing Monte Carlo Moran's I\n\nThe Monte Carlo simulation can be visualized by plotting the distribution of simulated Moran's I values and highlighting the observed Moran's I value.\n\nWe can use `hist()` and `abline()` functions for data visualization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.007182342\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.004295062\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.200131 -0.052501 -0.013190 -0.007182  0.034529  0.228826 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Ex06_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nQuestion: What statistical observation can you draw from the output above?\n\n**Answer:**\n\n* Distribution: The histogram shows the distribution of simulated Moran's I values under the null hypothesis of spatial randomness. The distribution appears to be approximately normal, slightly left-skewed.\n* Central Tendency: The mean and median are close to zero but slightly negative, which is within expectations for spatial randomness.\n* Variance: The range and variance indicate moderate variability in the simulated values.\n* Comparison to Observed Moran's I: The red vertical line at 0 represents the expected value under complete spatial randomness. Around 88.79% of the simulated values fall within the range of -0.1 to 0.1, with very few extreme values.\n\n::: {.cell}\n\n```{.r .cell-code}\nsimulated_values <- bperm$res[1:999]\ncount_in_range <- sum(simulated_values >= -0.1 & simulated_values <= 0.1)\npercentage_in_range <- (count_in_range / length(simulated_values)) * 100\nprint(paste0(\"Percentage of values between -0.1 and 0.1: \", \n             round(percentage_in_range, 2), \"%\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Percentage of values between -0.1 and 0.1: 88.79%\"\n```\n\n\n:::\n:::\n\n* Conclusion: TThe simulated distribution shows most values clustered between -0.1 and 0.1. Any observed Moran's I value substantially outside this range would be considered statistically significant, indicating positive spatial autocorrelation in the GDPPC across Hunan.\n\n### Challenge: Visualizing Monte Carlo Moran's I with ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggplot2)\n\ndf <- data.frame(moran_i = bperm$res[1:999])\n\nggplot(df, aes(x = moran_i)) +\n  geom_histogram(bins = 20, fill = \"lightgrey\", color = \"black\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"solid\", linewidth = 1) +\n  labs(title = \"Histogram of Simulated Moran's I\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](Ex06_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## GSA: Geary's C\n\n::: {.callout-tip title=\"Geary's C Interpretation\"}\nGeary's C, developed by Robert J. Geary, is another measure of spatial autocorrelation that ranges from 0 to 2. A value close to 0 indicates positive spatial autocorrelation, while a value close to 2 indicates negative spatial autocorrelation. A value of 1 indicates spatial randomness.\n\nMoran and Geary statistics are similar but have different interpretations. Geary's C is less sensitive to extreme values and is often used as an alternative to Moran's I.\n:::\n\n### Geary's C test\n\nThe **spdep** package provides the `geary.test` function to compute Geary's C statistic and its associated p-value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeary.test(hunan$GDPPC, listw=rswm_q)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n```\n\n\n:::\n:::\n\n\nQuestion: What statistical conclusion can you draw from the output above?\n\n**Answer:**\n\n* Test Statistic: The Geary C statistic is approximately 0.6907, indicating positive spatial autocorrelation in the GDPPC across Hunan.\n  * Strength of Autocorrelation: The value of 0.6907 is closer to 1 than 0, which could suggest a moderately positive spatial autocorrelation.\n* p-value: The p-value is 0.0001526 which is significantly smaller than the common significance values of 0.05 or 0.01\n* Hypothesis Test:\n  * Null Hypothesis ($H_0$): There is no spatial autocorrelation (spatial randomness)\n  * Alternative Hypothesis ($H_1$): The expectation is greater than the statistic, indicating positive spatial autocorrelation\n* Conclusion: Given the very small p-value, we reject the null hypothesis of spatial randomness. We conclude that there is significant positive spatial autocorrelation in the GDPPC across Hunan. This means regions with similar GDPPC values tend to be located near each other more often than would be expected by chance\n\n### Comparing Moran's I and Geary's C\n\nNow that we have computed both Moran's I and Geary's C statistics, let's compare the results.\n\nThe results from Geary C's test is **consistent** with Moran's I test, indicating **positive spatial autocorrelation** in the GDPPC across Hunan.\n\nIt is interesting to note that unlike Moran's I, a lower Geary's C value indicates stronger positive  autocorrelation. The value of 0.6907223 (less than 1) confirms positive autocorrelation.\n\n### Computing Monte Carlo Geary's C\n\nLikewise, we can run a Monte Carlo simulation to estimate the p-value of Geary's C statistic using the `geary.mc` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 2, p-value = 0.002\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\nQuestion: What statistical conclusion can you draw from the output above?\n\n**Answer:**\n\n* The observed Geary's C statistic is 0.6907, which falls within the range of simulated values.\n* The p-value is 0.002, which is less than common significance values of 0.01 or 0.05\n* Conclusion: Given that we've run 1000 Monte Carlo Simulations and the p-value still remains very low, we can conclude that the spatial autocorrelation in GDPPC across Hunan is statistically significant.\n\n### Visualizing the Monte Carlo Geary's C\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9953715\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.00723939\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.6827  0.9404  0.9960  0.9954  1.0535  1.2888 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](Ex06_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nQuestion: What statistical observation can you draw from the output above?\n\n**Answer:**\n\n* Distribution: The histogram shows the distribution of simulated Geary's C values under the null hypothesis of spatial randomness. The distribution appears to be approximately normal and roughly symmetric around 1.\n* Central Tendency: The mean and median are close to 1, which is the expected value under spatial randomness.\n* Variance: The range and variance indicate moderate variability in the simulated values.\n* Comparison to Observed Geary's C: The observed Geary's C is much lower than the mean of the simulated values. It falls at the extreme left tail of the distribution, indicating strong positive spatial autocorrelation.\n* Conclusion: The Monte Carlo simulation strongly supports the conclusion of significant positive spatial autocorrelation in the GDPPC across Hunan. The observed Geary's C value is extremely unlkiely to occur under conditions of spatial randomness, reinforcing the earlier findings from both the analytical Geary's C test and the Moran's I test.\n\n## Spatial Correlogram\n\nA spatial correlogram is a graphical representation of spatial autocorrelation at different distance lags. It helps us understand how spatial autocorrelation changes with distance. \n\nAlthough correlograms are not as fundamental as variograms like in geostatistics, they provide valuable insights into spatial patterns.\n\nThe **spdep** package offers the `sp.correlogram` function to compute and visualize a spatial correlogram.\n\n### Computing Moran's I Correlogram\n\nCompute a 6-lag spatial correlogram of GDPPC. The parameter `order` specifies the number of distance lags to consider. If we were to use fewer lags, we might miss important patterns in the data. However, using too many lags can make the correlogram difficult to interpret.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMI_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n```\n\n::: {.cell-output-display}\n![](Ex06_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(MI_corr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\nQuestion: What statistical observation can you draw from the plot above?\n\n**Answer:**\n\nThe spatial correlogram demonstrates strong evidence of spatial clustering of GDPPC in Hunan. The spatial dependence is strongest among immediate neighbors and remains significant up to third-order neighbors.\n\nThe Moran's I values decrease as the distance lag increases, suggesting that spatial autocorrelation decreases with distance. However, the values remain positive, indicating that regions with similar GDPPC values tend to be clustered together at various distances.\n\n### Computing Geary's C Correlogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGC_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n```\n\n::: {.cell-output-display}\n![](Ex06_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(GC_corr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\nQuestion: What statistical observation can you draw from the plot above?\n\n**Answer:**\n\nThe spatial correlogram shows the Geary's C values at different distance lags. The Geary's C values are negative across all distance lags, indicating positive spatial autocorrelation in the GDPPC across Hunan.\n\nThe Geary's C values increase as the distance lag increases, suggesting that spatial autocorrelation decreases with distance. However, the values remain negative, indicating that regions with similar GDPPC values tend to be clustered together at various distances.\n\n::: {.callout-tip title=\"MI_corr vs GC_corr\"}\nWhy does MI_corr trend upward while GC_corr trends downward?\n\n**Answer:**\n\n* Moran's I (MI) measures positive spatial autocorrelation, so higher values indicate stronger clustering of similar values.\n* Geary's C (GC) can be interpreted as inverse to Moran's I, so lower values indicate positive spatial autocorrelation.\n* The upward trend in Moran's I correlogram indicates that regions with similar GDPPC values are more clustered at shorter distances.\n* The downward trend in Geary's C correlogram indicates that regions with similar GDPPC values are more clustered at shorter distances.\n\n:::\n\n### Challenge: Visualizing Moran's I and Geary's C Correlogram with ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMI_corr_df <- data.frame(lag = as.numeric(rownames(MI_corr$res)),\n                         moran_i = MI_corr$res[, 1])\nGC_corr_df <- data.frame(lag = as.numeric(rownames(GC_corr$res)),\n                         geary_c = GC_corr$res[, 1])\nggplot() +\n  geom_line(data = MI_corr_df, aes(x = lag, y = moran_i, color = \"Moran's I\")) +\n  geom_point(data = MI_corr_df, aes(x = lag, y = moran_i, color = \"Moran's I\")) +\n  geom_line(data = GC_corr_df, aes(x = lag, y = geary_c, color = \"Geary's C\")) +\n  geom_point(data = GC_corr_df, aes(x = lag, y = geary_c, color = \"Geary's C\")) +\n  scale_color_manual(values = c(\"Moran's I\" = \"blue\", \"Geary's C\" = \"red\")) +\n  labs(title = \"Spatial Correlograms\",\n       x = \"Distance Lag\",\n       y = \"Correlation\",\n       color = \"Measure\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Ex06_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Ex06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}