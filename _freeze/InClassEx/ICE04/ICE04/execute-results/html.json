{
  "hash": "7af50294af31d8275e25aa96097de46d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 4\"\nauthor: \"Bao Jie Yeo\"\ndate: '2024-09-09'\nlast-modified: '2024-09-09'\nexecute: \n  eval: false\n  echo: true\n  freeze: true\n---\n\n\n## Loading Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse)\n```\n:::\n\n\n## Import and Prepare Study Area\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb_sf <- st_read(dsn=\"data/rawdata\",\n               layer=\"Kepulauan_Bangka_Belitung\") |>\n  st_union() |>\n  st_zm(drop=TRUE, what=\"ZM\") |>\n  st_transform(crs=32748)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb_owin <- as.owin(kbb_sf)\nkbb_owin\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(kbb_owin)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_sf <- read.csv(\"data/rawdata/forestfires.csv\") %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %>%\n  st_transform(crs = 32748)\nfire_sf\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_sf <- fire_sf |>\n  mutate(DayOfYear = yday(acq_date)) |>\n  mutate(Month_num = month(acq_date)) |>\n  mutate(Month_fac = month(acq_date,\n                           label = TRUE,\n                           abbr = FALSE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(kbb_sf) +\n  tm_polygons() +\n  tm_shape(fire_sf) +\n  tm_dots()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(kbb_sf) +\n  tm_polygons() +\n  tm_shape(fire_sf) +\n  tm_dots(size=0.1) +\n  tm_facets(by=\"Month_fac\",\n            free.coords=FALSE,\n            drop.units=TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month <- fire_sf |>\n  select(Month_num)\nfire_month\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month_ppp <- as.ppp(fire_month)\nfire_month_ppp\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fire_month_ppp)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month_owin <- fire_month_ppp[kbb_owin]\nsummary(fire_month_owin)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(fire_month_owin)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_kde <- spattemp.density(fire_month_owin)\nsummary(st_kde)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntims <- c(7,8,9,10,11,12)\npar(mfcol=c(2,3))\nfor(i in tims) {\n  plot(st_kde, i,\n       override.par=FALSE,\n       fix.range=TRUE,\n       main=paste(\"KDE at month\", i))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_yday_ppp <- fire_sf |>\n  select(DayOfYear) |>\n  as.ppp()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_yday_owin <- fire_yday_ppp[kbb_owin]\nsummary(fire_yday_owin)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_yday <- spattemp.density(fire_yday_owin)\nsummary(kde_yday)\n```\n:::\n\nLimit plot kde_yday to specific days e.g. 30, 60, 90, 120, 150, 180\n\n::: {.cell}\n\n```{.r .cell-code}\ntims <- c(30,60,90,120,150,180,210,240,270,300,330,352)\npar(mfcol=c(2,3))\nfor(i in tims) {\n  plot(kde_yday, i,\n       override.par=FALSE,\n       fix.range=TRUE,\n       main=paste(\"KDE at day\", i))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nBOOT.spattemp(fire_yday_owin)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntims <- c(30,60,90,120,150,180,210,240,270,300,307,352)\npar(mfcol=c(2,3))\nfor(i in tims) {\n  plot(kde_yday, i,\n       override.par=FALSE,\n       fix.range=TRUE,\n       main=paste(\"KDE at day\", i))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# | echo: false\n# | eval: false\nlibrary(animation)\nlibrary(spatstat)\n\ndata(fmd)\nfmd_case <- fmd$cases\nfmd_cont <- fmd$controls\n\n# Estimate bandwidths and create density/risk maps\nhlam <- LIK.spattemp(fmd_case)\nf.breve <- spattemp.density(fmd_case, h=hlam[1], lambda=hlam[2], tlim=c(10, 352))\ng.tilde <- bivariate.density(fmd_cont, h0=hlam[1])\nrho.breve <- spattemp.risk(f=f.breve, g=g.tilde, tolerate=TRUE)\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}