---
title: "In Class Exercise 11"
author: "Bao Jie Yeo"
date: '2024-11-04'
date-modified: '2024-11-04'
execute: 
  eval: true
  echo: true
  freeze: true
---

## Loading Packages

```{r}
pacman::p_load(tidyverse, sf, tmap, httr, performance)
```

## Importing Data

```{r}
folder_path <-  "data/aspatial"
file_list <-  list.files(path = folder_path,
                         pattern = "^realis.*\\.csv$",
                         full.names = TRUE)
realis_data <- file_list %>% 
  map_dfr(read_csv)
```

## Data Preprocessing

```{r}
condo_resale <- realis_data %>% 
  mutate(`Sale Date` = dmy(`Sale Date`)) %>% 
  filter(`Type of Sale` == "Resale" & `Property Type` == "Condominium")
```

## Geocoding

```{r}
postcode <- unique(condo_resale$`Postal Code`)
```

```{r}
#| eval: false
url <- "https://onemap.gov.sg/api/common/elastic/search"
found <- data.frame()
not_found <- data.frame()

for (post in postcode) {
  query <-  list('searchVal'=post, 'returnGeom' = 'Y',
                 'getAddrDetails' = 'Y', 'pageNum'='1')
  res <- GET(url, query=query)
  if(content(res)$found !=0) {
    found <- rbind(found, data.frame(content(res))[4:13])
  } else {not_found = data.frame(post)}
}
```

## Tidying Field Names

```{r}
found <- found %>% 
  select(c(6:8)) %>% 
  rename(POSTAL = `results.POSTAL`,
         XCOORD = `results.X`,
         YCOORD = `results.Y`)
```

## Converting to Point Feature Data Frame

### Joining Tables

```{r}
condo_resale_geocoded = left_join(
  condo_resale, found, by = c('Postal Code' = 'POSTAL'))
```

### Converting to sf object

```{r}
condo_resale_sf <- st_as_sf(condo_resale_geocoded,
                            coords = c("XCOORD", "YCOORD"),
                            crs=3414)
```

## Cleaning Spatial Data

### Check Overlapping Point Features

```{r}
overlapping_points <- condo_resale_sf %>% 
  mutate(overlap = lengths(st_equals(., .)) > 1)
```

### Spatial Jittering

```{r}
condo_resale_sf <- condo_resale_sf %>% 
  st_jitter(amount=2)
```